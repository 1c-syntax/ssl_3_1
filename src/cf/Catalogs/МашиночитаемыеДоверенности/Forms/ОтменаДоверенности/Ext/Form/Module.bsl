///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Доверенность = Параметры.Доверенность;
	НомерДоверенности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Доверенность, "НомерДоверенности");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтменитьДоверенность(Команда)
	ДанныеОтмены = МашиночитаемыеДоверенностиФНССлужебныйВызовСервера.ПолучитьФайлОтменыДоверенности(Доверенность, ПричинаОтмены);
	ОписаниеДанных = Новый Структура;
	ОписаниеДанных.Вставить("Операция", НСтр("ru='Отмена доверенности'"));
	ОписаниеДанных.Вставить("ЗаголовокДанных", НСтр("ru='Доверенность'"));
	ОписаниеДанных.Вставить("Данные", ДанныеОтмены.Содержимое);

	ЭлектроннаяПодписьКлиент.Подписать(ОписаниеДанных,,Новый ОписаниеОповещения("ОтправитьОтменуДоверенности", ЭтотОбъект, ДанныеОтмены));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтправитьОтменуДоверенности(Результат, ДанныеОтмены) Экспорт
	Если Результат.Успех Тогда
		
		Если ТипЗнч(Результат.СвойстваПодписи) = Тип("Структура") Тогда
			СвойстваПодписи = Результат.СвойстваПодписи;
		Иначе
			СвойстваПодписи = ПолучитьИзВременногоХранилища(Результат.СвойстваПодписи);
		КонецЕсли;
	
		Если Не СвойстваПодписи.ПодписьВерна 
			И СвойстваПодписи.ТребуетсяПроверка = Ложь Тогда
			
			ТекстОшибки = НСтр("ru='Сертификат подписи не прошел проверку.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			
		КонецЕсли;
		
		РезультатОтмены = МашиночитаемыеДоверенностиФНССлужебныйВызовСервера.ОтменитьМЧДРР(ДанныеОтмены.ИмяФайла, ДанныеОтмены.Содержимое, СвойстваПодписи.Подпись, ДанныеОтмены.Доверенность);
		
		Если ЗначениеЗаполнено(РезультатОтмены.Ошибка) Тогда
			КонтекстОшибки = МашиночитаемыеДоверенностиФНССлужебныйКлиент.КонтекстДляОбработкиОшибкиРР();
			КонтекстОшибки.ЗаголовокПредупреждения = НСтр("ru='Не удается отменить доверенность.'");
			МашиночитаемыеДоверенностиФНССлужебныйКлиент.ОбработатьОшибкуВзаимодействияРР(РезультатОтмены.Ошибка, КонтекстОшибки);
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(НСтр("ru='Заявление отправлено'"), ПолучитьНавигационнуюСсылку(Доверенность), 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отмена доверенности %1.'"), НомерДоверенности));
		ДобавитьФайлОтзываИПолучитьРезультатРегистрации(ДанныеОтмены, СвойстваПодписи);
		ОповеститьОбИзменении(Доверенность);
		
		Оповестить("РегистрацияОтмены", Доверенность, "ФормаОтмены");
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры   

&НаСервере
Функция ДобавитьФайлОтзываИПолучитьРезультатРегистрации(ДанныеОтмены, СвойстваПодписи)
	ФайлДоверености = Новый Файл(ДанныеОтмены.ИмяФайла);
	ПараметрыДобавления = РаботаСФайлами.ПараметрыДобавленияФайла();
	ПараметрыДобавления.ВладелецФайлов = Доверенность;
	ПараметрыДобавления.ИмяБезРасширения = ФайлДоверености.ИмяБезРасширения;
	ПараметрыДобавления.РасширениеБезТочки = ФайлДоверености.Расширение;
	ПараметрыДобавления.Служебный = Истина;
	ФайлЗаявленияНаОтмену = РаботаСФайлами.ДобавитьФайл(ПараметрыДобавления, ДанныеОтмены.Содержимое);
	
	ЭлектроннаяПодпись.ДобавитьПодпись(ФайлЗаявленияНаОтмену, СвойстваПодписи);
	
	ОбъектМЧД = Доверенность.ПолучитьОбъект();
	ОбъектМЧД.ФайлЗаявленияНаОтмену = ФайлЗаявленияНаОтмену;
	ОбъектМЧД.Статус = Перечисления.СтатусыМЧД.НеДействует;
	ОбъектМЧД.ОбменДанными.Загрузка = Истина;
	ОбъектМЧД.Записать();
КонецФункции

#КонецОбласти