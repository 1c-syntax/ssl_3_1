///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ПриПолученииФильтраДляВыбораПодписей(Фильтр) Экспорт
	
	// Локализация
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.МашиночитаемыеДоверенности") Тогда
		Фильтр = НСтр("ru = 'Файлы подписи (*.p7s, *.sig%1), МЧД (*.xml, *.zip)|*.p7s;*.sig%2;*.xml;*.zip'");
	КонецЕсли;
	// Конец Локализация
	
КонецПроцедуры

Процедура ПриПолученииСпискаВыбораМашиночитаемыхДоверенностей(Форма, ТекущиеДанные, СписокВыбора) Экспорт
	
	// Локализация
	
	Доверенности = Форма.Доверенности;
	Если ЗначениеЗаполнено(ТекущиеДанные.ПоляОтбора) Тогда
		ПоляОтбора = СтрРазделить(ТекущиеДанные.ПоляОтбора, ";");
		
		Для Каждого Доверенность Из Доверенности Цикл
			Для Каждого Элемент Из ПоляОтбора Цикл
				Если СтрНайти(Доверенность.ПоляОтбора, Элемент) <> 0 Тогда
					СписокВыбора.Добавить(Доверенность.НомерДоверенности, Доверенность.МашиночитаемаяДоверенность);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	// Конец Локализация
	
КонецПроцедуры

Процедура ПриВыбореМашиночитаемойДоверенности(ОбработчикЗавершения, ТекущиеДанные) Экспорт
	
	// Локализация
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.МашиночитаемыеДоверенности") Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваПодписи = ПолучитьИзВременногоХранилища(ТекущиеДанные.АдресСвойствПодписи);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СертификатПредставителя", СвойстваПодписи.Сертификат);
	ПараметрыФормы.Вставить("НаДату", СвойстваПодписи.ДатаПодписи);
	ПараметрыФормы.Вставить("ТолькоДействующие", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);

	МодульМашиночитаемыеДоверенностиФНСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("МашиночитаемыеДоверенностиФНСКлиент");
	МодульМашиночитаемыеДоверенностиФНСКлиент.ОткрытьСписокМЧД(ПараметрыФормы, ОбработчикЗавершения);
	
	// Конец Локализация
	
КонецПроцедуры

Процедура ПриОпределенииФайловМашиночитаемыхДоверенностей(ФайлыМашиночитаемыхДоверенностей,
		КоллекцияПодписей) Экспорт
		
	// Локализация
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.МашиночитаемыеДоверенности") Тогда
		Возврат;
	КонецЕсли;
	
	МашиночитаемыеДоверенности = Новый Массив;
		
	Для Каждого Подпись Из КоллекцияПодписей Цикл
		Для Каждого МашиночитаемаяДоверенность Из Подпись.МашиночитаемаяДоверенность Цикл
			Если МашиночитаемыеДоверенности.Найти(МашиночитаемаяДоверенность.Значение) = Неопределено Тогда
				МашиночитаемыеДоверенности.Добавить(МашиночитаемаяДоверенность.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Если МашиночитаемыеДоверенности.Количество() > 0 Тогда
		МодульМашиночитаемыеДоверенностиФНССлужебныйВызовСервера = ОбщегоНазначенияКлиент.ОбщийМодуль(
			"МашиночитаемыеДоверенностиФНССлужебныйВызовСервера");
		ФайлыМашиночитаемыхДоверенностей = МодульМашиночитаемыеДоверенностиФНССлужебныйВызовСервера.ФайлыДоверенностей(
			МашиночитаемыеДоверенности, Ложь);
	КонецЕсли;
	
	// Конец Локализация
	
КонецПроцедуры


#КонецОбласти
