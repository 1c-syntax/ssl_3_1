///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать УправлениеПечатью.МакетыИДанныеОбъектовДляПечати и серверный механизм 
// формирования печатных форм по макетам офисных документов. 
// Получает за один вызов всю необходимую информацию для печати: данные объектов по макетам, двоичные
// данные макетов, описание областей макетов.
// Для вызова из клиентских модулей печати форм по макетам офисных документов.
//
// Параметры:
//   ИмяМенеджераПечати - Строка - имя для обращения к менеджеру объекта, например "Документ.<Имя документа>".
//   ИменаМакетов       - Строка - имена макетов, по которым будут формироваться печатные формы.
//   СоставДокументов   - Массив - ссылки на объекты информационной базы (должны быть одного типа).
//
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - коллекция ссылок на объекты и их данные:
//   * Ключ - ЛюбаяСсылка - ссылка на объект информационной базы;
//   * Значение - Структура:
//       ** Ключ - Строка - имя макета;
//       ** Значение - Структура - данные объекта.
//
Функция МакетыИДанныеОбъектовДляПечати(Знач ИмяМенеджераПечати, Знач ИменаМакетов, Знач СоставДокументов) Экспорт
	
	Возврат УправлениеПечатью.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИменаМакетов, СоставДокументов);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Сформировать печатные формы для непосредственного вывода на принтер.
//
// Подробнее - см. описание УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати().
//
Функция СформироватьПечатныеФормыДляБыстройПечати(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов,	ПараметрыПечати) Экспорт
	
	Возврат УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати(ИмяМенеджераПечати, ИменаМакетов,
		МассивОбъектов,	ПараметрыПечати);
	
КонецФункции

// Сформировать печатные формы для непосредственного вывода на принтер в обычном приложении.
//
// Подробнее - см. описание УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение().
//
Функция СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ПараметрыПечати) Экспорт
	
	Возврат УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение(ИмяМенеджераПечати, ИменаМакетов,
		МассивОбъектов,	ПараметрыПечати);
	
КонецФункции

// Сформировать печатные формы по командам печати.
//
// Подробнее - см. описание УправлениеПечатью.СформироватьПечатныеФормы().
//
Функция СформироватьПечатныеФормы(МассивОбъектов, Команды) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ОбъектыПечати");
	Результат.Вставить("КоллекцияПечатныхФорм");
	
	КоллекцияПечатныхФорм = Новый ТаблицаЗначений;
	Для Каждого ИмяКолонки Из УправлениеПечатьюКлиентСервер.ИменаПолейКоллекцииПечатныхФорм() Цикл
		КоллекцияПечатныхФорм.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	ОбъектыПечати = Новый СписокЗначений;
	
	Для Каждого КомандаПечати Из Команды Цикл
		ПечатныеФормы = УправлениеПечатью.СформироватьПечатныеФормы(
			КомандаПечати.МенеджерПечати,
			КомандаПечати.Идентификатор,
			МассивОбъектов,
			КомандаПечати.ДополнительныеПараметры);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьСписок(ОбъектыПечати, ПечатныеФормы.ОбъектыПечати);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПечатныеФормы.КоллекцияПечатныхФорм, КоллекцияПечатныхФорм);
		УправлениеПечатью.ПриВыполненииКомандыПечати(МассивОбъектов, КомандаПечати, КоллекцияПечатныхФорм);
	КонецЦикла;
	
	Результат.ОбъектыПечати = ОбъектыПечати;
	Результат.КоллекцияПечатныхФорм = ОбщегоНазначения.ТаблицаЗначенийВМассив(КоллекцияПечатныхФорм);
	
	Возврат Результат;
	
КонецФункции

// Формирует печатные формы в требуемом формате и записывает в файлы.
//
// Подробнее - см. описание УправлениеПечатью.НапечататьВФайл().
//
Функция НапечататьВФайл(КомандыПечати, СписокОбъектов, НастройкиСохранения) Экспорт
	
	Результат = УправлениеПечатью.НапечататьВФайл(КомандыПечати, СписокОбъектов, НастройкиСохранения);
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Результат);
	
КонецФункции

// См. УправлениеПечатью.ПакетДокументов.
Функция ПакетДокументов(ТабличныеДокументы, ОбъектыПечати, ПечататьКомплектами, КоличествоЭкземпляров = 1) Экспорт
	
	Возврат УправлениеПечатью.ПакетДокументов(ТабличныеДокументы, ОбъектыПечати,
		ПечататьКомплектами, КоличествоЭкземпляров);
	
КонецФункции

Функция ПараметрыВыполненияДляПечатиПоУмолчанию(Знач Ссылки) Экспорт
	Возврат УправлениеПечатью.ПараметрыВыполненияДляПечатиПоУмолчанию(Ссылки);
КонецФункции

Функция СохраненныеНаименования(Знач Объекты) Экспорт
	Возврат РегистрыСведений.ОсновныеПечатныеФормыОбъектов.СохраненныеНаименования(Объекты);
КонецФункции

Функция ОсновнаяПечатнаяФормаВКомплекте(Знач МассивОбъектов, Знач КомандаПечати) Экспорт
	Возврат УправлениеПечатью.ОсновнаяПечатнаяФормаВКомплекте(МассивОбъектов, КомандаПечати);
КонецФункции

Функция СоздатьКомандуПечати() Экспорт
	КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(КоллекцияКомандПечати.Добавить());
КонецФункции

#Область ПечатьВФоновомЗадании

Функция НачатьФормированиеПечатныхФорм(ПараметрыОткрытияВходящий) Экспорт
	
	ПараметрыОткрытия = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыОткрытияВходящий);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ПараметрыОткрытия.УникальныйИдентификаторХранилища);
	ПараметрыВыполнения.АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, ПараметрыОткрытия.УникальныйИдентификаторХранилища);
	СодержимоеХранилищ = Неопределено;
	ИзвлечьИзХранилищ(ПараметрыОткрытия.ПараметрыПечати, СодержимоеХранилищ);
	ПараметрыОткрытия.Вставить("СодержимоеХранилищ", СодержимоеХранилищ);
	Если Не ЗначениеЗаполнено(ПараметрыОткрытия.ИсточникДанных) Тогда 
		ОбщегоНазначенияКлиентСервер.Проверить(ТипЗнч(ПараметрыОткрытия.ПараметрКоманды) = Тип("Массив") Или ОбщегоНазначения.ЗначениеСсылочногоТипа(ПараметрыОткрытия.ПараметрКоманды),
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru = 'Недопустимое значение параметра %1 при вызове метода %2.
				|Ожидалось: %3, %4.
				|Передано: %5'"),
				"ПараметрКоманды",
				"УправлениеПечатьюКлиент.ВыполнитьКомандуПечати",
				"Массив",
				"ЛюбаяСсылка",
				 ТипЗнч(ПараметрыОткрытия.ПараметрКоманды)));
	КонецЕсли;

	// Поддержка обратной совместимости с 2.1.3.
	ПараметрыПечати = ПараметрыОткрытия.ПараметрыПечати;
	Если ПараметрыОткрытия.ПараметрыПечати = Неопределено Тогда
		ПараметрыПечати = Новый Структура;
	КонецЕсли;
	Если Не ПараметрыПечати.Свойство("ДополнительныеПараметры") Тогда
		ПараметрыОткрытия.ПараметрыПечати = Новый Структура("ДополнительныеПараметры", ПараметрыПечати);
		Для Каждого ПараметрПечати Из ПараметрыПечати Цикл
			ПараметрыОткрытия.ПараметрыПечати.Вставить(ПараметрПечати.Ключ, ПараметрПечати.Значение);
		КонецЦикла;
	КонецЕсли;
			
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "УправлениеПечатью.СформироватьПечатныеФормыВФоне", ПараметрыОткрытия);
КонецФункции 

Процедура ИзвлечьИзХранилищ(СтруктураПараметров, СодержимоеХранилищ)
	Если СодержимоеХранилищ = Неопределено Тогда
		СодержимоеХранилищ = Новый Соответствие;
	КонецЕсли;
	
	ТипПараметров = ТипЗнч(СтруктураПараметров);
	Если ТипПараметров = Тип("Строка") И ЭтоАдресВременногоХранилища(СтруктураПараметров) Тогда
		СодержимоеХранилищ.Вставить(СтруктураПараметров, ПолучитьИзВременногоХранилища(СтруктураПараметров));
	ИначеЕсли ТипПараметров = Тип("Массив") Или ТипПараметров = Тип("ТаблицаЗначений") 
		Или ТипПараметров = Тип("СтрокаТаблицыЗначений") Или ТипПараметров = Тип("СтрокаДереваЗначений") Тогда
		
		Для Каждого Элемент Из СтруктураПараметров Цикл
			ИзвлечьИзХранилищ(Элемент, СодержимоеХранилищ);
		КонецЦикла;
	ИначеЕсли ТипПараметров = Тип("Структура") Или ТипПараметров = Тип("Соответствие") Тогда
		
		Для Каждого Элемент Из СтруктураПараметров Цикл
			ИзвлечьИзХранилищ(Элемент.Значение, СодержимоеХранилищ);
		КонецЦикла;
		
		Если ТипПараметров = Тип("Соответствие") Тогда
			Для Каждого Элемент Из СтруктураПараметров Цикл
				ИзвлечьИзХранилищ(Элемент.Ключ, СодержимоеХранилищ);
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли  ТипПараметров = Тип("ДеревоЗначений") Тогда
		Для Каждого Элемент Из СтруктураПараметров.Строки Цикл
			ИзвлечьИзХранилищ(Элемент, СодержимоеХранилищ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#КонецОбласти
