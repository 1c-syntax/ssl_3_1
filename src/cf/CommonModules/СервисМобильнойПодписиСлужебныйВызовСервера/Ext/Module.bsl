///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыПодписанта(Знач Подписант) Экспорт
	
	ПараметрыПодписанта = СервисМобильнойПодписиКлиентСервер.ПараметрыПодписанта();
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Подписант, 
		"ИНН, НомерТелефона, ИННФЛ, ОГРН, Имя, Отчество, Фамилия, Должность, Организация, НаименованиеОрганизации, ФизическоеЛицо, Наименование");
	ЗаполнитьЗначенияСвойств(ПараметрыПодписанта, Реквизиты);
	
	Возврат ПараметрыПодписанта;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодписатьДанныеВСервисе(Знач УникальныйИдентификатор, Знач НаборДанных, Знач Подписант, Знач Параметры = Неопределено) Экспорт
	
	ПараметрыПодписания = Новый Структура("ТипПодписи, ИдентификаторФормы, Доверенность, ПакетнаяОтправкаНаПодписание");
	Если Параметры <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыПодписания, Параметры);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПараметрыПодписания.ИдентификаторФормы) Тогда
		ПараметрыПодписания.ИдентификаторФормы = УникальныйИдентификатор;
	КонецЕсли;
	
	Для Каждого Элемент Из НаборДанных Цикл
		Если ЭтоАдресВременногоХранилища(Элемент.Данные) Тогда
			Элемент.Данные = ПолучитьИзВременногоХранилища(Элемент.Данные);
		КонецЕсли;
	КонецЦикла;

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "СервисМобильнойПодписиСлужебный.ОтправитьНаПодписание",
		НаборДанных, Подписант, ПараметрыПодписания);
	
КонецФункции

Функция РезультатПроверкиОжидаемойПодписи(Знач Данные, Знач ИдентификаторПодписи, Знач ПараметрыПроверкиПодписи) Экспорт
	Результат = СервисМобильнойПодписиСлужебный.РезультатПроверкиОжидаемыхПодписей(ИдентификаторПодписи, Истина);

	Если ЗначениеЗаполнено(Результат.Ошибка) Тогда
		РезультатПроверкиПодписи = ЭлектроннаяПодписьКлиентСервер.РезультатПроверкиПодписи();
		РезультатПроверкиПодписи.Вставить("ДатаПодписи");
		РезультатПроверкиПодписи.Вставить("ИдентификаторПодписи", ИдентификаторПодписи);
		РезультатПроверкиПодписи.Вставить("ОшибкаПроверкиДополнительныхАтрибутов", Результат.Ошибка.ЗаголовокОшибки + Символы.ПС + Результат.Ошибка.ТекстОшибки);
		Возврат РезультатПроверкиПодписи;
	КонецЕсли;
	
	РезультатПроверкиПодписи = Результат.РезультатыПроверки.Получить(ИдентификаторПодписи);
	Если ЗначениеЗаполнено(РезультатПроверкиПодписи) Тогда
		Возврат РезультатПроверкиПодписи;
	КонецЕсли;
	
	Возврат ЭлектроннаяПодписьКлиентСервер.РезультатПроверкиПодписи();
КонецФункции

#КонецОбласти
