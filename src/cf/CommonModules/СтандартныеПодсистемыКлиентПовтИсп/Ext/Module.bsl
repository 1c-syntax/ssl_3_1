///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// См. СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске().
Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
	
	МоментОбщегоНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Показатели = ?(СтандартныеПодсистемыКлиентСервер.РегистрироватьПоказателиПроизводительности(),
		Новый Массив, Неопределено);
	
	ПроверитьЗапускПрограммыЗавершен(Истина);
	
	ПараметрыПриЗапускеПрограммы = ПараметрыПриложения["СтандартныеПодсистемы.ПараметрыПриЗапускеПрограммы"];
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПолученныеПараметрыКлиента", Неопределено);
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ПолученныеПараметрыКлиента")
		И ТипЗнч(ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента) = Тип("Структура") Тогда
		
		Параметры.Вставить("ПолученныеПараметрыКлиента", ОбщегоНазначенияКлиент.СкопироватьРекурсивно(
			ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента));
	КонецЕсли;
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ПропуститьОчисткуСкрытияРабочегоСтола") Тогда
		Параметры.Вставить("ПропуститьОчисткуСкрытияРабочегоСтола");
	КонецЕсли;
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ОпцииИнтерфейса")
	   И ТипЗнч(Параметры.ПолученныеПараметрыКлиента) = Тип("Структура") Тогда
		
		Параметры.ПолученныеПараметрыКлиента.Вставить("ОпцииИнтерфейса");
	КонецЕсли;
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыРаботыКлиентаНаСервере(Параметры);
	ДобавитьОсновнойПоказатель(Истина, Показатели, МоментНачала,
		"СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыРаботыКлиентаНаСервере");
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ПараметрыКлиента = СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиентаПриЗапуске(Параметры);
	ДобавитьОсновнойПоказатель(Истина, Показатели, МоментНачала,
		"СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиентаПриЗапуске");
	
	Если Показатели <> Неопределено И ЗначениеЗаполнено(ПараметрыКлиента.ПоказателиПроизводительности) Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Показатели,
			ПараметрыКлиента.ПоказателиПроизводительности);
	КонецЕсли;
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ПолученныеПараметрыКлиента")
		И ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента <> Неопределено
		И Не ПараметрыПриЗапускеПрограммы.Свойство("ОпцииИнтерфейса") Тогда
		
		ПараметрыПриЗапускеПрограммы.Вставить("ОпцииИнтерфейса", ПараметрыКлиента.ОпцииИнтерфейса);
	КонецЕсли;
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыКлиента(ПараметрыКлиента);
	ДобавитьОсновнойПоказатель(Истина, Показатели, МоментНачала,
		"СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыКлиента");
	
	// Обновление состояния скрытия рабочего стола на клиенте по состоянию на сервере.
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СтандартныеПодсистемыКлиент.СкрытьРабочийСтолПриНачалеРаботыСистемы(
		Параметры.СкрытьРабочийСтолПриНачалеРаботыСистемы, Истина);
	ДобавитьОсновнойПоказатель(Истина, Показатели, МоментНачала,
		"СтандартныеПодсистемыКлиент.СкрытьРабочийСтолПриНачалеРаботыСистемы");
	
	ДобавитьОсновнойПоказатель(Истина, Показатели, МоментОбщегоНачала,
		"СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске", Истина);
	
	Возврат ПараметрыКлиента;
	
КонецФункции

// См. СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().
Функция ПараметрыРаботыКлиента() Экспорт
	
	МоментОбщегоНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Показатели = ?(СтандартныеПодсистемыКлиентСервер.РегистрироватьПоказателиПроизводительности(),
		Новый Массив, Неопределено);
	
	ПроверитьЗапускПрограммыЗавершен();
	
	СвойстваКлиента = Новый Структура;
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыРаботыКлиентаНаСервере(СвойстваКлиента);
	ДобавитьОсновнойПоказатель(Ложь, Показатели, МоментНачала,
		"СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыРаботыКлиентаНаСервере");
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ПараметрыКлиента = СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиента(СвойстваКлиента);
	ДобавитьОсновнойПоказатель(Ложь, Показатели, МоментНачала,
		"СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиента");
	
	Если Показатели <> Неопределено И ЗначениеЗаполнено(ПараметрыКлиента.ПоказателиПроизводительности) Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Показатели,
			ПараметрыКлиента.ПоказателиПроизводительности);
	КонецЕсли;
	
	МоментНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыКлиента(ПараметрыКлиента);
	ДобавитьОсновнойПоказатель(Ложь, Показатели, МоментНачала,
		"СтандартныеПодсистемыКлиент.ЗаполнитьПараметрыКлиента");
	
	ДобавитьОсновнойПоказатель(Ложь, Показатели, МоментОбщегоНачала,
		"СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента", Истина);
	
	Возврат ПараметрыКлиента;
	
КонецФункции

// См. СтандартныеПодсистемыПовтИсп.СсылкиПоИменамПредопределенных
Функция СсылкиПоИменамПредопределенных(ПолноеИмяОбъектаМетаданных) Экспорт
	
	Возврат СтандартныеПодсистемыВызовСервера.СсылкиПоИменамПредопределенных(ПолноеИмяОбъектаМетаданных);
	
КонецФункции

Процедура ПроверитьЗапускПрограммыЗавершен(ТолькоПередНачаломРаботыСистемы = Ложь)
	
	ИмяПараметра = "СтандартныеПодсистемы.ЗапускПрограммыЗавершен";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Возникла непредвиденная ситуация при запуске приложения.
			           |
			           |Техническая информация о проблеме:
			           |Недопустимый вызов %1 при запуске приложения.
			           |Первой процедурой, которая вызывается из обработчика события %2, должна быть процедура %3.'"),
			"СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента",
			"ПередНачаломРаботыСистемы", 
			"СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Если ТолькоПередНачаломРаботыСистемы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтандартныеПодсистемыКлиент.ЗапускПрограммыЗавершен() Тогда
		Если СтандартныеПодсистемыКлиент.ОтключенаЛогикаНачалаРаботыСистемы() Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Действие недоступно при запуске с параметром %1.'"),
				"ОтключитьЛогикуНачалаРаботыСистемы");
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Возникла непредвиденная ситуация при запуске приложения.
			           |
			           |Техническая информация о проблеме:
			           |Недопустимый вызов %1 при запуске приложения. Следует вызывать %2, пока процедура %3 еще не завершена.
			           |Вызванные процедуры (в обратном порядке):
			           |%4'"),
				"СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента", 
				"СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске",
				"СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы",
				СтандартныеПодсистемыКлиент.ВызванныеПроцедурыПередНачаломРаботыСистемы());
		КонецЕсли;
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьОсновнойПоказатель(ПриЗапуске, Показатели, МоментНачала, ИмяПроцедуры, Общий = Ложь)
	
	Если Показатели = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Длительность = ТекущаяУниверсальнаяДатаВМиллисекундах() - МоментНачала;
	Если Не Общий И Не ЗначениеЗаполнено(Длительность) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = Формат(Длительность / 1000, "ЧЦ=6; ЧДЦ=3; ЧН=000,000; ЧВН=") + " " + ИмяПроцедуры;
	
	Если Общий Тогда
		Показатели.Вставить(0, Текст);
		ЗаписатьПоказатели(ПриЗапуске, Показатели, Длительность);
		Возврат;
	Иначе
		Показатели.Добавить("  " + Текст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьПоказатели(ПриЗапуске, Показатели, ОбщаяДлительность)
	
	Комментарий = СтрСоединить(Показатели, Символы.ПС);
	
	СтекВызовов = "";
	Попытка
		ВызватьИсключение НСтр("ru = 'Стек вызова:'");
	Исключение
		СтекВызовов = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	СтандартныеПодсистемыВызовСервера.ЗаписатьПоказателиПроизводительности(ПриЗапуске, Комментарий, СтекВызовов);
	
КонецПроцедуры

#Область ДляСправочникаИдентификаторыОбъектовМетаданных

// См. Справочники.ИдентификаторыОбъектовМетаданных.ПредставлениеИдентификатора
Функция ПредставлениеИдентификатораОбъектаМетаданных(Ссылка) Экспорт
	
	Возврат СтандартныеПодсистемыВызовСервера.ПредставлениеИдентификатораОбъектаМетаданных(Ссылка);
	
КонецФункции

#КонецОбласти

#КонецОбласти