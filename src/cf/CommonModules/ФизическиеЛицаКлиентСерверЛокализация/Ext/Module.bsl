///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует краткое представление полного имени физического лица.
//
// Параметры:
//  ПолноеИмя - Строка - например, "Пупкин Василий Иванович";
//            - Структура:
//                        * Фамилия  - Строка
//                        * Имя      - Строка
//                        * Отчество - Строка
//  ФорматПолногоИмени - Строка - "Фамилия,Имя,Отчество" (по умолчанию) или "Имя,Отчество,Фамилия".
//  ИнициалыВНачале    - Булево - "Фамилия И. О.", если Ложь (по умолчанию),
//                                "И. О. Фамилия", если Истина
//  Результат - Строка - фамилия и инициалы. Например, "Пупкин В. И.". 
//
Процедура ПриОпределенииФамилииИнициалов(Знач ПолноеИмя, Знач ФорматПолногоИмени, Знач ИнициалыВНачале, Результат) Экспорт
	// Локализация
	Если Не ЗначениеЗаполнено(ФорматПолногоИмени) Тогда
		ФорматПолногоИмени = "Фамилия,Имя,Отчество";
	КонецЕсли;
	
	Если ТипЗнч(ПолноеИмя) = Тип("Строка") Тогда
		ПолноеИмя = ФизическиеЛицаКлиентСервер.ЧастиИмени(ПолноеИмя, ФорматПолногоИмени);
	КонецЕсли;
	
	Фамилия = ПолноеИмя.Фамилия;
	Имя = ПолноеИмя.Имя;
	Отчество = ПолноеИмя.Отчество;
	
	Если ПустаяСтрока(Имя) Тогда
		Результат = Фамилия;
	ИначеЕсли ПустаяСтрока(Отчество) Тогда
		Если ИнициалыВНачале Тогда
			Шаблон = "%2. %1";
		Иначе
			Шаблон = "%1 %2.";
		КонецЕсли;
		
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Фамилия, Лев(Имя, 1));
	Иначе
		Если ИнициалыВНачале Тогда
			Шаблон = "%2. %3. %1";
		Иначе
			Шаблон = "%1 %2. %3.";
		КонецЕсли;
		
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Фамилия, Лев(Имя, 1), Лев(Отчество, 1));
	КонецЕсли;
	// Конец Локализация
КонецПроцедуры

// Раскладывает полное имя физического лица на составные части - фамилию, имя и отчество.
// Если в конце полного имени встречаются "оглы", "улы", "уулу", "кызы" или "гызы",
// то они также считаются частью отчества.
//
// Параметры:
//  ПолноеИмя - Строка - полное имя в виде "Фамилия Имя Отчество".
//  ФорматИмени - Строка - определяет порядок частей имени во входном параметре.
//                         "Фамилия,Имя,Отчество"" - фамилия в начале (по умолчанию),
//                         "Имя,Отчество,Фамилия" - фамилия в конце.
//  Результат - Структура:
//   * Фамилия  - Строка - фамилия;
//   * Имя      - Строка - имя;
//   * Отчество - Строка - отчество.
//
// Пример:
//   1. ФизическиеЛицаКлиентСервер.ЧастиИмени("Иванов Иван Иванович") 
//   вернет структуру со значениями свойств: "Иванов", "Иван", "Иванович".
//   2. ФизическиеЛицаКлиентСервер.ЧастиИмени("Смит Джон") 
//   вернет структуру со значениями свойств: "Смит", "Джон", "".
//   3. ФизическиеЛицаКлиентСервер.ЧастиИмени("Алиев Ахмед Октай оглы") 
//   вернет структуру со значениями свойств: "Алиев", "Ахмед", "Октай оглы".
//
Процедура ПриОпределенииЧастейПолногоИмени(Знач ПолноеИмя, Знач ФорматИмени, Результат) Экспорт
	// Локализация
	
	ФамилияВНачале = ФорматИмени = "Фамилия,Имя,Отчество" Или Не ЗначениеЗаполнено(ФорматИмени);
	
	Результат = Новый Структура;
	Результат.Вставить("Фамилия", "");
	Результат.Вставить("Имя", "");
	Результат.Вставить("Отчество", "");
	
	ЧастиПолногоИмени = СтрРазделить(ПолноеИмя, " ", Ложь); 
	
	Если ФамилияВНачале Тогда
		ОжидаемаяЧастьИмени = "Фамилия";
	Иначе
		ОжидаемаяЧастьИмени = "Имя";
	КонецЕсли;
	
	Для Индекс = 0 По ЧастиПолногоИмени.ВГраница() Цикл
		Если ОжидаемаяЧастьИмени = "" Тогда
			Прервать;
		КонецЕсли;
		
		ЧастьИмени = ЧастиПолногоИмени[Индекс];
		ТекущаяЧастьИмени = ОжидаемаяЧастьИмени;

		Если ТекущаяЧастьИмени = "Фамилия" Тогда
			
			Если ФамилияВНачале Тогда
				ОжидаемаяЧастьИмени = "Имя";
			Иначе
				ОжидаемаяЧастьИмени = "";
			КонецЕсли;
			
		ИначеЕсли ТекущаяЧастьИмени = "Имя" Тогда
			
			Если ТРег(ЧастьИмени) <> "Абдул" // @Non-NLS-1
				И ТРег(ЧастьИмени) <> "Абу" Тогда // @Non-NLS-1
				ОжидаемаяЧастьИмени = "Отчество";
			КонецЕсли;
			
		ИначеЕсли ТекущаяЧастьИмени = "Отчество" Тогда
			
			Если Не ФамилияВНачале Тогда
				ОжидаемаяЧастьИмени = "Фамилия";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТекущаяЧастьИмени = "Отчество" Или Не ФамилияВНачале И ТекущаяЧастьИмени = "Фамилия" И Индекс < ЧастиПолногоИмени.ВГраница() Тогда
			Если НРег(ЧастьИмени) = "оглы" // @Non-NLS-1
				Или НРег(ЧастьИмени) = "улы" // @Non-NLS-1
				Или НРег(ЧастьИмени) = "уулу" // @Non-NLS-1
				Или НРег(ЧастьИмени) = "кызы" // @Non-NLS-1
				Или НРег(ЧастьИмени) = "гызы" // @Non-NLS-1
				Или НРег(ЧастьИмени) = "угли" Тогда // @Non-NLS-1
				
				ТекущаяЧастьИмени = "Отчество";
				
				Если ФамилияВНачале Тогда
					ОжидаемаяЧастьИмени = "";
				Иначе
					ОжидаемаяЧастьИмени = "Фамилия";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	
		Результат[ТекущаяЧастьИмени] = Результат[ТекущаяЧастьИмени] + ?(ЗначениеЗаполнено(Результат[ТекущаяЧастьИмени]), " ", "") + ЧастьИмени;
	
	КонецЦикла;
	// Конец Локализация
КонецПроцедуры

// Проверяет, верно ли написано ФИО физического лица.
//
// Параметры:
//  ФИО - Строка - фамилия, имя и отчество.
//  ТолькоНациональныеСимволы - Булево - при проверке ФИО должна включать только символы национального алфавита.
//  РезультатПроверки - Булево - возвращаемое значение. Если Истина, то ФИО написано верно.
//
Процедура ФИОНаписаноВерно(Знач ФИО, Знач ТолькоНациональныеСимволы, РезультатПроверки) Экспорт
	
	// Локализация 
	
	ДопустимыеСимволы = "-";
	
	РезультатПроверки = (Не ТолькоНациональныеСимволы И СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(ФИО, Ложь, ДопустимыеСимволы))
		Или СтроковыеФункцииКлиентСерверРФ.ТолькоКириллицаВСтроке(ФИО, Ложь, ДопустимыеСимволы);
	
	// Конец Локализация
	
КонецПроцедуры

#КонецОбласти

