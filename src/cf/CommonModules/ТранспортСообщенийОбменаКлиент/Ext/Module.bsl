///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыАутентификации() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Корреспондент");
	Параметры.Вставить("ИмяПланаОбмена");
	Параметры.Вставить("ИдентификаторТранспорта");
	Параметры.Вставить("НастройкиТранспорта");
	
	Возврат Параметры;
	
КонецФункции

Процедура НачалоАутентификации(ПараметрыАутентификации, ТребуетсяАутентификация, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ИмяФормыАутентификации = "";
	ТребуетсяАутентификация = ТранспортСообщенийОбменаВызовСервера.ТребуетсяАутентификация(
		ПараметрыАутентификации, ИмяФормыАутентификации);
		
	Если ТребуетсяАутентификация Тогда
		
		ОткрытьФорму(ИмяФормыАутентификации, ПараметрыАутентификации,,,,,ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуПараметровПроксиСервера() Экспорт
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПолучениеФайловИзИнтернета") Тогда
		МодульПолучениеФайловИзИнтернетаКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПолучениеФайловИзИнтернетаКлиент");
		
		ПараметрыФормы = Неопределено;
		Если ОбщегоНазначенияКлиент.ИнформационнаяБазаФайловая() Тогда
			ПараметрыФормы = Новый Структура("НастройкаПроксиНаКлиенте", Истина);
		КонецЕсли;
		
		МодульПолучениеФайловИзИнтернетаКлиент.ОткрытьФормуПараметровПроксиСервера(ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

// Открывает инструкцию по восстановлению/изменению пароля синхронизации данных
// с автономным рабочим местом.
//
Процедура ОткрытьИнструкциюКакИзменитьПарольСинхронизацииДанных(Знач АдресДляВосстановленияПароляУчетнойЗаписи) Экспорт
	
	Если ПустаяСтрока(АдресДляВосстановленияПароляУчетнойЗаписи) Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Адрес инструкции для восстановления пароля учетной записи не задан.'"));
		
	Иначе
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(АдресДляВосстановленияПароляУчетнойЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти