///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ОбработкаПродолженияПриОшибкеЗаписи, ОтказПриЗаписи;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	СоздатьСтруктуруПереданныхПараметров();
	
	Если ПереданныеПараметрыФормы.ВыборОбщегоСвойства
		Или ПереданныеПараметрыФормы.ВыборВладельцаДополнительныхЗначений
		Или ПереданныеПараметрыФормы.КопированиеСВопросом Тогда
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		РежимПомощника               = Истина;
		Если ПереданныеПараметрыФормы.КопированиеСВопросом Тогда
			Элементы.СтраницыПомощникКарточка.ТекущаяСтраница = Элементы.ВыборДействия;
			ЗаполнитьСписокДействийПриДобавленииРеквизита();
		Иначе
			ЗаполнитьСтраницуВыбора();
		КонецЕсли;
		ОбновитьСоставЭлементовФормы();
		
		Если ОбщегоНазначения.ЭтоВебКлиент() Тогда
			Элементы.КарточкаРеквизита.Видимость = Ложь;
		КонецЕсли;
	Иначе
		ЗаполнитьКарточкуРеквизитаИлиСведения();
		// Обработчик подсистемы запрета редактирования реквизитов объектов.
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПоискИУдалениеДублей") Тогда
		Элементы.ФормаПоискИУдалениеДублей.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаМногострочность.Отображение          = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	Если Не УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		Элементы.ГруппаСвойстваИЗависимости.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		Элементы.ОстальныеРеквизиты.Отображение         = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Элементы.НаборыСвойств.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
		Элементы.ГруппаДополнительнаяИнформация.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		Элементы.Закрыть.Видимость = Ложь;
		Элементы.ГруппаНаименованиеРеквизита.ВыравниваниеЭлементовИЗаголовков = ВариантВыравниванияЭлементовИЗаголовков.ЭлементыПравоЗаголовкиЛево;
		Элементы.ТипЗначенияРеквизита.ВыравниваниеЭлементовИЗаголовков        = ВариантВыравниванияЭлементовИЗаголовков.ЭлементыПравоЗаголовкиЛево;
	КонецЕсли;
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
	ТекущийЗаголовок = Объект.Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		Закрыть();
		
		// Открытие формы свойства.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
		ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
		
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
			ПараметрыФормы, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ПараметрыЗаписи.Свойство("ПодтвержденоИзменениеНаименования") Тогда
		Если ЗначениеЗаполнено(ТекущийЗаголовок) И ТекущийЗаголовок <> Объект.Заголовок Тогда
			ТекстВопроса = НСтр("ru = 'Наименование было изменено. Потребуется заново настроить отображение
				                      |дополнительного реквизита в списках и отчетах, а также использование
				                      |в отборах.'");
			ТекстВопроса = СтрЗаменить(ТекстВопроса, Символы.ПС, " ");
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ПродолжитьЗапись",            НСтр("ru = 'Переименовать'"));
			Кнопки.Добавить("ВернутьНаименование", НСтр("ru = 'Отмена'"));
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПослеОтветаНаВопросОбИзмененииНаименования", ЭтотОбъект, ПараметрыЗаписи),
				ТекстВопроса, Кнопки, , "ВернутьНаименование");
			
			ОтказПриЗаписи = Истина;
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыЗаписи.Свойство("КогдаНаименованиеУжеИспользуется") Тогда
	
		// Заполнение наименования по набору свойств
		// и проверка есть ли свойство с тем же наименованием.
		ТекстВопроса = НаименованиеУжеИспользуется(
			Объект.Заголовок, Объект.Ссылка, ТекущийНаборСвойств, Объект.Наименование, Объект.Представления);
		
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ПродолжитьЗапись",            НСтр("ru = 'Продолжить запись'"));
			Кнопки.Добавить("ВернутьсяКВводуНаименования", НСтр("ru = 'Вернуться к вводу наименования'"));
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПослеОтветаНаВопросКогдаНаименованиеУжеИспользуется", ЭтотОбъект, ПараметрыЗаписи),
				ТекстВопроса, Кнопки, , "ВернутьсяКВводуНаименования");
			
			ОтказПриЗаписи = Истина;
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыЗаписи.Свойство("КогдаИмяУжеИспользуется")
		И ЗначениеЗаполнено(Объект.Имя) Тогда
		// Заполнение наименования по набору свойств
		// и проверка есть ли свойство с тем же наименованием.
		ТекстВопроса = ИмяУжеИспользуется(
			Объект.Имя, Объект.Ссылка, Объект.Наименование);
		
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("ПродолжитьЗапись",            НСтр("ru = 'Продолжить'"));
			Кнопки.Добавить("ВернутьсяКВводуИмени", НСтр("ru = 'Отмена'"));
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПослеОтветаНаВопросКогдаИмяУжеИспользуется", ЭтотОбъект, ПараметрыЗаписи),
				ТекстВопроса, Кнопки, , "ПродолжитьЗапись");
			
			ОтказПриЗаписи = Истина;
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = ПараметрыЗаписи.ОбработкаПродолжения;
		ПодключитьОбработчикОжидания("ПослеОшибкиЗаписи", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		ТекущийОбъект.ДополнительныеЗначенияИспользуются = Истина;
	Иначе
		ТекущийОбъект.ДополнительныеЗначенияИспользуются = Ложь;
		ТекущийОбъект.ЗаголовокФормыЗначения = "";
		ТекущийОбъект.ЗаголовокФормыВыбораЗначения = "";
	КонецЕсли;
	
	Если Объект.ЭтоДополнительноеСведение
	 ИЛИ НЕ (    Объект.ТипЗначения.СодержитТип(Тип("Число" ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Дата"  ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Булево")) )Тогда
		
		ТекущийОбъект.ФорматСвойства = "";
	КонецЕсли;
	
	ТекущийОбъект.МногострочноеПолеВвода = 0;
	
	Если НЕ Объект.ЭтоДополнительноеСведение
	   И Объект.ТипЗначения.Типы().Количество() = 1
	   И Объект.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
		
		Если ПредставлениеРеквизита = "МногострочноеПолеВвода" Тогда
			ТекущийОбъект.МногострочноеПолеВвода   = МногострочноеПолеВводаЧисло;
			ТекущийОбъект.ВыводитьВВидеГиперссылки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Формирование имени дополнительного реквизита (сведения).
	Если Не ЗначениеЗаполнено(ТекущийОбъект.Имя)
		Или ПараметрыЗаписи.Свойство("КогдаИмяУжеИспользуется") Тогда
		ТекущийОбъект.Имя = "";
		ЗаголовокОбъекта = ТекущийОбъект.Заголовок;
		УправлениеСвойствамиСлужебный.УдалитьНедопустимыеСимволы(ЗаголовокОбъекта);
		ЗаголовокОбъектаЧастями = СтрРазделить(ЗаголовокОбъекта, " ", Ложь);
		Для Каждого ЧастьЗаголовка Из ЗаголовокОбъектаЧастями Цикл
			ТекущийОбъект.Имя = ТекущийОбъект.Имя + ВРег(Лев(ЧастьЗаголовка, 1)) + Сред(ЧастьЗаголовка, 2);
		КонецЦикла;
		
		УИД = Новый УникальныйИдентификатор();
		СтрокаУИД = СтрЗаменить(Строка(УИД), "-", "");
		ТекущийОбъект.Имя = ТекущийОбъект.Имя + "_" + СтрокаУИД;
	КонецЕсли;
	
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.НаборыДополнительныхРеквизитовИСведений");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ТекущийНаборСвойств);
		Блокировка.Заблокировать();
		ЗаблокироватьДанныеДляРедактирования(ТекущийНаборСвойств);
		
		ОбъектНаборСвойств = ТекущийНаборСвойств.ПолучитьОбъект();
		Если ТекущийОбъект.ЭтоДополнительноеСведение Тогда
			ТабличнаяЧасть = ОбъектНаборСвойств.ДополнительныеСведения;
		Иначе
			ТабличнаяЧасть = ОбъектНаборСвойств.ДополнительныеРеквизиты;
		КонецЕсли;
		НайденнаяСтрока = ТабличнаяЧасть.Найти(ТекущийОбъект.Ссылка, "Свойство");
		Если НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока.Свойство = ТекущийОбъект.Ссылка;
			ОбъектНаборСвойств.Записать();
			ТекущийОбъект.ДополнительныеСвойства.Вставить("ИзмененныйНабор", ТекущийНаборСвойств);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОчиститьВведенныеВесовыеКоэффициенты") Тогда
		ОчиститьВведенныеВесовыеКоэффициенты();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Если РежимДобавленияРеквизита = "СоздатьКопированием" Тогда
		ЗаписатьЗначенияДополнительногоРеквизитаПриКопировании(ТекущийОбъект);
	КонецЕсли;
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ОбновитьСоставЭлементовФормы();
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("ИзмененныйНабор") Тогда
		ПараметрыЗаписи.Вставить("ИзмененныйНабор", ТекущийОбъект.ДополнительныеСвойства.ИзмененныйНабор);
	КонецЕсли;
	
	ТекущийЗаголовок = Объект.Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ДополнительныеРеквизитыИСведения",
		Новый Структура("Ссылка", Объект.Ссылка), Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ИзмененныйНабор") Тогда
		
		Оповестить("Запись_НаборыДополнительныхРеквизитовИСведений",
			Новый Структура("Ссылка", ПараметрыЗаписи.ИзмененныйНабор), ПараметрыЗаписи.ИзмененныйНабор);
	КонецЕсли;
	
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = Неопределено;
		ОтключитьОбработчикОжидания("ПослеОшибкиЗаписи");
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
				ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
			Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если РежимПомощника Тогда
		УстановитьНастройкиПомощника();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Свойства_УстановленаЗависимостьРеквизита" Тогда
		Модифицированность = Истина;
		ЗначениеДобавлено = Ложь;
		Для Каждого УсловиеЗависимости Из УсловияЗависимостиРеквизитов Цикл
			Значение = Неопределено;
			Если Параметр.Свойство(УсловиеЗависимости.Представление, Значение) Тогда
				ЗначениеВХранилище = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
				УсловиеЗависимости.Значение = ЗначениеВХранилище;
				ЗначениеДобавлено = Истина;
			КонецЕсли;
		КонецЦикла;
		Если Не ЗначениеДобавлено Тогда
			Для Каждого ПереданныйПараметр Из Параметр Цикл
				ЗначениеВХранилище = ПоместитьВоВременноеХранилище(ПереданныйПараметр.Значение, УникальныйИдентификатор);
				УсловияЗависимостиРеквизитов.Добавить(ЗначениеВХранилище, ПереданныйПараметр.Ключ);
			КонецЦикла;
		КонецЕсли;
		
		УстановитьЗависимостиДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоДополнительноеСведениеПриИзменении(Элемент)
	
	Объект.ЭтоДополнительноеСведение = ЭтоДополнительноеСведение;
	
	ОбновитьСоставЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийКомментарийНажатие(Элемент)
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("УточнениеСпискаЗначенийКомментарийНажатиеЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ПереходКСпискуЗначений", ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатие(Элемент)
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("УточнениеНаборовКомментарийНажатиеПродолжение", ЭтотОбъект);
	ЗаписатьОбъект("ПереходКСпискуЗначений", ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	ТекстПредупреждения = "";
	ОбновитьСоставЭлементовФормы(ТекстПредупреждения);
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
	   И НЕ Объект.ДополнительныеЗначенияСВесом Тогда
		
		ТекстВопроса =
			НСтр("ru = 'Очистить введенные весовые коэффициенты?
			           |
			           |Данные будут записаны.'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("ОчиститьИЗаписать", НСтр("ru = 'Очистить и записать'"));
		Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеПодтвержденияОчисткиВесовыхКоэффициентов", ЭтотОбъект),
			ТекстВопроса, Кнопки, , "ОчиститьИЗаписать");
	Иначе
		ТекстВопроса = НСтр("ru = 'Данные будут записаны.'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("Записать", НСтр("ru = 'Записать'"));
		Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеПодтвержденияВключенияВесовыхКоэффициентов", ЭтотОбъект),
			ТекстВопроса, Кнопки, , "Записать");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МногострочноеПолеВводаЧислоПриИзменении(Элемент)
	
	ПредставлениеРеквизита = "МногострочноеПолеВвода";
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнятьОбязательноПриИзменении(Элемент)
	Элементы.ЗадатьУсловиеЗаполнения.Доступность = Объект.ЗаполнятьОбязательно;
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьУсловиеДоступностиНажатие(Элемент)
	ОткрытьФормуНастройкиЗависимости("Доступен");
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьУсловиеНажатие(Элемент)
	ОткрытьФормуНастройкиЗависимости("ЗаполнятьОбязательно");
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьУсловиеВидимостиНажатие(Элемент)
	ОткрытьФормуНастройкиЗависимости("Виден");
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВидРеквизитаПриИзменении(Элемент)
	Элементы.ВыводитьВВидеГиперссылки.Доступность    = (ПредставлениеРеквизита = "ОднострочноеПолеВвода");
	Элементы.МногострочноеПолеВводаЧисло.Доступность = (ПредставлениеРеквизита = "МногострочноеПолеВвода");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборыСвойств

&НаКлиенте
Процедура НаборыСвойствПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ПриИзмененииТекущегоНабора", 0.1, Истина)
КонецПроцедуры

&НаКлиенте
Процедура НаборыСвойствПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвойстваВыбор

&НаКлиенте
Процедура СвойстваВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	КомандаДалее(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначения

&НаКлиенте
Процедура ЗначенияПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектов";
	Иначе
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Оповестить(ИмяСобытия,
		Новый Структура("Ссылка", Элемент.ТекущиеДанные.Ссылка),
		Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Копирование", Копирование);
	ДополнительныеПараметры.Вставить("Родитель", Родитель);
	ДополнительныеПараметры.Вставить("Группа", Группа);
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ЗначенияПередНачаломДобавленияЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ПереходКСпискуЗначений", ОбработчикПродолжения, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элементы.ДополнительныеЗначения.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ЗначенияПередНачаломИзмененияЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ПереходКСпискуЗначений", ОбработчикПродолжения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДалее(Команда)
	
#Если ВебКлиент Тогда
	Если Не Элементы.КарточкаРеквизита.Видимость Тогда
		Элементы.КарточкаРеквизита.Видимость = Истина;
	КонецЕсли;
#КонецЕсли
	
	Если РежимДобавленияРеквизита = "ДобавитьОбщийРеквизитВНабор" Тогда
		Результат = Новый Структура;
		Результат.Вставить("ОбщееСвойство", ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений);
		Если ПереданныеПараметрыФормы.Перетаскивание Тогда
			Результат.Вставить("Перетаскивание", Истина);
		КонецЕсли;
		КонвертироватьДополнительныйРеквизитВОбщий();
		ОповеститьОВыборе(Результат);
		Возврат;
	КонецЕсли;
	
	ОсновнаяСтраница = Элементы.СтраницыПомощникКарточка;
	ИндексСтраницы = ОсновнаяСтраница.ПодчиненныеЭлементы.Индекс(ОсновнаяСтраница.ТекущаяСтраница);
	Если ИндексСтраницы = 0
		И Элементы.Свойства.ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Элемент не выбран.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	Если ИндексСтраницы = 2 Тогда
		Если Не ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Если РежимДобавленияРеквизита = "СоздатьКопированием" Тогда
			Элементы.СтраницыЗначенияРеквизита.ТекущаяСтраница = Элементы.ДополнительныеЗначения;
		КонецЕсли;
		
		Записать();
		Если ОтказПриЗаписи <> Истина Тогда
			Закрыть();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	ТекущаяСтраница = ОсновнаяСтраница.ПодчиненныеЭлементы.Получить(ИндексСтраницы + 1);
	УстановитьНастройкиПомощника(ТекущаяСтраница);
	
	ПриСменеСтраницы("Вперед", ОсновнаяСтраница, ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	
	ОсновнаяСтраница = Элементы.СтраницыПомощникКарточка;
	ИндексСтраницы = ОсновнаяСтраница.ПодчиненныеЭлементы.Индекс(ОсновнаяСтраница.ТекущаяСтраница);
	Если ИндексСтраницы = 1 Тогда
		РежимДобавленияРеквизита = "";
	КонецЕсли;
	ТекущаяСтраница = ОсновнаяСтраница.ПодчиненныеЭлементы.Получить(ИндексСтраницы - 1);
	УстановитьНастройкиПомощника(ТекущаяСтраница);
	
	ПриСменеСтраницы("Назад", ОсновнаяСтраница, ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФорматЗначения(Команда)
	
	Конструктор = Новый КонструкторФорматнойСтроки(Объект.ФорматСвойства);
	
	Конструктор.ДоступныеТипы = Объект.ТипЗначения;
	
	Конструктор.Показать(
		Новый ОписаниеОповещения("РедактироватьФорматЗначенияЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийИзменить(Команда)
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("УточнениеСпискаЗначенийИзменитьЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ИзменениеВидаРеквизита", ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовИзменить(Команда)
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("УточнениеНаборовИзменитьЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ИзменениеВидаРеквизита", ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗаблокированныеРеквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтотОбъект);
	
	Если ЗаблокированныеРеквизиты.Количество() > 0 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
		ПараметрыФормы.Вставить("ЭтоДополнительныйРеквизит", Не Объект.ЭтоДополнительноеСведение);
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораРеквизитовДляРазблокирования", ЭтотОбъект);
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.РазблокированиеРеквизитов",
			ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	Иначе
		ЗапретРедактированияРеквизитовОбъектовКлиент.ПоказатьПредупреждениеВсеВидимыеРеквизитыРазблокированы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискИУдалениеДублей(Команда)
	МодульПоискИУдалениеДублейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПоискИУдалениеДублейКлиент");
	ИмяФормыПоискИУдалениеДублей = МодульПоискИУдалениеДублейКлиент.ИмяФормыОбработкиПоискИУдалениеДублей();
	ОткрытьФорму(ИмяФормыПоискИУдалениеДублей);
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	Если Элементы.Свойства.ТекущиеДанные <> Неопределено Тогда
		// Открытие формы свойства.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Элементы.Свойства.ТекущиеДанные.Свойство);
		ПараметрыФормы.Вставить("ТекущийНаборСвойств", ВыбранныйНаборСвойств);
		
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
			ПараметрыФормы, Элементы.Свойства,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНеиспользуемыеРеквизиты(Команда)
	НовоеЗначение = Не Элементы.НеиспользуемыеРеквизиты.Пометка;
	Элементы.НеиспользуемыеРеквизиты.Пометка = НовоеЗначение;
	Если НовоеЗначение Тогда
		Элементы.СтраницыНаборыСвойств.ТекущаяСтраница = Элементы.СтраницаОбщиеНаборы;
	Иначе
		Элементы.СтраницыНаборыСвойств.ТекущаяСтраница = Элементы.СтраницаВсеНаборы;
	КонецЕсли;
	
	ОбновитьСписокСвойствТекущегоНабора();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометкуУдаления(Команда)
	ОбработчикПродолжения = Новый ОписаниеОповещения("УстановитьСнятьПометкуУдаленияПродолжение", ЭтотОбъект);
	ЗаписатьОбъект("ИзменениеПометкиУдаления", ОбработчикПродолжения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗависимостиДополнительныхРеквизитов()
	
	Если УсловияЗависимостиРеквизитов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ЗависимостиДополнительныхРеквизитов = ТекущийОбъект.ЗависимостиДополнительныхРеквизитов;
	
	Для Каждого УсловиеЗависимости Из УсловияЗависимостиРеквизитов Цикл
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("ЗависимоеСвойство", УсловиеЗависимости.Представление);
		ОтборСтрок.Вставить("НаборСвойств", ТекущийНаборСвойств);
		МассивСтрок = ЗависимостиДополнительныхРеквизитов.НайтиСтроки(ОтборСтрок);
		Для Каждого СтрокаТабличнойЧасти Из МассивСтрок Цикл
			ЗависимостиДополнительныхРеквизитов.Удалить(СтрокаТабличнойЧасти);
		КонецЦикла;
		
		ЗначениеИзХранилища = ПолучитьИзВременногоХранилища(УсловиеЗависимости.Значение);
		Если ЗначениеИзХранилища = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого НоваяЗависимость Из ЗначениеИзХранилища.Получить() Цикл
			ЗаполнитьЗначенияСвойств(ТекущийОбъект.ЗависимостиДополнительныхРеквизитов.Добавить(), НоваяЗависимость);
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
	УстановитьЗаголовкиГиперссылок();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраницуВыбора()
	
	Если ПереданныеПараметрыФормы.ЭтоДополнительноеСведение <> Неопределено Тогда
		ЭтоДополнительноеСведение = ПереданныеПараметрыФормы.ЭтоДополнительноеСведение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Наборы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК Наборы
	|ГДЕ
	|	Наборы.Родитель = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка)";
	
	Наборы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ДоступныеНаборы = Новый Массив;
	Для Каждого Ссылка Из Наборы Цикл
		ВидыСвойствНабора = УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Ссылка, Ложь);
		
		Если ЭтоДополнительноеСведение = 1
		   И ВидыСвойствНабора.ДополнительныеСведения
		 ИЛИ ЭтоДополнительноеСведение = 0
		   И ВидыСвойствНабора.ДополнительныеРеквизиты Тогда
			
			ДоступныеНаборы.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	РодительТекущегоНабора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ПереданныеПараметрыФормы.ТекущийНаборСвойств, "Родитель");
	ИсключаемыеНаборы = Новый Массив;
	ИсключаемыеНаборы.Добавить(ПереданныеПараметрыФормы.ТекущийНаборСвойств);
	Если ЗначениеЗаполнено(РодительТекущегоНабора) Тогда
		ПредопределенныеНаборы = УправлениеСвойствамиПовтИсп.ПредопределенныеНаборыСвойств();
		СвойстваНабора = ПредопределенныеНаборы.Получить(РодительТекущегоНабора); // см. Справочники.НаборыДополнительныхРеквизитовИСведений.СвойстваНабора
		Если СвойстваНабора = Неопределено Тогда
			ИмяПредопределенныхДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РодительТекущегоНабора, "ИмяПредопределенныхДанных");
		Иначе
			ИмяПредопределенныхДанных = СвойстваНабора.Имя;
		КонецЕсли;
		ПозицияЗаменяемогоСимвола = СтрНайти(ИмяПредопределенныхДанных, "_");
		ПолноеИмяОбъекта = Лев(ИмяПредопределенныхДанных, ПозицияЗаменяемогоСимвола - 1)
			             + "."
			             + Сред(ИмяПредопределенныхДанных, ПозицияЗаменяемогоСимвола + 1);
		Менеджер         = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
		
		Если СтрНачинаетсяС(ПолноеИмяОбъекта, "Документ") Тогда
			НовыйОбъект = Менеджер.СоздатьДокумент();
		Иначе
			НовыйОбъект = Менеджер.СоздатьЭлемент();
		КонецЕсли;
		НаборыОбъекта = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(НовыйОбъект);
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ОбщийНабор", Истина);
		НайденныеСтроки = НаборыОбъекта.НайтиСтроки(ПараметрыОтбора);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если ПереданныеПараметрыФормы.ТекущийНаборСвойств = НайденнаяСтрока.Набор Тогда
				Продолжить;
			КонецЕсли;
			ИсключаемыеНаборы.Добавить(НайденнаяСтрока.Набор);
		КонецЦикла;
	КонецЕсли;
	
	Если ЭтоДополнительноеСведение = 1 Тогда
		Элементы.НеиспользуемыеРеквизиты.Заголовок = НСтр("ru = 'Неиспользуемые дополнительные сведения'");
	Иначе
		Элементы.НеиспользуемыеРеквизиты.Заголовок = НСтр("ru = 'Неиспользуемые дополнительные реквизиты'");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		НаборыСвойств, "Наборы", ДоступныеНаборы, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		НаборыСвойств, "ИсключаемыеНаборы", ИсключаемыеНаборы, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		НаборыСвойств, "ЭтоДополнительноеСведение", (ЭтоДополнительноеСведение = 1), Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		НаборыСвойств, "ЭтоОсновнойЯзык", ТекущийЯзык() = Метаданные.ОсновнойЯзык, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		НаборыСвойств, "КодЯзыка", ТекущийЯзык().КодЯзыка, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		ОбщиеНаборыСвойств, "ЭтоДополнительноеСведение", (ЭтоДополнительноеСведение = 1), Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		ОбщиеНаборыСвойств, "ОбщиеДополнительныеСведения", НСтр("ru = 'Неиспользуемые дополнительные сведения'"), Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		ОбщиеНаборыСвойств, "ОбщиеДополнительныеРеквизиты", НСтр("ru = 'Неиспользуемые дополнительные реквизиты'"), Истина);
	
	УстановитьУсловноеОформлениеСписка(ДоступныеНаборы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка(ДоступныеНаборыСписок)
	
	ЭлементУсловногоОформления = НаборыСвойств.УсловноеОформление.Элементы.Добавить();
	
	ЭлементВидимость = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Видимость");
	ЭлементВидимость.Значение = Ложь;
	ЭлементВидимость.Использование = Истина;
	
	ГруппаЭлементовОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбораДанных.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаЭлементовОтбораДанных.Использование = Истина;
	
	ЭлементОтбораДанных = ГруппаЭлементовОтбораДанных.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбораДанных.ПравоеЗначение = ДоступныеНаборыСписок;
	ЭлементОтбораДанных.Использование  = Истина;
	
	ЭлементОтбораДанных = ГруппаЭлементовОтбораДанных.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Родитель");
	ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбораДанных.ПравоеЗначение = ДоступныеНаборыСписок;
	ЭлементОтбораДанных.Использование  = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияДополнительныхРеквизитов(ВладелецЗначений)
	
	ДеревоЗначений = РеквизитФормыВЗначение("ЗначенияДополнительныхРеквизитов");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Ссылка КАК Ссылка,
		|	ЗначенияСвойствОбъектов.Владелец КАК Владелец,
		|	0 КАК КодКартинки,
		|	ЗначенияСвойствОбъектов.Вес,
		|	ПРЕДСТАВЛЕНИЕ(ЗначенияСвойствОбъектов.Ссылка) КАК Наименование
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.ПометкаУдаления = ЛОЖЬ
		|	И ЗначенияСвойствОбъектов.Владелец = &Владелец
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектовИерархия.Ссылка,
		|	ЗначенияСвойствОбъектовИерархия.Владелец,
		|	0,
		|	ЗначенияСвойствОбъектовИерархия.Вес,
		|	ПРЕДСТАВЛЕНИЕ(ЗначенияСвойствОбъектовИерархия.Наименование) КАК Наименование
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
		|ГДЕ
		|	ЗначенияСвойствОбъектовИерархия.ПометкаУдаления = ЛОЖЬ
		|	И ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("Владелец", ВладелецЗначений);
	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДеревоЗначений = Результат.Скопировать();
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ЗначенияДополнительныхРеквизитов");
	
КонецПроцедуры

&НаСервере
Процедура КонвертироватьДополнительныйРеквизитВОбщий()
	Возврат;
	
	ВыбранныйРеквизит = ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений; // ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения
	НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйРеквизит, "НаборСвойств");
	Если Не ЗначениеЗаполнено(НаборСвойств) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыбранныйРеквизит);
		Блокировка.Заблокировать();
		
		ВыбранныйРеквизитОбъект = ВыбранныйРеквизит.ПолучитьОбъект();
		ВыбранныйРеквизитОбъект.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		ВыбранныйРеквизитОбъект.Наименование = ВыбранныйРеквизитОбъект.Заголовок;
		ВыбранныйРеквизитОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКарточкуРеквизитаИлиСведения()
	
	Если ЗначениеЗаполнено(ПереданныеПараметрыФормы.ЗначениеКопирования) Тогда
		РежимДобавленияРеквизита = "СоздатьКопированием";
	КонецЕсли;
	
	СозданиеРеквизитаКопированием = (РежимДобавленияРеквизита = "СоздатьКопированием");
	
	ТекущийНаборСвойств = ПереданныеПараметрыФормы.ТекущийНаборСвойств;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ЭтоДополнительноеСведение.Доступность = Ложь;
		ПоказатьУточнениеНабора = ПереданныеПараметрыФормы.ПоказатьУточнениеНабора;
	Иначе
		Объект.Доступен = Истина;
		Объект.Виден  = Истина;
		
		Объект.ЗависимостиДополнительныхРеквизитов.Очистить();
		Если ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
			Объект.НаборСвойств = ТекущийНаборСвойств;
		КонецЕсли;
		
		Если СозданиеРеквизитаКопированием Тогда
			Объект.ВладелецДополнительныхЗначений = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка();
		ИначеЕсли ЗначениеЗаполнено(ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений) Тогда
			Объект.ВладелецДополнительныхЗначений = ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений;
		КонецЕсли;
		
		Если ПереданныеПараметрыФормы.ЭтоДополнительноеСведение <> Неопределено Тогда
			Объект.ЭтоДополнительноеСведение = ПереданныеПараметрыФормы.ЭтоДополнительноеСведение;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ПереданныеПараметрыФормы.ЗначениеКопирования) Тогда
			Элементы.ЭтоДополнительноеСведение.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Предопределенный И НЕ ЗначениеЗаполнено(Объект.Заголовок) Тогда
		Объект.Заголовок = Объект.Наименование;
	КонецЕсли;
	
	ЭтоДополнительноеСведение = ?(Объект.ЭтоДополнительноеСведение, 1, 0);
	
	Если СозданиеРеквизитаКопированием Тогда
		// Для случаев, когда копирование выполняется из карточки реквизита по команде "Скопировать".
		Если Не ЗначениеЗаполнено(ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений) Тогда
			ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений = ПереданныеПараметрыФормы.ЗначениеКопирования;
		КонецЕсли;
		
		СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений, "ТипЗначения, ДополнительныеЗначенияСВесом, ФорматСвойства");
		
		Объект.ТипЗначения    = СвойстваВладельца.ТипЗначения;
		Объект.ФорматСвойства = СвойстваВладельца.ФорматСвойства;
		
		ЗначенияВладельцаСВесом                                = СвойстваВладельца.ДополнительныеЗначенияСВесом;
		Объект.ДополнительныеЗначенияСВесом                    = ЗначенияВладельцаСВесом;
		Элементы.ЗначенияДополнительногоРеквизита.Шапка        = ЗначенияВладельцаСВесом;
		Элементы.ЗначенияДополнительногоРеквизитаВес.Видимость = ЗначенияВладельцаСВесом;
		Элементы.СтраницыЗначенияРеквизита.ТекущаяСтраница     = Элементы.СтраницаДеревоЗначений;
		
		ЗаполнитьЗначенияДополнительныхРеквизитов(ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений);
	КонецЕсли;
	
	ОбновитьСоставЭлементовФормы();
	
	Если Объект.МногострочноеПолеВвода > 0 Тогда
		ПредставлениеРеквизита = "МногострочноеПолеВвода";
		МногострочноеПолеВводаЧисло = Объект.МногострочноеПолеВвода;
	Иначе
		ПредставлениеРеквизита = "ОднострочноеПолеВвода";
	КонецЕсли;
	
	Элементы.ВыводитьВВидеГиперссылки.Доступность    = (ПредставлениеРеквизита = "ОднострочноеПолеВвода");
	Элементы.МногострочноеПолеВводаЧисло.Доступность = (ПредставлениеРеквизита = "МногострочноеПолеВвода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораРеквизитовДляРазблокирования(РазблокируемыеРеквизиты, Контекст) Экспорт
	
	Если ТипЗнч(РазблокируемыеРеквизиты) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект,
		РазблокируемыеРеквизиты);
	
	#Если ВебКлиент Тогда
		ОбновитьОтображениеДанных();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросКогдаНаименованиеУжеИспользуется(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "ПродолжитьЗапись" Тогда
		ТекущийЭлемент = Элементы.Заголовок;
		Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
					ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
				Истина);
		КонецЕсли;
	Иначе
		ПараметрыЗаписи.Вставить("КогдаНаименованиеУжеИспользуется");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОбИзмененииНаименования(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "ПродолжитьЗапись" Тогда
		Объект.Заголовок = ТекущийЗаголовок;
		Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
					ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
				Истина);
		КонецЕсли;
	Иначе
		ПараметрыЗаписи.Вставить("ПодтвержденоИзменениеНаименования");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросКогдаИмяУжеИспользуется(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "ПродолжитьЗапись" Тогда
		ТекущийЭлемент = Элементы.Заголовок;
		Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
					ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
				Истина);
		КонецЕсли;
	Иначе
		ПараметрыЗаписи.Вставить("КогдаИмяУжеИспользуется");
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияОчисткиВесовыхКоэффициентов(Ответ, Контекст) Экспорт
	
	Если Ответ <> "ОчиститьИЗаписать" Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ОчиститьВведенныеВесовыеКоэффициенты");
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ДополнительныеЗначенияСВесомПриИзмененииЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ИзменениеИспользованияВеса", ОбработчикПродолжения,, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияВключенияВесовыхКоэффициентов(Ответ, Контекст) Экспорт
	
	Если Ответ <> "Записать" Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ДополнительныеЗначенияСВесомПриИзмененииЗавершение", ЭтотОбъект);
	ЗаписатьОбъект("ИзменениеИспользованияВеса", ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзмененииЗавершение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Оповестить(
			"Изменение_ЗначениеХарактеризуетсяВесовымКоэффициентом",
			Объект.ДополнительныеЗначенияСВесом,
			Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийКомментарийНажатиеЗавершение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказатьУточнениеНабора", Истина);
	ПараметрыФормы.Вставить("Ключ", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
		ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатиеПродолжение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокНаборов.Количество() > 1 Тогда
		ПоказатьВыборИзСписка(
			Новый ОписаниеОповещения("УточнениеНаборовКомментарийНажатиеЗавершение", ЭтотОбъект),
			СписокНаборов, Элементы.УточнениеНаборовКомментарий);
	Иначе
		УточнениеНаборовКомментарийНажатиеЗавершение(Неопределено, СписокНаборов[0].Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовКомментарийНажатиеЗавершение(ВыбранныйЭлемент, ВыбранныйНабор) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ВыбранныйНабор = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныйНабор <> Неопределено Тогда
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Набор", ВыбранныйНабор);
		ЗначениеВыбора.Вставить("Свойство", Объект.Ссылка);
		ЗначениеВыбора.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
		ОповеститьОВыборе(ЗначениеВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавленияЗавершение(Отказ, ПараметрыОбработки) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимДобавленияРеквизита = "СоздатьКопированием" Тогда
		Элементы.СтраницыЗначенияРеквизита.ТекущаяСтраница = Элементы.ДополнительныеЗначения;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", ПараметрыОбработки.Родитель);
	ЗначенияЗаполнения.Вставить("Владелец", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Если ПараметрыОбработки.Группа Тогда
		ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаГруппы", ПараметрыФормы, Элементы.Значения);
	Иначе
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		
		Если ПараметрыОбработки.Копирование Тогда
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Значения.ТекущаяСтрока);
		КонецЕсли;
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзмененияЗавершение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Если Элементы.Значения.ТекущаяСтрока <> Неопределено Тогда
		// Открытие формы значения или группы значений.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		ПараметрыФормы.Вставить("Ключ", Элементы.Значения.ТекущаяСтрока);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпискаЗначенийИзменитьЗавершение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("Свойство", Объект.Ссылка);
	ПараметрыФормы.Вставить("ВладелецДополнительныхЗначений", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ИзменениеНастройкиСвойства",
		ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаборовИзменитьЗавершение(Отказ, Контекст) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("Свойство", Объект.Ссылка);
	ПараметрыФормы.Вставить("ВладелецДополнительныхЗначений", Объект.ВладелецДополнительныхЗначений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Объект.ЭтоДополнительноеСведение);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ИзменениеНастройкиСвойства",
		ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъект(ВариантТекстаВопроса, ОбработчикПродолжения, ДополнительныеПараметры = Неопределено, ПараметрыЗаписи = Неопределено)
	
	Если ПараметрыЗаписи = Неопределено Тогда
		ПараметрыЗаписи = Новый Структура;
	КонецЕсли;
	
	Если ВариантТекстаВопроса = "ИзменениеПометкиУдаления" Тогда
		Если Модифицированность Тогда
			Если Объект.ПометкаУдаления Тогда
				ТекстВопроса = НСтр("ru = 'Для снятия пометки удаления необходимо записать внесенные изменения. Записать данные?'");
			Иначе
				ТекстВопроса = НСтр("ru = 'Для установки пометки удаления необходимо записать внесенные изменения. Записать данные?'");
			КонецЕсли;
		Иначе
			ТекстВопроса = НСтр("ru = 'Пометить ""%1"" на удаление?'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Объект.Наименование);
		КонецЕсли;
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения(
				ОбработчикПродолжения.ИмяПроцедуры, ОбработчикПродолжения.Модуль, ПараметрыЗаписи),
			ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И НЕ Модифицированность Тогда
		ВыполнитьОбработкуОповещения(Новый ОписаниеОповещения(
			ОбработчикПродолжения.ИмяПроцедуры, ОбработчикПродолжения.Модуль, ДополнительныеПараметры), Ложь);
		Возврат;
	КонецЕсли;
	
	ОбработкаПродолжения = Новый Структура;
	ОбработкаПродолжения.Вставить("ИмяПроцедуры", ОбработчикПродолжения.ИмяПроцедуры);
	ОбработкаПродолжения.Вставить("Параметры", ДополнительныеПараметры);
	ПараметрыЗаписи.Вставить("ОбработкаПродолжения", ОбработкаПродолжения);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаписатьОбъектПродолжение("Записать", ПараметрыЗаписи);
		Возврат;
	КонецЕсли;
	
	Если ВариантТекстаВопроса = "ПереходКСпискуЗначений" Тогда
		ТекстВопроса = НСтр("ru = 'Перед переходом к списку значений данные будут записаны.'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Данные будут записаны.'")
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать'"));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения(
			"ЗаписатьОбъектПродолжение", ЭтотОбъект, ПараметрыЗаписи),
		ТекстВопроса, Кнопки, , "Записать");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометкуУдаленияПродолжение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ПометкаУдаления = Не Объект.ПометкаУдаления;
	КонецЕсли;
	ЗаписатьОбъектПродолжение(Ответ, ПараметрыЗаписи);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьОбъектПродолжение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ = "Записать"
		Или Ответ = КодВозвратаДиалога.Да Тогда
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОшибкиЗаписи()
	
	Если ОбработкаПродолженияПриОшибкеЗаписи <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ОбработкаПродолженияПриОшибкеЗаписи.ИмяПроцедуры,
				ЭтотОбъект, ОбработкаПродолженияПриОшибкеЗаписи.Параметры),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФорматЗначенияЗавершение(Текст, Контекст) Экспорт
	
	Если Текст <> Неопределено Тогда
		Объект.ФорматСвойства = Текст;
		УстановитьЗаголовокКнопкиФормата(ЭтотОбъект);
		
		ТекстПредупреждения = НСтр("ru = 'Следующие настройки формата автоматически не применяются в большинстве мест:'");
		Массив = СтрРазделить(Текст, ";", Ложь);
		
		Для каждого Подстрока Из Массив Цикл
			Если СтрНайти(Подстрока, "ДП=") > 0 ИЛИ СтрНайти(Подстрока, "DE=") > 0 Тогда
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
					+ " - " + НСтр("ru = 'представление пустой даты'");
				Продолжить;
			КонецЕсли;
			Если СтрНайти(Подстрока, "ЧН=") > 0 ИЛИ СтрНайти(Подстрока, "NZ=") > 0 Тогда
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
					+ " - " + НСтр("ru = 'представление пустого числа'");
				Продолжить;
			КонецЕсли;
			Если СтрНайти(Подстрока, "ДФ=") > 0 ИЛИ СтрНайти(Подстрока, "DF=") > 0 Тогда
				Если СтрНайти(Подстрока, "ддд") > 0 ИЛИ СтрНайти(Подстрока, "ddd") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
						+ " - " + НСтр("ru = 'кратное название дня недели'");
				КонецЕсли;
				Если СтрНайти(Подстрока, "дддд") > 0 ИЛИ СтрНайти(Подстрока, "dddd") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
						+ " - " + НСтр("ru = 'полное название дня недели'");
				КонецЕсли;
				Если СтрНайти(Подстрока, "МММ") > 0 ИЛИ СтрНайти(Подстрока, "MMM") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
						+ " - " + НСтр("ru = 'кратное название месяца'");
				КонецЕсли;
				Если СтрНайти(Подстрока, "ММММ") > 0 ИЛИ СтрНайти(Подстрока, "MMMM") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
						+ " - " + НСтр("ru = 'полное название месяца'");
				КонецЕсли;
			КонецЕсли;
			Если СтрНайти(Подстрока, "ДЛФ=") > 0 ИЛИ СтрНайти(Подстрока, "DLF=") > 0 Тогда
				Если СтрНайти(Подстрока, "ДД") > 0 ИЛИ СтрНайти(Подстрока, "DD") > 0 Тогда
					ТекстПредупреждения = ТекстПредупреждения + Символы.ПС
						+ " - " + НСтр("ru = 'длинная дата (месяц прописью)'");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрЧислоСтрок(ТекстПредупреждения) > 1 Тогда
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройкиПомощника(ТекущаяСтраница = Неопределено)
	
	Если ТекущаяСтраница = Неопределено Тогда
		ТекущаяСтраница = Элементы.СтраницыПомощникКарточка.ТекущаяСтраница;
	КонецЕсли;
	
	ШаблонЗаголовкаСписка        = НСтр("ru = 'Выберите %1 для включения в набор ""%2""'");
	ШаблонЗаголовкаПереключателя = НСтр("ru = 'Выберите вариант добавления дополнительного %1 ""%2"" в набор ""%3""'");
	
	Если ТекущаяСтраница = Элементы.ВыборРеквизита Тогда
		
		Если ПереданныеПараметрыФормы.ЭтоДополнительноеСведение Тогда
			Заголовок = НСтр("ru = 'Добавление дополнительного сведения'");
		Иначе
			Заголовок = НСтр("ru = 'Добавление дополнительного реквизита'");
		КонецЕсли;
		
		Элементы.КоманднаяПанельЛево.Доступность = Ложь;
		Элементы.КомандаДалее.Заголовок = НСтр("ru = 'Далее >'");
		
		Элементы.ДекорацияЗаголовок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовкаСписка,
			?(ПереданныеПараметрыФормы.ЭтоДополнительноеСведение, НСтр("ru = 'дополнительное сведение'"), НСтр("ru = 'дополнительный реквизит'")),
			Строка(ПереданныеПараметрыФормы.ТекущийНаборСвойств));
		
	ИначеЕсли ТекущаяСтраница = Элементы.ВыборДействия Тогда
		
		Если ПереданныеПараметрыФормы.КопированиеСВопросом Тогда
			Элементы.КоманднаяПанельЛево.Доступность = Ложь;
			ВладелецДополнительныхЗначений = ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений;
		Иначе
			Элементы.КоманднаяПанельЛево.Доступность = Истина;
			ВыбранныйЭлемент = Элементы.Свойства.ТекущиеДанные;
			Если ВыбранныйЭлемент = Неопределено Тогда
				ВладелецДополнительныхЗначений = ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений;
			Иначе
				ВладелецДополнительныхЗначений = Элементы.Свойства.ТекущиеДанные.Свойство;
			КонецЕсли;
		КонецЕсли;
		Элементы.КомандаДалее.Заголовок = НСтр("ru = 'Далее >'");
		
		Элементы.РежимДобавленияРеквизита.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовкаПереключателя,
			?(ПереданныеПараметрыФормы.ЭтоДополнительноеСведение, НСтр("ru = 'сведения'"), НСтр("ru = 'реквизита'")),
			Строка(ВладелецДополнительныхЗначений),
			Строка(ПереданныеПараметрыФормы.ТекущийНаборСвойств));
		
		Если ПереданныеПараметрыФормы.ЭтоДополнительноеСведение Тогда
			Заголовок = НСтр("ru = 'Добавление дополнительного сведения'");
		Иначе
			Заголовок = НСтр("ru = 'Добавление дополнительного реквизита'");
		КонецЕсли;
		
	Иначе
		Элементы.КомандаДалее.Заголовок = НСтр("ru = 'Готово'");
		Элементы.КоманднаяПанельЛево.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставЭлементовФормы(ТекстПредупреждения = "")
	
	Если РежимПомощника Тогда
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		Элементы.КомандаДалее.КнопкаПоУмолчанию    = Истина;
	Иначе
		Элементы.КоманднаяПанельПомощника.Видимость = Ложь;
		Элементы.СтраницыПомощникКарточка.ТекущаяСтраница = Элементы.КарточкаРеквизита;
	КонецЕсли;
	
	УстановитьЗаголовокФормы();
	
	Если НЕ Объект.ТипЗначения.СодержитТип(Тип("Число"))
	   И НЕ Объект.ТипЗначения.СодержитТип(Тип("Дата"))
	   И НЕ Объект.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
		
		Объект.ФорматСвойства = "";
	КонецЕсли;
	
	УстановитьЗаголовокКнопкиФормата(ЭтотОбъект);
	
	Если Объект.ЭтоДополнительноеСведение
	 ИЛИ НЕ (    Объект.ТипЗначения.СодержитТип(Тип("Число" ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Дата"  ))
	         ИЛИ Объект.ТипЗначения.СодержитТип(Тип("Булево")) )Тогда
		Элементы.РедактироватьФорматЗначения.Видимость = Ложь;
	Иначе
		Элементы.РедактироватьФорматЗначения.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.ЭтоДополнительноеСведение
		И Объект.ТипЗначения.СодержитТип(Тип("Строка"))
		И Объект.ТипЗначения.КвалификаторыСтроки.Длина = 0 Тогда
		Элементы.ГруппаПояснениеТипаЗначения.Видимость = Истина;
	Иначе
		Элементы.ГруппаПояснениеТипаЗначения.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ Объект.ЭтоДополнительноеСведение Тогда
		Элементы.ГруппаМногострочность.Видимость = Истина;
		ПереключитьНастройкиВыводаРеквизита(Объект.ТипЗначения);
	Иначе
		Элементы.ГруппаМногострочность.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтарыйТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ТипЗначения");
	Иначе
		СтарыйТипЗначения = Новый ОписаниеТипов;
	КонецЕсли;
	
	Если Объект.ЭтоДополнительноеСведение Тогда
		Объект.ЗаполнятьОбязательно = Ложь;
		Элементы.ГруппаСвойстваИЗависимости.Видимость = Ложь;
	Иначе
		РеквизитБулево = (Объект.ТипЗначения = Новый ОписаниеТипов("Булево"));
		Элементы.ЗаполнятьОбязательно.Видимость    = Не РеквизитБулево;
		Элементы.ЗадатьУсловиеЗаполнения.Видимость = Не РеквизитБулево;
		Элементы.ГруппаСвойстваИЗависимости.Видимость = Истина;
		
		Элементы.ЗадатьУсловиеЗаполнения.Доступность  = Объект.ЗаполнятьОбязательно;
		Элементы.ЗадатьУсловиеДоступности.Доступность = Истина;
		Элементы.ЗадатьУсловиеВидимости.Доступность   = Истина;
		
		УстановитьЗаголовкиГиперссылок();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВладелецДополнительныхЗначений) Тогда
		
		СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.ВладелецДополнительныхЗначений, "ТипЗначения, ДополнительныеЗначенияСВесом");
		
		Если СвойстваВладельца.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия",
				"СправочникСсылка.ЗначенияСвойствОбъектов");
		Иначе
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				"СправочникСсылка.ЗначенияСвойствОбъектов",
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
		КонецЕсли;
		
		ВладелецЗначений = Объект.ВладелецДополнительныхЗначений;
		ЗначенияСВесом   = СвойстваВладельца.ДополнительныеЗначенияСВесом;
	Иначе
		// Проверка возможности удаления типа дополнительных значений.
		Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(СтарыйТипЗначения) Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
			
			Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЗначениеИстина
				|ИЗ
				|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
				|ГДЕ
				|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец";
			Иначе
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ИСТИНА КАК ЗначениеИстина
				|ИЗ
				|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Владелец = &Владелец";
			КонецЕсли;
			
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				
				Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
				   И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
					
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Недопустимо удалять тип ""%1"",
						           |так как дополнительные значения уже введены.
						           |Сначала нужно удалить введенные дополнительные значения.
						           |
						           |Удаление отменено.'"),
						Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
					
					Объект.ТипЗначения = Новый ОписаниеТипов(
						Объект.ТипЗначения,
						"СправочникСсылка.ЗначенияСвойствОбъектовИерархия",
						"СправочникСсылка.ЗначенияСвойствОбъектов");
				
				ИначеЕсли СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"))
				        И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
					
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Недопустимо удалять тип ""%1"",
						           |так как дополнительные значения уже введены.
						           |Сначала нужно удалить введенные дополнительные значения.
						           |
						           |Удаление отменено.'"),
						Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) );
					
					Объект.ТипЗначения = Новый ОписаниеТипов(
						Объект.ТипЗначения,
						"СправочникСсылка.ЗначенияСвойствОбъектов",
						"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Проверка, что установлено не более одного типа дополнительных значений.
		Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
		   И Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
			
			Если НЕ СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо одновременно использовать типы значения
					           |""%1"" и
					           |""%2"".
					           |
					           |Второй тип удален.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
				
				// Удаление второго типа.
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					,
					"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
			Иначе
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо одновременно использовать типы значения
					           |""%1"" и
					           |""%2"".
					           |
					           |Первый тип удален.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
				
				// Удаление первого типа.
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					,
					"СправочникСсылка.ЗначенияСвойствОбъектов");
			КонецЕсли;
		КонецЕсли;
		
		ВладелецЗначений = Объект.Ссылка;
		ЗначенияСВесом   = Объект.ДополнительныеЗначенияСВесом;
	КонецЕсли;
	
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Истина;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Истина;
		Элементы.СтраницаЗначения.Видимость = Истина;
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Иначе
		Элементы.ГруппаЗаголовкиФормЗначений.Видимость = Ложь;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Ложь;
		Элементы.СтраницаЗначения.Видимость = Ложь;
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Элементы.Значения.Шапка        = ЗначенияСВесом;
	Элементы.ЗначенияВес.Видимость = ЗначенияСВесом;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Значения, "Владелец", ВладелецЗначений, , , Истина);
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		СвойстваСписка.ТекстЗапроса =
			"ВЫБРАТЬ
			|	Значения.Ссылка,
			|	Значения.ВерсияДанных,
			|	Значения.ПометкаУдаления,
			|	Значения.Предопределенный,
			|	Значения.Владелец,
			|	Значения.Родитель,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Значения.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияПредставления.Наименование, Значения.Наименование) КАК СТРОКА(150))
			|	КОНЕЦ КАК Наименование,
			|	Значения.Вес
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК Значения
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСвойствОбъектов.Представления КАК ЗначенияПредставления
			|		ПО (ЗначенияПредставления.Ссылка = Значения.Ссылка)
			|		И ЗначенияПредставления.КодЯзыка = &КодЯзыка";
		СвойстваСписка.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектов";
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Значения,
			СвойстваСписка);
	Иначе
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		СвойстваСписка.ТекстЗапроса =
			"ВЫБРАТЬ
			|	Значения.Ссылка,
			|	Значения.ВерсияДанных,
			|	Значения.ПометкаУдаления,
			|	Значения.Предопределенный,
			|	Значения.Владелец,
			|	Значения.Родитель,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Значения.Наименование
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияПредставления.Наименование, Значения.Наименование) КАК СТРОКА(150))
			|	КОНЕЦ КАК Наименование,
			|	Значения.Вес
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК Значения
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСвойствОбъектовИерархия.Представления КАК ЗначенияПредставления
			|		ПО (ЗначенияПредставления.Ссылка = Значения.Ссылка)
			|		И ЗначенияПредставления.КодЯзыка = &КодЯзыка";
		СвойстваСписка.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектовИерархия";
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Значения,
			СвойстваСписка);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Значения, "ЭтоОсновнойЯзык", ТекущийЯзык() = Метаданные.ОсновнойЯзык, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Значения, "КодЯзыка", ТекущийЯзык().КодЯзыка, Истина);
	
	// Отображение уточнений.
	
	Если НЕ ЗначениеЗаполнено(Объект.ВладелецДополнительныхЗначений) Тогда
		Элементы.УточнениеСпискаЗначений.Видимость = Ложь;
		Элементы.ДополнительныеЗначения.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияКоманднаяПанельРедактирования.Видимость = Истина;
		Элементы.ЗначенияКонтекстноеМенюРедактирования.Видимость = Истина;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Истина;
	Иначе
		Элементы.УточнениеСпискаЗначений.Видимость = Истина;
		Элементы.ДополнительныеЗначения.ТолькоПросмотр = Истина;
		Элементы.ЗначенияКоманднаяПанельРедактирования.Видимость = Ложь;
		Элементы.ЗначенияКонтекстноеМенюРедактирования.Видимость = Ложь;
		Элементы.ДополнительныеЗначенияСВесом.Видимость = Ложь;
		
		Элементы.УточнениеСпискаЗначенийКомментарий.Гиперссылка = ЗначениеЗаполнено(Объект.Ссылка);
		Элементы.УточнениеСпискаЗначенийИзменить.Доступность    = ЗначениеЗаполнено(Объект.Ссылка);
		
		СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.ВладелецДополнительныхЗначений, "Заголовок, ЭтоДополнительноеСведение");
		
		Если СвойстваВладельца.ЭтоДополнительноеСведение <> Истина Тогда
			ШаблонУточнения = НСтр("ru = 'Список значений общий с реквизитом ""%1""'");
		Иначе
			ШаблонУточнения = НСтр("ru = 'Список значений общий со сведением ""%1""'");
		КонецЕсли;
		
		Элементы.УточнениеСпискаЗначенийКомментарий.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУточнения, СвойстваВладельца.Заголовок);
	КонецЕсли;
	
	ОбновитьСписокНаборов();
	
	Если НЕ ПоказатьУточнениеНабора И СписокНаборов.Количество() < 2 Тогда
		
		Элементы.УточнениеНаборов.Видимость = Ложь;
	Иначе
		Элементы.УточнениеНаборов.Видимость = Истина;
		Элементы.УточнениеНаборовКомментарий.Гиперссылка = Истина;
		
		Элементы.УточнениеНаборовИзменить.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
		
		Если СписокНаборов.Количество() < 2 Тогда
			
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
		
		ИначеЕсли ЗначениеЗаполнено(ТекущийНаборСвойств) Тогда
			Элементы.УточнениеНаборовИзменить.Видимость = Истина;
		Иначе
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
		КонецЕсли;
		
		Если СписокНаборов.Количество() = 0 Тогда
			Элементы.УточнениеНаборовКомментарий.Гиперссылка = Ложь;
			Элементы.УточнениеНаборовИзменить.Видимость = Ложь;
			
			Если Объект.ЭтоДополнительноеСведение Тогда
				ТекстКомментария = НСтр("ru = 'Сведение не входит в наборы'");
			Иначе
				ТекстКомментария = НСтр("ru = 'Реквизит не входит в наборы'");
			КонецЕсли;
		ИначеЕсли СписокНаборов.Количество() < 2 Тогда
			Если Объект.ЭтоДополнительноеСведение Тогда
				ШаблонУточнения = НСтр("ru = 'Сведение входит в набор: %1'");
			Иначе
				ШаблонУточнения = НСтр("ru = 'Реквизит входит в набор: %1'");
			КонецЕсли;
			ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУточнения, СокрЛП(СписокНаборов[0].Представление));
		Иначе
			Если Объект.ЭтоДополнительноеСведение Тогда
				ШаблонУточнения = НСтр("ru = 'Сведение входит в %1 %2'");
			Иначе
				ШаблонУточнения = НСтр("ru = 'Реквизит входит в %1 %2'");
			КонецЕсли;
			
			СтрокаНаборы = ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(СписокНаборов.Количество(),
				"", НСтр("ru = 'набор,набора,наборов,,,,,,0'"));
			
			ТекстКомментария = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУточнения, Формат(СписокНаборов.Количество(), "ЧГ="), СтрокаНаборы);
		КонецЕсли;
		
		Элементы.УточнениеНаборовКомментарий.Заголовок = ТекстКомментария + " ";
		
		Если Элементы.УточнениеНаборовКомментарий.Гиперссылка Тогда
			Элементы.УточнениеНаборовКомментарий.Подсказка = НСтр("ru = 'Переход к набору'");
		Иначе
			Элементы.УточнениеНаборовКомментарий.Подсказка = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьНастройкиВыводаРеквизита(ТипЗначения)
	
	РазрешитьВыборМногострочногоПоля = (Объект.ТипЗначения.Типы().Количество() = 1)
		И (Объект.ТипЗначения.СодержитТип(Тип("Строка")));
	РазрешитьВыводВВидеГиперссылки   = РазрешитьВыборМногострочногоПоля
		Или (Не Объект.ТипЗначения.СодержитТип(Тип("Строка"))
			И Не Объект.ТипЗначения.СодержитТип(Тип("Дата"))
			И Не Объект.ТипЗначения.СодержитТип(Тип("Булево"))
			И Не Объект.ТипЗначения.СодержитТип(Тип("Число")));
	
	Элементы.ОднострочныйВид.Видимость                       = РазрешитьВыборМногострочногоПоля;
	Элементы.ГруппаМногострочноеПолеВводаНастройки.Видимость = РазрешитьВыборМногострочногоПоля;
	Элементы.ВыводитьВВидеГиперссылки.Видимость              = РазрешитьВыводВВидеГиперссылки;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВведенныеВесовыеКоэффициенты()
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	Блокировка.Добавить(ИмяТаблицыЗначений);
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТекущаяТаблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектов КАК ТекущаяТаблица
		|ГДЕ
		|	ТекущаяТаблица.Вес <> 0";
		Запрос.Текст = СтрЗаменить(Запрос.Текст , "Справочник.ЗначенияСвойствОбъектов", ИмяТаблицыЗначений);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗначениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗначениеОбъект.Вес = 0;
			ЗначениеОбъект.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаборов()
	
	СписокНаборов.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДополнительныеРеквизиты.Ссылка КАК Набор,
		|	ДополнительныеРеквизиты.Ссылка.Наименование
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
		|ГДЕ
		|	ДополнительныеРеквизиты.Свойство = &Свойство
		|	И НЕ ДополнительныеРеквизиты.Ссылка.ЭтоГруппа
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеСведения.Ссылка,
		|	ДополнительныеСведения.Ссылка.Наименование
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Свойство = &Свойство
		|	И НЕ ДополнительныеСведения.Ссылка.ЭтоГруппа");
		
		Запрос.УстановитьПараметр("Свойство", Объект.Ссылка);
		
		НачатьТранзакцию();
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				СписокНаборов.Добавить(Выборка.Набор, Выборка.Наименование + "         ");
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриСменеСтраницы(Направление, ОсновнаяСтраница, ТекущаяСтраница)
	
	ОсновнаяСтраница.ТекущаяСтраница = ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.ВыборДействия Тогда
		Если Направление = "Вперед" Тогда
			ВыбранныйЭлемент = Элементы.Свойства.ТекущиеДанные;
			ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений = ВыбранныйЭлемент.Свойство;
			ЗаполнитьСписокДействийПриДобавленииРеквизита();
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = Элементы.КарточкаРеквизита Тогда
		ЗаполнитьКарточкуРеквизитаИлиСведения();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитСоСпискомДополнительныхЗначений()
	
	РеквизитСоСпискомДополнительныхЗначений = Истина;
	СвойстваВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений, "ТипЗначения");
	Если Не СвойстваВладельца.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"))
		И Не СвойстваВладельца.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
		РеквизитСоСпискомДополнительныхЗначений = Ложь;
	КонецЕсли;
	
	Возврат РеквизитСоСпискомДополнительныхЗначений;
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокДействийПриДобавленииРеквизита()
	
	РеквизитСоСпискомДополнительныхЗначений = РеквизитСоСпискомДополнительныхЗначений();
	
	Если ПереданныеПараметрыФормы.ЭтоДополнительноеСведение Тогда
		ДобавитьОбщий = НСтр("ru = 'Добавить сведение как есть (рекомендуется)
			|
			|В этом случае будет возможно отбирать по нему данные разных типов в списках и отчетах.'");
		СделатьПоОбразцу = НСтр("ru = 'Сделать копию сведения по образцу (с общим списком значений)
			|
			|Список значений этого сведения будет общим с исходным сведением.
			|С помощью этого варианта удобно выполнять централизованную настройку списка значений сразу для нескольких однотипных сведений.
			|При этом можно отредактировать наименование и ряд других свойств сведения.'");
		СоздатьКопированием = НСтр("ru = 'Сделать копию сведения
			|
			|Будет создана копия сведения%1'");
	Иначе
		ДобавитьОбщий = НСтр("ru = 'Добавить реквизит как есть (рекомендуется)
			|
			|В этом случае будет возможно отбирать по нему данные разных типов в списках и отчетах.'");
		СделатьПоОбразцу = НСтр("ru = 'Сделать копию реквизита по образцу (с общим списком значений)
			|
			|Список значений этого реквизита будет общим с исходным реквизитом.
			|С помощью этого варианта удобно выполнять централизованную настройку списка значений сразу для нескольких однотипных реквизитов.
			|При этом можно отредактировать наименование и ряд других свойств реквизита.'");
		СоздатьКопированием = НСтр("ru = 'Сделать копию реквизита
			|
			|Будет создана копия реквизита%1'");
	КонецЕсли;
	
	СписокВыбора = Элементы.РежимДобавленияРеквизита.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если РеквизитСоСпискомДополнительныхЗначений Тогда
		ШаблонВставки = " " + НСтр("ru = 'и всех его значений.'");
	Иначе
		ШаблонВставки = ".";
	КонецЕсли;
	СоздатьКопированием = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СоздатьКопированием, ШаблонВставки);
	
	СписокВыбора.Добавить("ДобавитьОбщийРеквизитВНабор", ДобавитьОбщий);
	Если РеквизитСоСпискомДополнительныхЗначений Тогда
		СписокВыбора.Добавить("СоздатьПоОбразцу", СделатьПоОбразцу);
	КонецЕсли;
	СписокВыбора.Добавить("СоздатьКопированием", СоздатьКопированием);
	
	РежимДобавленияРеквизита = "ДобавитьОбщийРеквизитВНабор";
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияДополнительногоРеквизитаПриКопировании(ТекущийОбъект)
	
	Если ТекущийОбъект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
		Родитель = Справочники.ЗначенияСвойствОбъектовИерархия.ПустаяСсылка();
	Иначе
		Родитель = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
	КонецЕсли;
	
	Владелец = ТекущийОбъект.Ссылка;
	СтрокаДерева = ЗначенияДополнительныхРеквизитов.ПолучитьЭлементы();
	ЗаписатьЗначенияДополнительногоРеквизитаПриКопированииРекурсивно(Владелец, СтрокаДерева, Родитель);
	СтрокаДерева.Очистить();
	Элементы.СтраницыЗначенияРеквизита.ТекущаяСтраница = Элементы.ДополнительныеЗначения;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияДополнительногоРеквизитаПриКопированииРекурсивно(Владелец, СтрокаДерева, Родитель)
	
	Для Каждого ЭлементДерева Из СтрокаДерева Цикл
		КопияОбъекта = ЭлементДерева.Ссылка.ПолучитьОбъект().Скопировать();
		КопияОбъекта.Владелец = Владелец;
		КопияОбъекта.Родитель = Родитель;
		КопияОбъекта.Записать();
		
		ДочерниеЭлементы = ЭлементДерева.ПолучитьЭлементы();
		ЗаписатьЗначенияДополнительногоРеквизитаПриКопированииРекурсивно(Владелец, ДочерниеЭлементы, КопияОбъекта.Ссылка)
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиГиперссылок()
	
	ЗаданаЗависимостьДоступности              = Ложь;
	ЗаданаЗависимостьОбязательностиЗаполнения = Ложь;
	ЗаданаЗависимостьВидимости                = Ложь;
	ЗависимостиСвойств = Объект.ЗависимостиДополнительныхРеквизитов;
	
	ОтборПоНабору = Новый Структура;
	ОтборПоНабору.Вставить("НаборСвойств", ТекущийНаборСвойств);
	НайденныеЗависимости = Объект.ЗависимостиДополнительныхРеквизитов.НайтиСтроки(ОтборПоНабору);
	
	Для Каждого ЗависимостьСвойства Из НайденныеЗависимости Цикл
		Если ЗависимостьСвойства.ЗависимоеСвойство = "Доступен" Тогда
			ЗаданаЗависимостьДоступности = Истина;
		ИначеЕсли ЗависимостьСвойства.ЗависимоеСвойство = "ЗаполнятьОбязательно" Тогда
			ЗаданаЗависимостьОбязательностиЗаполнения = Истина;
		ИначеЕсли ЗависимостьСвойства.ЗависимоеСвойство = "Виден" Тогда
			ЗаданаЗависимостьВидимости = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ШаблонЗависимостьЗадана = НСтр("ru = 'с условием'");
	ШаблонЗависимостьНеЗадана = НСтр("ru = 'всегда'");
	
	Элементы.ЗадатьУсловиеДоступности.Заголовок = ?(ЗаданаЗависимостьДоступности,
		ШаблонЗависимостьЗадана,
		ШаблонЗависимостьНеЗадана);
	
	Элементы.ЗадатьУсловиеЗаполнения.Заголовок = ?(ЗаданаЗависимостьОбязательностиЗаполнения,
		ШаблонЗависимостьЗадана,
		ШаблонЗависимостьНеЗадана);
	
	Элементы.ЗадатьУсловиеВидимости.Заголовок = ?(ЗаданаЗависимостьВидимости,
		ШаблонЗависимостьЗадана,
		ШаблонЗависимостьНеЗадана);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиЗависимости(НастраиваемоеСвойство)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДополнительныйРеквизит", Объект.Ссылка);
	ПараметрыФормы.Вставить("ЗависимостиРеквизитов", Объект.ЗависимостиДополнительныхРеквизитов);
	ПараметрыФормы.Вставить("Набор", ТекущийНаборСвойств);
	ПараметрыФормы.Вставить("НастраиваемоеСвойство", НастраиваемоеСвойство);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ЗависимостьРеквизитов", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.ЭтоДополнительноеСведение Тогда
			Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Дополнительное сведение)'");
		Иначе
			Заголовок = Строка(Объект.Заголовок) + " " + НСтр("ru = '(Дополнительный реквизит)'");
		КонецЕсли;
	Иначе
		Если Объект.ЭтоДополнительноеСведение Тогда
			Заголовок = НСтр("ru = 'Дополнительное сведение (создание)'");
		Иначе
			Заголовок = НСтр("ru = 'Дополнительный реквизит (создание)'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииТекущегоНабора()
	
	Если Элементы.НаборыСвойств.ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ВыбранныйНаборСвойств) Тогда
			ВыбранныйНаборСвойств = Неопределено;
			ПриИзмененииТекущегоНабораНаСервере();
		КонецЕсли;
		
	ИначеЕсли Элементы.НаборыСвойств.ТекущиеДанные.Ссылка <> ВыбранныйНаборСвойств Тогда
		ВыбранныйНаборСвойств = Элементы.НаборыСвойств.ТекущиеДанные.Ссылка;
		ТекущийНаборЭтоГруппа = Элементы.НаборыСвойств.ТекущиеДанные.ЭтоГруппа;
		ПриИзмененииТекущегоНабораНаСервере(ТекущийНаборЭтоГруппа);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТекущегоНабораНаСервере(ТекущийНаборЭтоГруппа = Неопределено)
	
	Если ЗначениеЗаполнено(ВыбранныйНаборСвойств)
		И НЕ ТекущийНаборЭтоГруппа Тогда
		ОбновитьСписокСвойствТекущегоНабора();
	Иначе
		Свойства.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокСвойствТекущегоНабора()
	
	Запрос = Новый Запрос;
	
	Если Не Элементы.НеиспользуемыеРеквизиты.Пометка Тогда
		Запрос.УстановитьПараметр("Набор", ВыбранныйНаборСвойств);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СвойстваНаборов.НомерСтроки,
			|	СвойстваНаборов.Свойство,
			|	СвойстваНаборов.ПометкаУдаления,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Свойства.Заголовок
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.Заголовок, Свойства.Заголовок) КАК СТРОКА(150))
			|	КОНЕЦ КАК Заголовок,
			|	Свойства.ВладелецДополнительныхЗначений,
			|	Свойства.ТипЗначения КАК ТипЗначения,
			|	ИСТИНА КАК Общее,
			|	ВЫБОР
			|		КОГДА СвойстваНаборов.ПометкаУдаления = ИСТИНА
			|			ТОГДА 4
			|		ИНАЧЕ 3
			|	КОНЕЦ КАК НомерКартинки,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Свойства.Подсказка
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.Подсказка, Свойства.Подсказка) КАК СТРОКА(150))
			|	КОНЕЦ КАК Подсказка,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Свойства.ЗаголовокФормыЗначения
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.ЗаголовокФормыЗначения, Свойства.ЗаголовокФормыЗначения) КАК СТРОКА(150))
			|	КОНЕЦ КАК ЗаголовокФормыЗначения,
			|	ВЫБОР
			|		КОГДА &ЭтоОсновнойЯзык
			|		ТОГДА Свойства.ЗаголовокФормыВыбораЗначения
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.ЗаголовокФормыВыбораЗначения, Свойства.ЗаголовокФормыВыбораЗначения) КАК СТРОКА(150))
			|	КОНЕЦ КАК ЗаголовокФормыВыбораЗначения
			|ИЗ
			|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНаборов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
			|		ПО СвойстваНаборов.Свойство = Свойства.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Представления КАК СвойстваПредставления
			|		ПО СвойстваНаборов.Свойство = СвойстваПредставления.Ссылка
			|			И СвойстваПредставления.КодЯзыка = &КодЯзыка
			|
			|ГДЕ
			|	СвойстваНаборов.Ссылка = &Набор
			|
			|УПОРЯДОЧИТЬ ПО
			|	СвойстваНаборов.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Наборы.ВерсияДанных КАК ВерсияДанных
			|ИЗ
			|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК Наборы
			|ГДЕ
			|	Наборы.Ссылка = &Набор";
		
		Если ЭтоДополнительноеСведение Тогда
			Запрос.Текст = СтрЗаменить(
				Запрос.Текст,
				"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты",
				"Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения");
		КонецЕсли;
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Свойства.Ссылка КАК Свойство,
		|	Свойства.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА &ЭтоОсновнойЯзык
		|		ТОГДА Свойства.Заголовок
		|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.Заголовок, Свойства.Заголовок) КАК СТРОКА(150))
		|	КОНЕЦ КАК Заголовок,
		|	Свойства.ВладелецДополнительныхЗначений,
		|	Свойства.ТипЗначения КАК ТипЗначения,
		|	ИСТИНА КАК Общее,
		|	ВЫБОР
		|		КОГДА Свойства.ПометкаУдаления = ИСТИНА
		|			ТОГДА 4
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК НомерКартинки,
		|	ВЫБОР
		|		КОГДА &ЭтоОсновнойЯзык
		|		ТОГДА Свойства.Подсказка
		|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.Подсказка, Свойства.Подсказка) КАК СТРОКА(150))
		|	КОНЕЦ КАК Подсказка,
		|	ВЫБОР
		|		КОГДА &ЭтоОсновнойЯзык
		|		ТОГДА Свойства.ЗаголовокФормыЗначения
		|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.ЗаголовокФормыЗначения, Свойства.ЗаголовокФормыЗначения) КАК СТРОКА(150))
		|	КОНЕЦ КАК ЗаголовокФормыЗначения,
		|	ВЫБОР
		|		КОГДА &ЭтоОсновнойЯзык
		|		ТОГДА Свойства.ЗаголовокФормыВыбораЗначения
		|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СвойстваПредставления.ЗаголовокФормыВыбораЗначения, Свойства.ЗаголовокФормыВыбораЗначения) КАК СТРОКА(150))
		|	КОНЕЦ КАК ЗаголовокФормыВыбораЗначения
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Представления КАК СвойстваПредставления
		|		ПО Свойства.Ссылка = СвойстваПредставления.Ссылка
		|			И СвойстваПредставления.КодЯзыка = &КодЯзыка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.[ИмяТаблицы] КАК СоставНабора
		|		ПО Свойства.Ссылка = СоставНабора.Свойство
		|		
		|ГДЕ
		|	Свойства.ЭтоДополнительноеСведение = &ЭтоДополнительноеСведение
		|	И СоставНабора.Свойство ЕСТЬ NULL
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""ВерсияДанных"" КАК ВерсияДанных";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ИмяТаблицы]",
			?(ЭтоДополнительноеСведение, "ДополнительныеСведения", "ДополнительныеРеквизиты"));
		Запрос.УстановитьПараметр("ЭтоДополнительноеСведение", (ЭтоДополнительноеСведение = 1));
	КонецЕсли;
	Запрос.УстановитьПараметр("ЭтоОсновнойЯзык", ТекущийЯзык() = Метаданные.ОсновнойЯзык);
	Запрос.УстановитьПараметр("КодЯзыка", ТекущийЯзык().КодЯзыка);
	
	НачатьТранзакцию();
	Попытка
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если Элементы.Свойства.ТекущаяСтрока = Неопределено Тогда
		Строка = Неопределено;
	Иначе
		Строка = Свойства.НайтиПоИдентификатору(Элементы.Свойства.ТекущаяСтрока);
	КонецЕсли;
	ТекущееСвойство = ?(Строка = Неопределено, Неопределено, Строка.Свойство);
	
	Свойства.Очистить();
	
	Выборка = РезультатыЗапроса[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Свойства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		НоваяСтрока.ОбщиеЗначения = ЗначениеЗаполнено(Выборка.ВладелецДополнительныхЗначений);
		
		Если Выборка.ТипЗначения <> NULL
		   И УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Выборка.ТипЗначения) Тогда
			
			НоваяСтрока.ТипЗначения = Строка(Новый ОписаниеТипов(
				Выборка.ТипЗначения,
				,
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия,
				|СправочникСсылка.ЗначенияСвойствОбъектов"));
			
			Запрос = Новый Запрос;
			Если ЗначениеЗаполнено(Выборка.ВладелецДополнительныхЗначений) Тогда
				Запрос.УстановитьПараметр("Владелец", Выборка.ВладелецДополнительныхЗначений);
			Иначе
				Запрос.УстановитьПараметр("Владелец", Выборка.Свойство);
			КонецЕсли;
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 4
			|	ПРЕДСТАВЛЕНИЕ(ЗначенияСвойствОбъектов.Ссылка) КАК Наименование
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектов.ЭтоГруппа
			|	И НЕ ЗначенияСвойствОбъектов.ПометкаУдаления
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 4
			|	ПРЕДСТАВЛЕНИЕ(ЗначенияСвойствОбъектовИерархия.Ссылка) КАК Наименование
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
			|ГДЕ
			|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектовИерархия.ПометкаУдаления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ЗначениеИстина
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Владелец = &Владелец
			|	И НЕ ЗначенияСвойствОбъектов.ЭтоГруппа
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
			|ГДЕ
			|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец";
			РезультатыЗапроса = Запрос.ВыполнитьПакет();
			
			ПервыеЗначения = РезультатыЗапроса[0].Выгрузить().ВыгрузитьКолонку("Наименование");
			
			Если ПервыеЗначения.Количество() = 0 Тогда
				Если РезультатыЗапроса[1].Пустой() Тогда
					ПредставлениеЗначений = НСтр("ru = 'Значения еще не введены'");
				Иначе
					ПредставлениеЗначений = НСтр("ru = 'Значения помечены на удаление'");
				КонецЕсли;
			Иначе
				ПредставлениеЗначений = "";
				Номер = 0;
				Для каждого Значение Из ПервыеЗначения Цикл
					Номер = Номер + 1;
					Если Номер = 4 Тогда
						ПредставлениеЗначений = ПредставлениеЗначений + ",...";
						Прервать;
					КонецЕсли;
					ПредставлениеЗначений = ПредставлениеЗначений + ?(Номер > 1, ", ", "") + Значение;
				КонецЦикла;
			КонецЕсли;
			ПредставлениеЗначений = "<" + ПредставлениеЗначений + ">";
			Если ЗначениеЗаполнено(НоваяСтрока.ТипЗначения) Тогда
				ПредставлениеЗначений = ПредставлениеЗначений + ", ";
			КонецЕсли;
			НоваяСтрока.ТипЗначения = ПредставлениеЗначений + НоваяСтрока.ТипЗначения;
		КонецЕсли;
		
		Если Выборка.Свойство = ТекущееСвойство Тогда
			Элементы.Свойства.ТекущаяСтрока =
				Свойства[Свойства.Количество()-1].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСтруктуруПереданныхПараметров()
	ПереданныеПараметрыФормы = Новый Структура;
	ПереданныеПараметрыФормы.Вставить("ВладелецДополнительныхЗначений");
	ПереданныеПараметрыФормы.Вставить("ПоказатьУточнениеНабора");
	ПереданныеПараметрыФормы.Вставить("ТекущийНаборСвойств");
	ПереданныеПараметрыФормы.Вставить("ЭтоДополнительноеСведение");
	ПереданныеПараметрыФормы.Вставить("ВыборОбщегоСвойства");
	ПереданныеПараметрыФормы.Вставить("ВыбранныеЗначения");
	ПереданныеПараметрыФормы.Вставить("ВыборВладельцаДополнительныхЗначений");
	ПереданныеПараметрыФормы.Вставить("ЗначениеКопирования");
	ПереданныеПараметрыФормы.Вставить("КопированиеСВопросом");
	ПереданныеПараметрыФормы.Вставить("Перетаскивание", Ложь);
	
	ЗаполнитьЗначенияСвойств(ПереданныеПараметрыФормы, Параметры);
	
	ВладелецЗначений = ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений;
	Если ЗначениеЗаполнено(ВладелецЗначений) Тогда
		ВладелецЗначений = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецЗначений, "ВладелецДополнительныхЗначений");
		Если ЗначениеЗаполнено(ВладелецЗначений) Тогда
			ПереданныеПараметрыФормы.ВладелецДополнительныхЗначений = ВладелецЗначений;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция НаименованиеУжеИспользуется(Знач Заголовок, Знач ТекущееСвойство, Знач НаборСвойств, НовоеНаименование, Знач Представления)
	
	Если ТекущийЯзык() <> ОбщегоНазначения.КодОсновногоЯзыка() Тогда
		Отбор = Новый Структура();
		Отбор.Вставить("КодЯзыка", ОбщегоНазначения.КодОсновногоЯзыка());
		НайденныеСтроки = Представления.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Заголовок = НайденныеСтроки[0].Заголовок;
		КонецЕсли;
	КонецЕсли;
	
	НовоеНаименование = Заголовок;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СвойстваНабора.Свойство КАК Свойство,
		|	РеквизитыИСведения.ЭтоДополнительноеСведение КАК ЭтоДополнительноеСведение
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваНабора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК РеквизитыИСведения
		|		ПО (РеквизитыИСведения.Ссылка = СвойстваНабора.Свойство)
		|ГДЕ
		|	РеквизитыИСведения.Заголовок = &Наименование
		|	И СвойстваНабора.Ссылка = &НаборСвойств
		|	И СвойстваНабора.Свойство <> &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СвойстваНабора.Свойство КАК Свойство,
		|	РеквизитыИСведения.ЭтоДополнительноеСведение КАК ЭтоДополнительноеСведение
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК СвойстваНабора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК РеквизитыИСведения
		|		ПО (РеквизитыИСведения.Ссылка = СвойстваНабора.Свойство)
		|ГДЕ
		|	РеквизитыИСведения.Заголовок = &Наименование
		|	И СвойстваНабора.Ссылка = &НаборСвойств
		|	И СвойстваНабора.Свойство <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",       ТекущееСвойство);
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.УстановитьПараметр("Наименование", НовоеНаименование);
	
	НачатьТранзакцию();
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат "";
	КонецЕсли;
	
	Если Выборка.ЭтоДополнительноеСведение Тогда
		ТекстВопроса = НСтр("ru = 'Существует дополнительное сведение с наименованием
		                          |""%1"".'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Существует дополнительный реквизит с наименованием
		                          |""%1"".'");
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстВопроса + Символы.ПС + Символы.ПС
		                         + НСтр("ru = 'Рекомендуется использовать другое наименование,
		                         |иначе программа может работать некорректно.'"),
		НовоеНаименование);
	
	Возврат ТекстВопроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяУжеИспользуется(Знач Имя, Знач ТекущееСвойство, НовоеНаименование)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Свойства.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.Имя = &Имя
	|	И Свойства.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ТекущееСвойство);
	Запрос.УстановитьПараметр("Имя",    Имя);
	
	НачатьТранзакцию();
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат "";
	КонецЕсли;
	
	Если Выборка.ЭтоДополнительноеСведение Тогда
		ТекстВопроса = НСтр("ru = 'Существует дополнительное сведение с именем
		                          |""%1"".'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Существует дополнительный реквизит с именем
		                          |""%1"".'");
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстВопроса + Символы.ПС + Символы.ПС
		                         + НСтр("ru = 'Рекомендуется использовать другое имя,
		                         |иначе программа может работать некорректно.
		                         |
		                         |Создать новое имя и продолжить запись?'"),
		Имя);
	
	Возврат ТекстВопроса;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокКнопкиФормата(Форма)
	
	Если ПустаяСтрока(Форма.Объект.ФорматСвойства) Тогда
		ТекстЗаголовка = НСтр("ru = 'Формат по умолчанию'");
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Формат установлен'");
	КонецЕсли;
	
	Форма.Элементы.РедактироватьФорматЗначения.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти
