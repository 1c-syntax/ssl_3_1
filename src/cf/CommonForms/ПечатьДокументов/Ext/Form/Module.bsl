///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КоллекцияПечатныхФорм;
	
	УстановитьУсловноеОформление();
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПользовательскиеМакетыПечати) Тогда
		Элементы.КнопкаПерейтиКУправлениюМакетами.Видимость = Ложь;
	КонецЕсли;
	
	// Проверка входных параметров.
	Если Не ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда 
		ОбщегоНазначенияКлиентСервер.Проверить(ТипЗнч(Параметры.ПараметрКоманды) = Тип("Массив") Или ОбщегоНазначения.ЗначениеСсылочногоТипа(Параметры.ПараметрКоманды),
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Недопустимое значение параметра ПараметрКоманды при вызове метода УправлениеПечатьюКлиент.ВыполнитьКомандуПечати.
				|Ожидалось: Массив, ЛюбаяСсылка.
				|Передано: %1'"), ТипЗнч(Параметры.ПараметрКоманды)));
	КонецЕсли;

	// Поддержка обратной совместимости с 2.1.3.
	ПараметрыПечати = Параметры.ПараметрыПечати;
	Если Параметры.ПараметрыПечати = Неопределено Тогда
		ПараметрыПечати = Новый Структура;
	КонецЕсли;
	Если Не ПараметрыПечати.Свойство("ДополнительныеПараметры") Тогда
		Параметры.ПараметрыПечати = Новый Структура("ДополнительныеПараметры", ПараметрыПечати);
		Для Каждого ПараметрПечати Из ПараметрыПечати Цикл
			Параметры.ПараметрыПечати.Вставить(ПараметрПечати.Ключ, ПараметрПечати.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.КоллекцияПечатныхФорм = Неопределено Тогда
		КоллекцияПечатныхФорм = СформироватьПечатныеФормы(Параметры.ИменаМакетов, Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	Иначе
		КоллекцияПечатныхФорм = Параметры.КоллекцияПечатныхФорм;
		ОбъектыПечати = Параметры.ОбъектыПечати;
		ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
	КонецЕсли;
	
	СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм);
	СохранитьНастройкиКомплектаПоУмолчанию();
	ЗагрузитьНастройкиКоличестваКопий();
	ЕстьРазрешенныйВывод = ЕстьРазрешенныйВывод();
	НастроитьВидимостьЭлементовФормы(ЕстьРазрешенныйВывод);
	УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод);
	УстановитьИмяПринтераВПодсказкеКнопкиПечать();
	УстановитьЗаголовокФормы();
	Если Не ОбщегоНазначения.ЭтоМобильныйКлиент() И ЭтоПечатьКомплекта() Тогда
		Элементы.Копий.Заголовок = НСтр("ru = 'Копий комплекта'");
	КонецЕсли;
	
	ДополнительнаяИнформация = Новый Структура("Картинка, Текст", Новый Картинка, "");
	МассивСсылок = Параметры.ПараметрКоманды;
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(МассивСсылок) Тогда
		МассивСсылок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(МассивСсылок);
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие
	Если ТипЗнч(МассивСсылок) = Тип("Массив")
		И МассивСсылок.Количество() > 0
		И ОбщегоНазначения.ЗначениеСсылочногоТипа(МассивСсылок[0]) Тогда
			Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие") Тогда 
				МодульЭлектронноеВзаимодействие = ОбщегоНазначения.ОбщийМодуль("ЭлектронноеВзаимодействие");
				МодульЭлектронноеВзаимодействие.ПриВыводеНавигационнойСсылкиВФормеОбъектаИБ(ДополнительнаяИнформация, МассивСсылок);
			КонецЕсли;
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие
	
	Элементы.ДополнительнаяИнформация.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(ДополнительнаяИнформация.Текст);
	Элементы.КартинкаИнформации.Картинка = ДополнительнаяИнформация.Картинка;
	Элементы.ГруппаДополнительнаяИнформация.Видимость = Не ПустаяСтрока(Элементы.ДополнительнаяИнформация.Заголовок);
	Элементы.КартинкаИнформации.Видимость = Элементы.КартинкаИнформации.Картинка.Вид <> ВидКартинки.Пустая;
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Элементы.КоманднаяПанельЛеваяЧасть.Видимость = Ложь;
		Элементы.КоманднаяПанельПраваяЧасть.Видимость = Ложь;
		Элементы.НастройкиПечатныхФорм.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		Элементы.КнопкаОтправитьВсеДействия.КнопкаПоУмолчанию = Истина;
		Элементы.Справка.ТолькоВоВсехДействиях= Истина;
		Элементы.КнопкаИзменитьМакет.Видимость = Ложь;
		Элементы.ФлажокПодписьИПечать.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		Элементы.НастройкаКоличестваКопий.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.Переместить(Элементы.КомандыПоказателей, Элементы.КомандыПоказателей.Родитель, Элементы.Показатель);
	КонецЕсли;
	
	Если УправлениеПечатью.НастройкиПечати().СкрыватьПодписиИПечатиДляРедактирования Тогда
		АдресХранилищаРисунков = ПоместитьВоВременноеХранилище(ПодписиИПечатиТабличныхДокументов(), УникальныйИдентификатор);
	КонецЕсли;
	УбратьПодписьИПечать();
	
	ИнтеграцияПодсистемБСП.ПечатьДокументовПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	УправлениеПечатьюПереопределяемый.ПечатьДокументовПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ИнтеграцияПодсистемБСП.ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	УправлениеПечатьюПереопределяемый.ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ИнтеграцияПодсистемБСП.ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	УправлениеПечатьюПереопределяемый.ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
		УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	Иначе
		УникальныйИдентификаторХранилища = ВладелецФормы.УникальныйИдентификатор;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкиФорматаСохранения) Тогда
		Отказ = Истина; // отказ от открытия формы
		СохранитьПечатнуюФормуВФайл();
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПослеОткрытия", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытия()
	
	Если Элементы.ФлажокПодписьИПечать.Видимость Тогда
		ДобавитьУдалитьПодписьПечать();
	КонецЕсли;
	УстановитьТекущуюСтраницу();
	
	ОбщегоНазначенияСлужебныйКлиент.УстановитьВидимостьПанелиПоказателей(Элементы, РазвернутьОбластьПоказателей);
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", ОсновнойПоказатель);
	
	ИнтеграцияПодсистемБСПКлиент.ПечатьДокументовПослеОткрытия(ЭтотОбъект);
	УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовПослеОткрытия(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.СохранениеПечатнойФормы") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранноеЗначение);
			Если ВыбранноеЗначение.ВариантСохранения = "СохранитьВПапку" Тогда
				СохранитьПечатныеФормыВПапку(ФайлыВоВременномХранилище, ВыбранноеЗначение.ПапкаДляСохранения);
			Иначе
				ЗаписанныеОбъекты = ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ВыбранноеЗначение.ОбъектДляПрикрепления);
				Если ЗаписанныеОбъекты.Количество() > 0 Тогда
					ОповеститьОбИзменении(ТипЗнч(ЗаписанныеОбъекты[0]));
				КонецЕсли;
				Для Каждого ЗаписанныйОбъект Из ЗаписанныеОбъекты Цикл
					Оповестить("Запись_Файл", Новый Структура, ЗаписанныйОбъект);
				КонецЦикла;
				ПоказатьОповещениеПользователя(, , НСтр("ru = 'Сохранение завершено'"), БиблиотекаКартинок.Информация32);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборФорматаВложений")
		Или ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ПодготовкаНовогоПисьма") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			ПараметрыОтправки = ПараметрыОтправкиПисьма(ВыбранноеЗначение);
			
			МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
			МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	
	Если ИмяСобытия = "Запись_ПользовательскиеМакетыПечати" 
		И Источник.ВладелецФормы = ЭтотОбъект
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету Тогда
			ПодключитьОбработчикОжидания("ОбновитьТекущуюПечатнуюФорму",0.1,Истина);
	ИначеЕсли (ИмяСобытия = "ОтказОтИзмененияМакета"
		Или ИмяСобытия = "ОтменаРедактированияТабличногоДокумента"
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету)
		И Источник.ВладелецФормы = ЭтотОбъект Тогда
			ОтобразитьСостояниеТекущейПечатнойФормы();
	ИначеЕсли ИмяСобытия = "Запись_ТабличныйДокумент" 
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету 
		И Источник.ВладелецФормы = ЭтотОбъект Тогда
			Макет = Параметр.ТабличныйДокумент;
			АдресМакетаВоВременномХранилище = ПоместитьВоВременноеХранилище(Макет);
			ЗаписатьМакет(Параметр.ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
			ПодключитьОбработчикОжидания("ОбновитьТекущуюПечатнуюФорму",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КопийПриИзменении(Элемент)
	Если НастройкиПечатныхФорм.Количество() = 1 Тогда
		НастройкиПечатныхФорм[0].Количество = Копий;
		НачатьСохранениеНастроек();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МассивСсылок = Параметры.ПараметрКоманды;
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") Тогда
		МассивСсылок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(МассивСсылок);
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЭлектронноеВзаимодействие") Тогда 
		МодульЭлектронноеВзаимодействиеКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектронноеВзаимодействиеКлиент");
		МодульЭлектронноеВзаимодействиеКлиент.ОбработкаНавигационнойСсылкиВФормеПечатиБСП(НавигационнаяСсылкаФорматированнойСтроки, МассивСсылок);
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяПечатнаяФормаПриАктивизации(Элемент)
	ПодключитьОбработчикОжидания("РассчитатьПоказателиДинамически", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ФлажокПодписьИПечатьПриИзменении(Элемент)
	ДобавитьУдалитьПодписьПечать();
	УстановитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ИнтеграцияПодсистемБСПКлиент.ПечатьДокументовОбработкаНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовОбработкаНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиПечатныхФорм

&НаКлиенте
Процедура НастройкиПечатныхФормПриИзменении(Элемент)
	МожноПечатать = Ложь;
	МожноСохранять = Ложь;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		
		МожноПечатать = МожноПечатать Или НастройкаПечатнойФормы.Печатать И ПечатнаяФорма.ВысотаТаблицы > 0
			И ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Разрешить;
		
		МожноСохранять = МожноСохранять Или НастройкаПечатнойФормы.Печатать И ПечатнаяФорма.ВысотаТаблицы > 0
			И ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Разрешить И Не ПолеТабличногоДокумента.Защита;
	КонецЦикла;
	
	Элементы.КнопкаПечатьКоманднаяПанель.Доступность = МожноПечатать;
	Элементы.КнопкаПечатьВсеДействия.Доступность = МожноПечатать;
	
	Элементы.КнопкаСохранить.Доступность = МожноСохранять;
	Элементы.КнопкаСохранитьВсеДействия.Доступность = МожноСохранять;
	
	Элементы.КнопкаОтправить.Доступность = МожноСохранять;
	Элементы.КнопкаОтправитьВсеДействия.Доступность = МожноСохранять;
	
	НачатьСохранениеНастроек();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПриАктивизацииСтроки(Элемент)
	ОтключитьОбработчикОжидания("УстановитьТекущуюСтраницу");
	ПодключитьОбработчикОжидания("УстановитьТекущуюСтраницу", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормКоличествоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	НастройкаПечатнойФормы.Печатать = НастройкаПечатнойФормы.Количество + Направление > 0;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПечататьПриИзменении(Элемент)
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	Если НастройкаПечатнойФормы.Печатать И НастройкаПечатнойФормы.Количество = 0 Тогда
		НастройкаПечатнойФормы.Количество = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОбъектыПечати);
	ОткрытьФорму("ОбщаяФорма.СохранениеПечатнойФормы", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьПечатныеФормыПоПочте();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДокументу(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		СписокВыбора.Добавить(ОбъектПечати.Представление, Строка(ОбъектПечати.Значение));
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПерейтиКДокументуЗавершение", ЭтотОбъект);
	СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru = 'Перейти к печатной форме'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУправлениюМакетами(Команда)
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.МакетыПечатныхФорм");
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабличныеДокументы = ТабличныеДокументыДляПечати();
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
		ТабличныеДокументы.Количество() > 1, ?(НастройкиПечатныхФорм.Количество() > 1, Копий, 1));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьНастройкуКоличестваКопий(Команда)
	УстановитьВидимостьНастройкиКоличестваКопий();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройки(Команда)
	ВосстановитьНастройкиПечатныхФорм();
	НачатьСохранениеНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьМакет(Команда)
	ОткрытьМакетДляРедактирования();
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРедактирование(Команда)
	ПереключитьРедактированиеТекущейПечатнойФормы();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьКоличество(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСреднее(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьМинимум(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьМаксимум(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьВсеПоказатели(Команда)
	ОбщегоНазначенияСлужебныйКлиент.УстановитьВидимостьПанелиПоказателей(
		Элементы, Не Элементы.РассчитатьВсеПоказатели.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьПоказатели(Команда)
	ОбщегоНазначенияСлужебныйКлиент.УстановитьВидимостьПанелиПоказателей(Элементы);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПродолжитьВыполнениеНаСервере = Ложь;
	ДополнительныеПараметры = Неопределено;
	
	ИнтеграцияПодсистемБСПКлиент.ПечатьДокументовВыполнитьКоманду(
		ЭтотОбъект, Команда, ПродолжитьВыполнениеНаСервере, ДополнительныеПараметры);
		
	УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду(
		ЭтотОбъект, Команда, ПродолжитьВыполнениеНаСервере, ДополнительныеПараметры);
	
	Если ПродолжитьВыполнениеНаСервере Тогда
		ПриВыполненииКомандыНаСервере(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиПечатныхФорм.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиПечатныхФорм.Печатать");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры


// Возвращаемое значение:
// 	См. УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм 
&НаСервере
Функция СформироватьПечатныеФормы(ИменаМакетов, Отказ)
	
	Результат = Неопределено;
	// Формирование табличных документов.
	Если ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
		УправлениеПечатью.ПечатьПоВнешнемуИсточнику(
			Параметры.ИсточникДанных,
			Параметры.ПараметрыИсточника,
			Результат,
			ОбъектыПечати,
			ПараметрыВывода);
	Иначе
		ТипыОбъектовПечати = Новый Массив;
		Параметры.ПараметрыПечати.Свойство("ТипыОбъектовПечати", ТипыОбъектовПечати);
		
		ДополнительныеПараметры = Неопределено;
		Параметры.ПараметрыПечати.Свойство("ДополнительныеПараметры", ДополнительныеПараметры);
		
		ПечатныеФормы = УправлениеПечатью.СформироватьПечатныеФормы(Параметры.ИмяМенеджераПечати, ИменаМакетов,
			Параметры.ПараметрКоманды, ДополнительныеПараметры, ТипыОбъектовПечати);
		ОбъектыПечати = ПечатныеФормы.ОбъектыПечати;
		ПараметрыВывода = ПечатныеФормы.ПараметрыВывода;
		Результат = ПечатныеФормы.КоллекцияПечатныхФорм;
	КонецЕсли;
	
	// Установка признака сохранения печатной формы в файл (не открывать форму, сразу сохранять в файл).
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФорматСохранения")
		И ЗначениеЗаполнено(Параметры.ПараметрыПечати.ФорматСохранения) Тогда
		НайденныйФормат = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента().Найти(ТипФайлаТабличногоДокумента[Параметры.ПараметрыПечати.ФорматСохранения], "ТипФайлаТабличногоДокумента");
		Если НайденныйФормат <> Неопределено Тогда
			НастройкиФорматаСохранения = Новый Структура("ТипФайлаТабличногоДокумента,Представление,Расширение,Фильтр");
			ЗаполнитьЗначенияСвойств(НастройкиФорматаСохранения, НайденныйФормат);
			НастройкиФорматаСохранения.Фильтр = НастройкиФорматаСохранения.Представление + "|*." + НастройкиФорматаСохранения.Расширение;
			НастройкиФорматаСохранения.ТипФайлаТабличногоДокумента = Параметры.ПараметрыПечати.ФорматСохранения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройкиКоличестваКопий()
	
	СохраненныеНастройкиПечатныхФорм = Новый Массив;
	
	ИспользоватьСохраненныеНастройки = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ПереопределитьПользовательскиеНастройкиКоличества") Тогда
		ИспользоватьСохраненныеНастройки = Не Параметры.ПараметрыПечати.ПереопределитьПользовательскиеНастройкиКоличества;
	КонецЕсли;
	
	Если ИспользоватьСохраненныеНастройки Тогда
		Если ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
			КлючНастроек = Строка(Параметры.ИсточникДанных.УникальныйИдентификатор()) + "-" + Параметры.ПараметрыИсточника.ИдентификаторКоманды;
		Иначе
			ИменаМакетов = Параметры.ИменаМакетов;
			Если ТипЗнч(ИменаМакетов) = Тип("Массив") Тогда
				ИменаМакетов = СтрСоединить(ИменаМакетов, ",");
			КонецЕсли;
			
			КлючНастроек = Параметры.ИмяМенеджераПечати + "-" + ИменаМакетов;
		КонецЕсли;
		СохраненныеНастройкиПечатныхФорм = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПечатныхФорм", КлючНастроек, Новый Массив);
	КонецЕсли;

	
	ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм);
	
	Если ЭтоПечатьКомплекта() Тогда
		Копий = 1;
	Иначе
		Если НастройкиПечатныхФорм.Количество() > 0 Тогда
			Копий = НастройкиПечатныхФорм[0].Количество;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм)
	
	// Создание реквизитов для табличных документов.
	НовыеРеквизитыФормы = Новый Массив; // Массив из РеквизитФормы -
	Для НомерПечатнойФормы = 1 По КоллекцияПечатныхФорм.Количество() Цикл
		ИмяРеквизита = "ПечатнаяФорма" + Формат(НомерПечатнойФормы,"ЧГ=0");
		РеквизитФормы = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТабличныйДокумент"),,КоллекцияПечатныхФорм[НомерПечатнойФормы - 1].СинонимМакета);
		НовыеРеквизитыФормы.Добавить(РеквизитФормы);
	КонецЦикла;
	ИзменитьРеквизиты(НовыеРеквизитыФормы);
	
	// Создание страниц с табличными документами на форме.
	НомерПечатнойФормы = 0;
	ПечатьОфисныхДокументов = Ложь;
	ДобавленныеНастройкиПечатныхФорм = Новый Соответствие;
	Для Каждого РеквизитФормы Из НовыеРеквизитыФормы Цикл
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм[НомерПечатнойФормы];
		
		// Таблица настроек печатных форм (начало).
		НоваяНастройкаПечатнойФормы = НастройкиПечатныхФорм.Добавить();
		НоваяНастройкаПечатнойФормы.Представление = ОписаниеПечатнойФормы.СинонимМакета;
		НоваяНастройкаПечатнойФормы.Печатать = ОписаниеПечатнойФормы.Экземпляров > 0;
		НоваяНастройкаПечатнойФормы.Количество = ОписаниеПечатнойФормы.Экземпляров;
		НоваяНастройкаПечатнойФормы.ИмяМакета = ОписаниеПечатнойФормы.ИмяМакета;
		НоваяНастройкаПечатнойФормы.ПозицияПоУмолчанию = НомерПечатнойФормы;
		НоваяНастройкаПечатнойФормы.Название = ОписаниеПечатнойФормы.СинонимМакета;
		НоваяНастройкаПечатнойФормы.ПутьКМакету = ОписаниеПечатнойФормы.ПолныйПутьКМакету;
		НоваяНастройкаПечатнойФормы.ИмяФайлаПечатнойФормы = ОбщегоНазначения.ЗначениеВСтрокуXML(ОписаниеПечатнойФормы.ИмяФайлаПечатнойФормы);
		НоваяНастройкаПечатнойФормы.ОфисныеДокументы = ?(ПустаяСтрока(ОписаниеПечатнойФормы.ОфисныеДокументы), "", ОбщегоНазначения.ЗначениеВСтрокуXML(ОписаниеПечатнойФормы.ОфисныеДокументы));
		НоваяНастройкаПечатнойФормы.ПодписьИПечать = ЕстьПодписьИПечать(ОписаниеПечатнойФормы.ТабличныйДокумент);
		
		ПечатьОфисныхДокументов = ПечатьОфисныхДокументов ИЛИ НЕ ПустаяСтрока(НоваяНастройкаПечатнойФормы.ОфисныеДокументы);
		
		РанееДобавленнаяНастройкаПечатнойФормы = ДобавленныеНастройкиПечатныхФорм[ОписаниеПечатнойФормы.ИмяМакета];
		Если РанееДобавленнаяНастройкаПечатнойФормы = Неопределено Тогда
			// Копирование табличного документа в реквизит формы.
			ИмяРеквизита = РеквизитФормы.Имя;
			ЭтотОбъект[ИмяРеквизита] = ОписаниеПечатнойФормы.ТабличныйДокумент;
			
			// Создание страниц для табличных документов.
			ИмяСтраницы = "Страница" + ИмяРеквизита;
			Страница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.Страницы);
			Страница.Вид = ВидГруппыФормы.Страница;
			Страница.Картинка = БиблиотекаКартинок.ТабличныйДокументВставитьРазрывСтраницы;
			Страница.Заголовок = ОписаниеПечатнойФормы.СинонимМакета;
			Страница.Подсказка = ОписаниеПечатнойФормы.СинонимМакета;
			Страница.Видимость = ЭтотОбъект[ИмяРеквизита].ВысотаТаблицы > 0;
			
			// Создание элементов под табличные документы.
			НовыйЭлемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЭлемент.ПутьКДанным = ИмяРеквизита;
			НовыйЭлемент.Вывод = ВычислитьИспользованиеВывода(ОписаниеПечатнойФормы.ТабличныйДокумент);
			НовыйЭлемент.Редактирование = НовыйЭлемент.Вывод = ИспользованиеВывода.Разрешить И Не ОписаниеПечатнойФормы.ТабличныйДокумент.ТолькоПросмотр;
			НовыйЭлемент.Защита = ОписаниеПечатнойФормы.ТабличныйДокумент.Защита Или Не Пользователи.РолиДоступны("РедактированиеПечатныхФорм");
			
			// Таблица настроек печатных форм (продолжение).
			НоваяНастройкаПечатнойФормы.ИмяСтраницы = ИмяСтраницы;
			НоваяНастройкаПечатнойФормы.ИмяРеквизита = ИмяРеквизита;
			
			ДобавленныеНастройкиПечатныхФорм.Вставить(НоваяНастройкаПечатнойФормы.ИмяМакета, НоваяНастройкаПечатнойФормы);
		Иначе
			НоваяНастройкаПечатнойФормы.ИмяСтраницы = РанееДобавленнаяНастройкаПечатнойФормы.ИмяСтраницы;
			НоваяНастройкаПечатнойФормы.ИмяРеквизита = РанееДобавленнаяНастройкаПечатнойФормы.ИмяРеквизита;
		КонецЕсли;
		
		НомерПечатнойФормы = НомерПечатнойФормы + 1;
	КонецЦикла;
	
	Если ПечатьОфисныхДокументов И НЕ ЗначениеЗаполнено(НастройкиФорматаСохранения) Тогда
		НастройкиФорматаСохранения = Новый Структура("ТипФайлаТабличногоДокумента,Представление,Расширение,Фильтр")
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиКомплектаПоУмолчанию()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ЗаполнитьЗначенияСвойств(НастройкиКомплектаПоУмолчанию.Добавить(), НастройкаПечатнойФормы);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы(Знач ЕстьРазрешенныйВывод)
	
	ЕстьРазрешенноеРедактирование = ЕстьРазрешенноеРедактирование();
	
	ДоступнаОтправкаПисем = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		ДоступнаОтправкаПисем = МодульРаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем();
	КонецЕсли;
	ВозможнаОтправкаПоПочте = ЕстьРазрешенныйВывод И ДоступнаОтправкаПисем;
	
	ЕстьДанныеДляПечати = ЕстьДанныеДляПечати();
	
	Элементы.КнопкаПерейтиКДокументу.Видимость = ОбъектыПечати.Количество() > 1;
	
	Элементы.КнопкаСохранить.Видимость = ЕстьДанныеДляПечати И ЕстьРазрешенныйВывод И ЕстьРазрешенноеРедактирование;
	Элементы.КнопкаСохранитьВсеДействия.Видимость = Элементы.КнопкаСохранить.Видимость;
	
	Элементы.КнопкаОтправить.Видимость = ВозможнаОтправкаПоПочте И ЕстьДанныеДляПечати И ЕстьРазрешенноеРедактирование;
	Элементы.КнопкаОтправитьВсеДействия.Видимость = Элементы.КнопкаОтправить.Видимость;
	
	Элементы.КнопкаПечатьКоманднаяПанель.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати;
	Элементы.КнопкаПечатьВсеДействия.Видимость = Элементы.КнопкаПечатьКоманднаяПанель.Видимость;
	
	Элементы.Копий.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати;
	Элементы.КнопкаРедактирование.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати И ЕстьРазрешенноеРедактирование;
	
	Если Элементы.Найти("КнопкаПредварительныйПросмотр") <> Неопределено Тогда
		Элементы.КнопкаПредварительныйПросмотр.Видимость = ЕстьРазрешенныйВывод;
	КонецЕсли;
	Если Элементы.Найти("КнопкаПредварительныйПросмотрВсеДействия") <> Неопределено Тогда
		Элементы.КнопкаПредварительныйПросмотрВсеДействия.Видимость = ЕстьРазрешенныйВывод;
	КонецЕсли;
	Если Элементы.Найти("КнопкаПараметрыСтраницыВсеДействия") <> Неопределено Тогда
		Элементы.КнопкаПараметрыСтраницыВсеДействия.Видимость = ЕстьРазрешенныйВывод;
	КонецЕсли;
	
	Если Не ЕстьДанныеДляПечати Тогда
		Элементы.ТекущаяПечатнаяФорма.УстановитьДействие("ПриАктивизацииОбласти", "");
	КонецЕсли;
	
	Элементы.КнопкаПоказатьСкрытьНастройкуКомплекта.Видимость = ЭтоПечатьКомплекта();
	Элементы.НастройкиПечатныхФорм.Видимость = ЭтоПечатьКомплекта();
	
	ДоступнаНастройкаКомплекта = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФиксированныйКомплект") Тогда
		ДоступнаНастройкаКомплекта = Не Параметры.ПараметрыПечати.ФиксированныйКомплект;
	КонецЕсли;
	
	Элементы.ГруппаНастройкаКомплектаКонтекстноеМеню.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.ГруппаНастройкаКомплектаКоманднаяПанель.Видимость = ЭтоПечатьКомплекта() И ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормПечатать.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормКоличество.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФорм.Шапка = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФорм.ГоризонтальныеЛинии = ДоступнаНастройкаКомплекта;
	
	Если Не ДоступнаНастройкаКомплекта Тогда
		ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм();
	КонецЕсли;
	
	ДоступноИзменениеМакетов = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПользовательскиеМакетыПечати) И ЕстьРедактируемыеМакеты();
	Элементы.КнопкаИзменитьМакет.Видимость = ДоступноИзменениеМакетов И ЕстьДанныеДляПечати;
	
	Элементы.ФлажокПодписьИПечать.Видимость = ЕстьПечатныеФормыСПодписьюИПечатью() И ЕстьПодписиИПечатиДляОбъектовПечати();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если НастройкаПечатнойФормы.Количество <> 1 Тогда
			НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление 
				+ " (" + НастройкаПечатнойФормы.Количество + " " + НСтр("ru = 'экз.'") + ")";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод)
	Если ЕстьРазрешенныйВывод Тогда
		Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
			ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
			Если ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Запретить Тогда
				НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НСтр("ru = 'вывод не доступен'") + ")";
			ИначеЕсли ПолеТабличногоДокумента.Защита Тогда
				НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НСтр("ru = 'только печать'") + ")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастройкиКоличестваКопий(Знач Видимость = Неопределено)
	Если Видимость = Неопределено Тогда
		Видимость = Не Элементы.НастройкиПечатныхФорм.Видимость;
	КонецЕсли;
	
	Элементы.НастройкиПечатныхФорм.Видимость = Видимость;
	Элементы.ГруппаНастройкаКомплектаКоманднаяПанель.Видимость = Видимость И ДоступнаНастройкаКомплекта;
КонецПроцедуры

&НаСервере
Процедура УстановитьИмяПринтераВПодсказкеКнопкиПечать()
	Если НастройкиПечатныхФорм.Количество() > 0 Тогда
		ИмяПринтера = ЭтотОбъект[НастройкиПечатныхФорм[0].ИмяРеквизита].ИмяПринтера;
		Если Не ПустаяСтрока(ИмяПринтера) Тогда
			ЭтотОбъект.Команды["Печать"].Подсказка = НСтр("ru = 'Напечатать на принтере'") + " (" + ИмяПринтера + ")";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	Перем ЗаголовокФормы;
	
	ПараметрыВывода.Свойство("ЗаголовокФормы", ЗаголовокФормы);
	
	Если Не ЗначениеЗаполнено(ЗаголовокФормы) И ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") Тогда
		Параметры.ПараметрыПечати.Свойство("ЗаголовокФормы", ЗаголовокФормы);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗаголовокФормы) Тогда
		Если ЭтоПечатьКомплекта() Тогда
			ЗаголовокФормы = НСтр("ru = 'Печать комплекта'");
		ИначеЕсли ОбъектыПечати.Количество() > 1 Тогда
			ЗаголовокФормы = НСтр("ru = 'Печать документов'");
		ИначеЕсли ОбъектыПечати.Количество() = 1 И ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ОбъектыПечати[0].Значение))
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектыПечати[0].Значение, "Ссылка", Истина) <> Неопределено Тогда
			ЗаголовокФормы = Строка(ОбъектыПечати[0].Значение);
		Иначе
			ЗаголовокФормы = НСтр("ru = 'Печать документа'");
		КонецЕсли;
	КонецЕсли;
	
	Заголовок = ЗаголовокФормы;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтраницу()
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	
	ТекущаяСтраница = Элементы.СтраницаПечатнаяФормаНедоступна;
	ПечатнаяФормаДоступна = НастройкаПечатнойФормы <> Неопределено И ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0;
	Если ПечатнаяФормаДоступна Тогда
		УстановитьТекущийТабличныйДокумент(НастройкаПечатнойФормы.ИмяРеквизита);
		ЗаполнитьЗначенияСвойств(Элементы.ТекущаяПечатнаяФорма, Элементы[НастройкаПечатнойФормы.ИмяРеквизита], 
			"Вывод, Защита, Редактирование");
			
		ТекущаяСтраница = Элементы.СтраницаТекущаяПечатнаяФорма;
	КонецЕсли;
	Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
	
	ПереключитьПометкуКнопкиРедактирование();
	УстановитьДоступностьИзмененияМакета();
	УстановитьДоступностьКомандВывода();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийТабличныйДокумент(ИмяРеквизита)
	ТекущаяПечатнаяФорма = ЭтотОбъект[ИмяРеквизита];
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		НастройкаПечатнойФормы.Печатать = Пометка;
		Если Пометка И НастройкаПечатнойФормы.Количество = 0 Тогда
			НастройкаПечатнойФормы.Количество = 1;
		КонецЕсли;
	КонецЦикла;
	НачатьСохранениеНастроек();
КонецПроцедуры

&НаСервере
Функция ВычислитьИспользованиеВывода(ТабличныйДокумент)
	Если ТабличныйДокумент.Вывод = ИспользованиеВывода.Авто Тогда
		Возврат ?(ПравоДоступа("Вывод", Метаданные), ИспользованиеВывода.Разрешить, ИспользованиеВывода.Запретить);
	Иначе
		Возврат ТабличныйДокумент.Вывод;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиПечатныхФорм", КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм = Неопределено)
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		СохраненныеНастройкиПечатныхФорм = НастройкиКомплектаПоУмолчанию;
	КонецЕсли;
	
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СохраненнаяНастройка Из СохраненныеНастройкиПечатныхФорм Цикл
		НайденныеНастройки = НастройкиПечатныхФорм.НайтиСтроки(Новый Структура("ПозицияПоУмолчанию", СохраненнаяНастройка.ПозицияПоУмолчанию));
		Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
			ИндексСтроки = НастройкиПечатныхФорм.Индекс(НастройкаПечатнойФормы);
			НастройкиПечатныхФорм.Сдвинуть(ИндексСтроки, НастройкиПечатныхФорм.Количество()-1 - ИндексСтроки); // сдвиг в конец
			НастройкаПечатнойФормы.Количество = СохраненнаяНастройка.Количество;
			НастройкаПечатнойФормы.Печатать = НастройкаПечатнойФормы.Количество > 0;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище(ПереданныеНастройки)
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	НастройкиСохранения = НастройкиСохранения();
	ЗаполнитьЗначенияСвойств(НастройкиСохранения, ПереданныеНастройки);
	
	Результат = Новый Массив;
	
	// подготовка архива
	Если НастройкиСохранения.УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	
	ВыбранныеФорматыСохранения = НастройкиСохранения.ФорматыСохранения;
	ПереводитьИменаФайловВТранслит = НастройкиСохранения.ПереводитьИменаФайловВТранслит;
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	ОбработанныеПечатныеФормы = Новый Массив;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если НЕ ПустаяСтрока(НастройкаПечатнойФормы.ОфисныеДокументы) Тогда
			
			ФайлыОфисныхДокументов = ОбщегоНазначения.ЗначениеИзСтрокиXML(НастройкаПечатнойФормы.ОфисныеДокументы);
			
			Для Каждого ФайлОфисногоДокумента Из ФайлыОфисныхДокументов Цикл
				ИмяФайла = УправлениеПечатью.ИмяФайлаОфисногоДокумента(ФайлОфисногоДокумента.Значение);
				Если ЗаписьZipФайла <> Неопределено Тогда 
					ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) 
						+ ИмяФайла);
					ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлОфисногоДокумента.Ключ); // ДвоичныеДанные - 
					ДвоичныеДанные.Записать(ПолноеИмяФайла);
					ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
				Иначе
					ОписаниеФайла = Новый Структура;
					ОписаниеФайла.Вставить("Представление", ИмяФайла);
					ОписаниеФайла.Вставить("АдресВоВременномХранилище", ФайлОфисногоДокумента.Ключ);
					ОписаниеФайла.Вставить("ЭтоОфисныйДокумент", Истина);
					Результат.Добавить(ОписаниеФайла);
				КонецЕсли;
				
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		Если ОбработанныеПечатныеФормы.Найти(ПечатнаяФорма) = Неопределено Тогда
			ОбработанныеПечатныеФормы.Добавить(ПечатнаяФорма);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ВычислитьИспользованиеВывода(ПечатнаяФорма) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.Защита Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.ВысотаТаблицы = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатныеФормыПоОбъектам = УправлениеПечатью.ПечатныеФормыПоОбъектам(ПечатнаяФорма, ОбъектыПечати);
		Для Каждого СоответствиеОбъектаПечатнойФорме Из ПечатныеФормыПоОбъектам Цикл
			ОбъектПечати = СоответствиеОбъектаПечатнойФорме.Ключ;
			ПечатнаяФорма = СоответствиеОбъектаПечатнойФорме.Значение;
			
			Для Каждого ВыбранныйФормат Из ВыбранныеФорматыСохранения Цикл
				ТипФайла = ТипФайлаТабличногоДокумента[ВыбранныйФормат];
				НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
				ЗаданныеИменаПечатныхФорм = ОбщегоНазначения.ЗначениеИзСтрокиXML(НастройкаПечатнойФормы.ИмяФайлаПечатнойФормы);
				
				ИмяФайла = УправлениеПечатью.ИмяФайлаПечатнойФормыОбъекта(ОбъектПечати, ЗаданныеИменаПечатныхФорм, НастройкаПечатнойФормы.Название);
				ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла);
				
				Если ПереводитьИменаФайловВТранслит Тогда
					ИмяФайла = СтроковыеФункции.СтрокаЛатиницей(ИмяФайла);
				КонецЕсли;
				
				ИмяФайла = ИмяФайла + "." + НастройкиФормата.Расширение;
				
				ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
				ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайла);
				
				Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
					УправлениеПечатью.ВставитьКартинкиВHTML(ПолноеИмяФайла);
				КонецЕсли;
				
				Если ЗаписьZipФайла <> Неопределено Тогда 
					ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
				Иначе
					ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
					ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
					ОписаниеФайла = Новый Структура;
					ОписаниеФайла.Вставить("Представление", ИмяФайла);
					ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
					Если ТипФайла = ТипФайлаТабличногоДокумента.ANSITXT Тогда
						ОписаниеФайла.Вставить("Кодировка", "windows-1251");
					КонецЕсли;
					Результат.Добавить(ОписаниеФайла);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// Если архив подготовлен, записываем и помещаем его во временное хранилище.
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление", ПолучитьИмяФайлаДляАрхива(ПереводитьИменаФайловВТранслит));
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		Результат.Добавить(ОписаниеФайла);
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	Если ЗначениеЗаполнено(ИмяАрхива) Тогда
		УдалитьФайлы(ИмяАрхива);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФайлаДляАрхива(ПереводитьИменаФайловВТранслит)
	
	Результат = "";
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		
		Если ВычислитьИспользованиеВывода(ПечатнаяФорма) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			Результат = НастройкаПечатнойФормы.Название;
		Иначе
			Результат = НСтр("ru = 'Документы'");
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПереводитьИменаФайловВТранслит Тогда
		Результат = СтроковыеФункции.СтрокаЛатиницей(Результат);
	КонецЕсли;
	
	Возврат Результат + ".zip";
	
КонецФункции

&НаКлиенте
Процедура СохранитьПечатнуюФормуВФайл()
	
	НастройкиСохранения = Новый Структура("ФорматыСохранения", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		НастройкиФорматаСохранения.ТипФайлаТабличногоДокумента));
	
	ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
	
	Для Каждого ФайлДляЗаписи Из ФайлыВоВременномХранилище Цикл
		ФайловаяСистемаКлиент.ОткрытьФайл(ФайлДляЗаписи.АдресВоВременномХранилище, , ФайлДляЗаписи.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПечатныеФормыВПапку(СписокФайловВоВременномХранилище, Знач Папка = "")
	
	#Если ВебКлиент Тогда
		Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
			ПолучитьФайл(ФайлДляЗаписи.АдресВоВременномХранилище, ФайлДляЗаписи.Представление);
		КонецЦикла;
		Возврат;
	#КонецЕсли
	
	Папка = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Папка);
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.АдресВоВременномХранилище); // ДвоичныеДанные - 
		ДвоичныеДанные.Записать(УникальноеИмяФайла(Папка + ФайлДляЗаписи.Представление));
	КонецЦикла;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Сохранение успешно завершено'"), "file:///" + Папка, НСтр("ru = 'в папку:'") + " " + Папка, БиблиотекаКартинок.Информация32);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УникальноеИмяФайла(ИмяФайла)
	
	Файл = Новый Файл(ИмяФайла);
	ИмяБезРасширения = Файл.ИмяБезРасширения;
	Расширение = Файл.Расширение;
	Папка = Файл.Путь;
	
	Счетчик = 1;
	Пока Файл.Существует() Цикл
		Счетчик = Счетчик + 1;
		Файл = Новый Файл(Папка + ИмяБезРасширения + " (" + Счетчик + ")" + Расширение);
	КонецЦикла;
	
	Возврат Файл.ПолноеИмя;

КонецФункции

&НаСервере
Функция ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ОбъектДляПрисоединения)
	Результат = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Каждого Файл Из ФайлыВоВременномХранилище Цикл
			ПараметрыФайла = МодульРаботаСФайлами.ПараметрыДобавленияФайла();
			ПараметрыФайла.ВладелецФайлов = ОбъектДляПрисоединения;
			ПараметрыФайла.ИмяБезРасширения = Файл.Представление;
			Результат.Добавить(МодульРаботаСФайлами.ДобавитьФайл(
				ПараметрыФайла, Файл.АдресВоВременномХранилище, , НСтр("ru = 'Печатная форма'")));
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЭтоПечатьКомплекта()
	Возврат НастройкиПечатныхФорм.Количество() > 1;
КонецФункции

&НаСервере
Функция ЕстьРазрешенныйВывод()
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЕстьРазрешенноеРедактирование()
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Защита = Ложь Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ПолучателейБольшеОдного(Получатель)
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		Возврат Получатель.Количество() > 1;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ЕстьДанныеДляПечати()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЕстьРедактируемыеМакеты()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или Не ПустаяСтрока(НастройкаПечатнойФормы.ПутьКМакету);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЕстьПечатныеФормыСПодписьюИПечатью()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или НастройкаПечатнойФормы.ПодписьИПечать;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЕстьПодписиИПечатиДляОбъектовПечати()
	
	Результат = Ложь;
	
	ПодписиИПечатиОбъектов = УправлениеПечатью.ПодписиИПечатиОбъектов(ОбъектыПечати);
	Для Каждого ПодписиИПечатиОбъекта Из ПодписиИПечатиОбъектов Цикл
		КоллекцияПодписейИПечатей = ПодписиИПечатиОбъекта.Значение;
		Для Каждого ПодписьПечать Из КоллекцияПодписейИПечатей Цикл
			Картинка = ПодписьПечать.Значение;
			Если Картинка.Вид <> ВидКартинки.Пустая Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьМакетДляРедактирования()
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	
	ОтобразитьСостояниеТекущейПечатнойФормы(НСтр("ru = 'Макет редактируется'"));
	
	ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", ИмяОбъектаМетаданныхМакета);
	ПараметрыОткрытия.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыОткрытия.Вставить("ИмяДокумента", НастройкаПечатнойФормы.Представление);
	ПараметрыОткрытия.Вставить("ТипМакета", "MXL");
	ПараметрыОткрытия.Вставить("Редактирование", Истина);
	
	ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСостояниеТекущейПечатнойФормы(ТекстСостояния = "")
	
	ОтображатьСостояние = Не ПустаяСтрока(ТекстСостояния);
	
	ПолеТабличногоДокумента = Элементы.ТекущаяПечатнаяФорма;
	
	ОтображениеСостояния = ПолеТабличногоДокумента.ОтображениеСостояния;
	ОтображениеСостояния.Текст = ТекстСостояния;
	ОтображениеСостояния.Видимость = ОтображатьСостояние;
	ОтображениеСостояния.ДополнительныйРежимОтображения = 
		?(ОтображатьСостояние, ДополнительныйРежимОтображения.Неактуальность, ДополнительныйРежимОтображения.НеИспользовать);
		
	ПолеТабличногоДокумента.ТолькоПросмотр = ОтображатьСостояние Или ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Запретить;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРедактированиеТекущейПечатнойФормы()
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита]; // РасширениеПоляФормыДляПоляТабличногоДокумента - 
		ПолеТабличногоДокумента.Редактирование = Не ПолеТабличногоДокумента.Редактирование;
		Элементы.ТекущаяПечатнаяФорма.Редактирование = ПолеТабличногоДокумента.Редактирование;
		ПереключитьПометкуКнопкиРедактирование();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьПометкуКнопкиРедактирование()
	
	ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
	
	РедактированиеВозможно = Ложь;
	Пометка = Ложь;
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		РедактированиеВозможно = ПечатнаяФормаДоступна И Не ПолеТабличногоДокумента.Защита;
		Пометка = ПолеТабличногоДокумента.Редактирование И РедактированиеВозможно;
	КонецЕсли;
	
	Элементы.КнопкаРедактирование.Пометка = Пометка;
	Элементы.КнопкаРедактирование.Доступность = РедактированиеВозможно;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьИзмененияМакета()
	ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	Элементы.КнопкаИзменитьМакет.Доступность = ПечатнаяФормаДоступна И Не ПустаяСтрока(НастройкаПечатнойФормы.ПутьКМакету);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандВывода()
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
	ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
	
	МожноПечатать = ПечатнаяФормаДоступна И ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Разрешить;
	
	Если Элементы.Найти("КнопкаПредварительныйПросмотр") <> Неопределено Тогда
		Элементы.КнопкаПредварительныйПросмотр.Доступность = МожноПечатать;
	КонецЕсли;
	Если Элементы.Найти("КнопкаПредварительныйПросмотрВсеДействия") <> Неопределено Тогда
		Элементы.КнопкаПредварительныйПросмотрВсеДействия.Доступность = МожноПечатать;
	КонецЕсли;
	Если Элементы.Найти("КнопкаПараметрыСтраницыВсеДействия") <> Неопределено Тогда
		Элементы.КнопкаПараметрыСтраницыВсеДействия.Доступность = МожноПечатать;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущуюПечатнуюФорму()
	
	НастройкаПечатнойФормы = НастройкаТекущейПечатнойФормы();
	Если НастройкаПечатнойФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереформироватьПечатнуюФорму(НастройкаПечатнойФормы.ИмяМакета, НастройкаПечатнойФормы.ИмяРеквизита);
	ОтобразитьСостояниеТекущейПечатнойФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПереформироватьПечатнуюФорму(ИмяМакета, ИмяРеквизита)
	
	Отказ = Ложь;
	КоллекцияПечатныхФорм = СформироватьПечатныеФормы(ИмяМакета, Отказ);
	Если Отказ Тогда
		ВызватьИсключение НСтр("ru = 'Печатная форма не была переформирована.'");
	КонецЕсли;
	
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		Если ПечатнаяФорма.ИмяМакета = ИмяМакета Тогда
			ЭтотОбъект[ИмяРеквизита] = ПечатнаяФорма.ТабличныйДокумент;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьТекущийТабличныйДокумент(ИмяРеквизита);
	
КонецПроцедуры

&НаКлиенте
Функция НастройкаТекущейПечатнойФормы()
	Возврат УправлениеПечатьюКлиент.НастройкаТекущейПечатнойФормы(ЭтотОбъект);
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище)
	УправлениеПечатью.ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДокументуЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеТабличногоДокумента = Элементы.ТекущаяПечатнаяФорма;
	ТабличныйДокумент = ТекущаяПечатнаяФорма;
	ОбластьВыбранногоДокумента = ТабличныйДокумент.Области.Найти(ВыбранныйЭлемент.Значение);
	
	ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область("R1C1"); // переход к началу
	
	Если ОбластьВыбранногоДокумента <> Неопределено Тогда
		ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область(ОбластьВыбранногоДокумента.Верх,,ОбластьВыбранногоДокумента.Низ,);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПечатныеФормыПоПочте()
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьПечатныеФормыПоПочтеНастройкаУчетнойЗаписиПредложена", ЭтотОбъект);
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
		МодульРаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

// Параметры:
// 	ВыбранныеПараметры - см. УправлениеПечатью.НастройкиСохранения
//
&НаСервере
Функция ПараметрыОтправкиПисьма(ВыбранныеПараметры)
	
	СписокВложений = ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранныеПараметры);
	
	// Контроль уникальности имен.
	ШаблонИмениФайла = "%1%2.%3";
	ИспользованныеИменаФайлов = Новый Соответствие;
	Для Каждого Вложение Из СписокВложений Цикл
		ИмяФайла = Вложение.Представление;
		НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяФайла] <> Неопределено,
			ИспользованныеИменаФайлов[ИмяФайла] + 1, 1);
		ИспользованныеИменаФайлов.Вставить(ИмяФайла, НомерИспользования);
		Если НомерИспользования > 1 Тогда
			Файл = Новый Файл(ИмяФайла);
			ИмяФайла = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла,
				Файл.ИмяБезРасширения, " (" + НомерИспользования + ")", Файл.Расширение);
		КонецЕсли;
		Вложение.Представление = ИмяФайла;
	КонецЦикла;
	
	Получатели = ПараметрыВывода.ПараметрыОтправки.Получатель;
	Если ВыбранныеПараметры.Свойство("Получатели") Тогда
		Получатели = ВыбранныеПараметры.Получатели;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Получатель", Получатели);
	Результат.Вставить("Тема", ПараметрыВывода.ПараметрыОтправки.Тема);
	Результат.Вставить("Текст", ПараметрыВывода.ПараметрыОтправки.Текст);
	Результат.Вставить("Вложения", СписокВложений);
	Результат.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	ПечатныеФормы = Новый ТаблицаЗначений;
	ПечатныеФормы.Колонки.Добавить("Название");
	ПечатныеФормы.Колонки.Добавить("ТабличныйДокумент");
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		Если ПечатныеФормы.НайтиСтроки(Новый Структура("ТабличныйДокумент", ТабличныйДокумент)).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВычислитьИспользованиеВывода(ТабличныйДокумент) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТабличныйДокумент.Защита Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТабличныйДокумент.ВысотаТаблицы = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПечатнойФормы = ПечатныеФормы.Добавить();
		ОписаниеПечатнойФормы.Название = НастройкаПечатнойФормы.Название;
		ОписаниеПечатнойФормы.ТабличныйДокумент = ТабличныйДокумент;
	КонецЦикла;
	
	СписокОбъектов = Параметры.ПараметрКоманды;
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Параметры.ПараметрКоманды) Тогда
		СписокОбъектов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.ПараметрКоманды);
	КонецЕсли;
	
	ИнтеграцияПодсистемБСП.ПередОтправкойПоПочте(Результат, ПараметрыВывода, СписокОбъектов, ПечатныеФормы);
	УправлениеПечатьюПереопределяемый.ПередОтправкойПоПочте(Результат, ПараметрыВывода, СписокОбъектов, ПечатныеФормы);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПечатныеФормыПоПочтеНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ИмяОткрываемойФормы = "ОбщаяФорма.ВыборФорматаВложений";
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") 
		И СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().ИспользоватьПочтовыйКлиент Тогда
			Если ПолучателейБольшеОдного(ПараметрыВывода.ПараметрыОтправки.Получатель) Тогда
				ПараметрыФормы.Вставить("Получатели", ПараметрыВывода.ПараметрыОтправки.Получатель);
				ИмяОткрываемойФормы = "ОбщаяФорма.ПодготовкаНовогоПисьма";
			КонецЕсли;
	КонецЕсли;
	
	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ТабличныеДокументыДляПечати()
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить И НастройкаПечатнойФормы.Печатать Тогда
			ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
			ТабличныйДокумент = Новый ТабличныйДокумент;
			ТабличныйДокумент.Вывести(ПечатнаяФорма);
			ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ПечатнаяФорма, УправлениеПечатью.КопируемыеСвойстваТабличногоДокумента());
			ТабличныйДокумент.КоличествоЭкземпляров = НастройкаПечатнойФормы.Количество;
			ТабличныеДокументы.Добавить(ТабличныйДокумент, НастройкаПечатнойФормы.Представление);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабличныеДокументы;
КонецФункции

&НаКлиенте
Процедура СохранитьНастройки()
	СохраняемыеНастройкиПечатныхФорм = Новый Массив;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		СохраняемаяНастройка = Новый Структура;
		СохраняемаяНастройка.Вставить("ИмяМакета", НастройкаПечатнойФормы.ИмяМакета);
		СохраняемаяНастройка.Вставить("Количество", ?(НастройкаПечатнойФормы.Печатать,НастройкаПечатнойФормы.Количество, 0));
		СохраняемаяНастройка.Вставить("ПозицияПоУмолчанию", НастройкаПечатнойФормы.ПозицияПоУмолчанию);
		СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
	КонецЦикла;
	СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
КонецПроцедуры

&НаКлиенте
Процедура НачатьСохранениеНастроек()
	ОтключитьОбработчикОжидания("СохранитьНастройки");
	Если ПустаяСтрока(КлючНастроек) Тогда
		Возврат;
	КонецЕсли;
	ПодключитьОбработчикОжидания("СохранитьНастройки", 2, Истина);
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиСохранения()

	Возврат УправлениеПечатью.НастройкиСохранения();

КонецФункции

// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент -
// Возвращаемое значение:
// 	Булево -
&НаСервереБезКонтекста
Функция ЕстьПодписьИПечать(ТабличныйДокумент)
	
	Если Не УправлениеПечатью.НастройкиПечати().ИспользоватьПодписиИПечати Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Рисунок Из ТабличныйДокумент.Рисунки Цикл
		Для Каждого Префикс Из УправлениеПечатью.ПрефиксыИменОбластейСПодписьюИПечатью() Цикл
			Если СтрНачинаетсяС(Рисунок.Имя, Префикс) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ДобавитьПодписьИПечать()
	
	ПодписиИПечатиОбластей = УправлениеПечатью.ПодписиИПечатиОбластей(ОбъектыПечати);
	
	ПодписиИПечати = Неопределено;
	Если ЭтоАдресВременногоХранилища(АдресХранилищаРисунков) Тогда
		ПодписиИПечати = ПолучитьИзВременногоХранилища(АдресХранилищаРисунков);
	КонецЕсли;
	
	ОбработанныеТабличныеДокументы = Новый Соответствие;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Не НастройкаПечатнойФормы.ПодписьИПечать Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизитаСТабличнымДокументом = НастройкаПечатнойФормы.ИмяРеквизита;
		Если ОбработанныеТабличныеДокументы[ИмяРеквизитаСТабличнымДокументом] <> Неопределено Тогда
			Продолжить;
		Иначе
			ОбработанныеТабличныеДокументы.Вставить(ИмяРеквизитаСТабличнымДокументом, Истина);
		КонецЕсли;
		
		ТабличныйДокумент = ЭтотОбъект[ИмяРеквизитаСТабличнымДокументом]; // ТабличныйДокумент -
		
		Если ПодписиИПечати <> Неопределено Тогда
			РисункиТабличногоДокумента = ПодписиИПечати[ИмяРеквизитаСТабличнымДокументом];
			Для Каждого СохраненныйРисунок Из РисункиТабличногоДокумента Цикл
				НовыйРисунок = ТабличныйДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
				ЗаполнитьЗначенияСвойств(НовыйРисунок, СохраненныйРисунок);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ДобавитьПодписьИПечать(ТабличныйДокумент, ПодписиИПечатиОбластей);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УбратьПодписьИПечать()
	
	ПодписиИПечати = Новый Структура;
	СкрыватьПодписиИПечати = УправлениеПечатью.НастройкиПечати().СкрыватьПодписиИПечатиДляРедактирования;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Не НастройкаПечатнойФормы.ПодписьИПечать Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		УправлениеПечатью.УбратьПодписьИПечать(ТабличныйДокумент, СкрыватьПодписиИПечати);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодписиИПечатиТабличногоДокумента(ТабличныйДокумент)
	
	РисункиТабличногоДокумента = Новый Массив;
	
	Для Каждого Рисунок Из ТабличныйДокумент.Рисунки Цикл
		Если УправлениеПечатью.ЭтоПодписьИлиПечать(Рисунок) Тогда
			ОписаниеРисунка = Новый Структура("Лево,Верх,Ширина,Высота,Картинка,Владелец,ЦветФона,Имя,Линия");
			ЗаполнитьЗначенияСвойств(ОписаниеРисунка, Рисунок);
			РисункиТабличногоДокумента.Добавить(ОписаниеРисунка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РисункиТабличногоДокумента;
	
КонецФункции

&НаСервере
Функция ПодписиИПечатиТабличныхДокументов()
	
	ПодписиИПечати = Новый Структура;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Не НастройкаПечатнойФормы.ПодписьИПечать Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		РисункиТабличногоДокумента = ПодписиИПечатиТабличногоДокумента(ТабличныйДокумент);
		
		Если Не ПодписиИПечати.Свойство(НастройкаПечатнойФормы.ИмяРеквизита) Тогда
			ПодписиИПечати.Вставить(НастройкаПечатнойФормы.ИмяРеквизита, РисункиТабличногоДокумента);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПодписиИПечати;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьУдалитьПодписьПечать()
	
	Если ПодписьИПечать Тогда
		ДобавитьПодписьИПечать();
	Иначе
		УбратьПодписьИПечать();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриВыполненииКомандыНаСервере(ДополнительныеПараметры)
	
	ИнтеграцияПодсистемБСП.ПечатьДокументовПриВыполненииКоманды(ЭтотОбъект, ДополнительныеПараметры);
	УправлениеПечатьюПереопределяемый.ПечатьДокументовПриВыполненииКоманды(ЭтотОбъект, ДополнительныеПараметры);
	
КонецПроцедуры

// Выполняет расчет и вывод показателей выделенной области ячеек.
// См. обработчик события ОтчетТабличныйДокументПриАктивизацииОбласти.
//
&НаКлиенте
Процедура РассчитатьПоказателиДинамически()
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ТекущаяПечатнаяФорма");
КонецПроцедуры

#КонецОбласти
