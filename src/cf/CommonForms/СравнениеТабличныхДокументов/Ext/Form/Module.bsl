///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Операция не доступна в мобильном клиенте, используйте тонкий клиент.'");
	КонецЕсли;
	
	ТабличныеДокументыДляСравнения = ПолучитьИзВременногоХранилища(Параметры.АдресТабличныхДокументов);
	УдалитьИзВременногоХранилища(Параметры.АдресТабличныхДокументов);
	ТабличныйДокументЛевый = ПодготовитьТабличныйДокумент(ТабличныеДокументыДляСравнения.Левый);
	ТабличныйДокументПравый = ПодготовитьТабличныйДокумент(ТабличныеДокументыДляСравнения.Правый);
	
	Элементы.ГруппаЛевыйТабличныйДокумент.Заголовок = Параметры.ЗаголовокЛевый;
	Элементы.ГруппаПравыйТабличныйДокумент.Заголовок = Параметры.ЗаголовокПравый;
	
	Если Не ПустаяСтрока(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	БлокировкаОбработкиАктивизации = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("НачатьСравнениеНаКлиенте", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТабличныйДокументЛевый

&НаКлиенте
Процедура ТабличныйДокументЛевыйПриАктивизации(Элемент)
	
	Если БлокировкаОбработкиАктивизации = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Источник = Новый Структура("Объект, Элемент", ТабличныйДокументЛевый, Элементы.ТабличныйДокументЛевый);
	Приемник = Новый Структура("Объект, Элемент", ТабличныйДокументПравый, Элементы.ТабличныйДокументПравый);
	
	СоответствияИсточник = Новый Структура("Строки, Столбцы", СоответствиеСтрокЛевый, СоответствиеСтолбцовЛевый);
	СоответствияПриемник = Новый Структура("Строки, Столбцы", СоответствиеСтрокПравый, СоответствиеСтолбцовПравый);
	
	ОбработатьАктивизациюОбласти(Источник, Приемник, СоответствияИсточник, СоответствияПриемник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТабличныйДокументПравый

&НаКлиенте
Процедура ТабличныйДокументПравыйПриАктивизации(Элемент)
	
	Если БлокировкаОбработкиАктивизации = Истина Тогда
		Возврат;
	КонецЕсли;
		
	Источник = Новый Структура("Объект, Элемент", ТабличныйДокументПравый, Элементы.ТабличныйДокументПравый);
	Приемник = Новый Структура("Объект, Элемент", ТабличныйДокументЛевый, Элементы.ТабличныйДокументЛевый);
	
	СоответствияИсточник = Новый Структура("Строки, Столбцы", СоответствиеСтрокПравый, СоответствиеСтолбцовПравый);
	СоответствияПриемник = Новый Структура("Строки, Столбцы", СоответствиеСтрокЛевый, СоответствиеСтолбцовЛевый);
	
	ОбработатьАктивизациюОбласти(Источник, Приемник, СоответствияИсточник, СоответствияПриемник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПредыдущееИзменениеЛевый(Команда)
	
	ПредыдущееИзменение(Элементы.ТабличныйДокументЛевый, ТабличныйДокументЛевый, РазличияЯчеекЛевый);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредыдущееИзменениеПравый(Команда)
	
	ПредыдущееИзменение(Элементы.ТабличныйДокументПравый, ТабличныйДокументПравый, РазличияЯчеекПравый);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСледующееИзменениеЛевый(Команда)
	
	СледующееИзменение(Элементы.ТабличныйДокументЛевый, ТабличныйДокументЛевый, РазличияЯчеекЛевый);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСледующееИзменениеПравый(Команда)
	
	СледующееИзменение(Элементы.ТабличныйДокументПравый, ТабличныйДокументПравый, РазличияЯчеекПравый);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НачатьСравнениеНаКлиенте()
	
	БлокировкаОбработкиАктивизации = Истина;
			
	СоответствиеСтрокЛевый = Новый СписокЗначений;
	СоответствиеСтрокПравый = Новый СписокЗначений;
	
	СоответствиеСтолбцовЛевый = Новый СписокЗначений;
	СоответствиеСтолбцовПравый = Новый СписокЗначений;
	
	РазличияЯчеекЛевый.Очистить();
	РазличияЯчеекПравый.Очистить();
	
	ДлительнаяОперация = НачатьСравнениеНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВывестиРезультатНаКлиенте", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется сравнение документов.'");
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция НачатьСравнениеНаСервере()
	
	ТаблицаЛевогоДокумента = ПрочитатьТабличныйДокумент(ТабличныйДокументЛевый);
	ТаблицаПравогоДокумента = ПрочитатьТабличныйДокумент(ТабличныйДокументПравый);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "СтандартныеПодсистемыСервер.СравнитьТаблицы",
		ТаблицаЛевогоДокумента, ТаблицаПравогоДокумента);
		
КонецФункции

&НаКлиенте
Процедура ВывестиРезультатНаКлиенте(Результат, ДополнительныеПараметры) Экспорт
	
	БлокировкаОбработкиАктивизации = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		СтандартныеПодсистемыКлиент.ВывестиИнформациюОбОшибке(Результат.ИнформацияОбОшибке);
		Возврат;
	КонецЕсли;
	
	ВывестиРезультатНаСервере(Результат.АдресРезультата);
	СледующееИзменение(Элементы.ТабличныйДокументЛевый, ТабличныйДокументЛевый, РазличияЯчеекЛевый);
	
КонецПроцедуры 

&НаСервере
Процедура ВывестиРезультатНаСервере(АдресРезультата)
	
#Область Сравнение
	
	РезультатСравнения = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	// Сравниваются табличные документы по строкам и подбираются соответствия строк.
	Соответствия = РезультатСравнения.СоответствияСтрок;
	СоответствиеСтрокЛевый = Соответствия[0];
	СоответствиеСтрокПравый = Соответствия[1];
	
	// Сравниваются табличные документы по столбцам и подбираются соответствия столбцов.
	Соответствия = РезультатСравнения.СоответствияСтолбцов;
	СоответствиеСтолбцовЛевый = Соответствия[0];
	СоответствиеСтолбцовПравый = Соответствия[1];
	
	ТаблицаЛевогоДокумента = Неопределено;
	ТаблицаПравогоДокумента = Неопределено;
	
#КонецОбласти
	
#Область ГрафическоеОтображениеРазличий
	
	ЦветОбластиУдаленнойФон	= ЦветаСтиля.УдаленныйРеквизитФон;
	ЦветОбластиДобавленнойФон	= ЦветаСтиля.ДобавленныйРеквизитФон;
	ЦветОбластиИзмененнойФон	= ЦветаСтиля.ИзмененноеЗначениеРеквизитаФон;
	ЦветОбластиИзмененнойТекст	= ЦветаСтиля.ИзмененноеЗначениеРеквизитаЦвет;
		
	
	ВысотаЛевойТаблицы = ТабличныйДокументЛевый.ВысотаТаблицы;
	ШиринаЛевойТаблицы = ТабличныйДокументЛевый.ШиринаТаблицы;
	
	ВысотаПравойТаблицы = ТабличныйДокументПравый.ВысотаТаблицы;
	ШиринаПравойТаблицы = ТабличныйДокументПравый.ШиринаТаблицы;

	// Строки которые были удалены из левого табличного документа.
	Для НомерСтроки = 1 По СоответствиеСтрокЛевый.Количество()-1 Цикл
		
		Если СоответствиеСтрокЛевый[НомерСтроки].Значение = Неопределено Тогда
			
			Область = ТабличныйДокументЛевый.Область(НомерСтроки, 1, НомерСтроки, ШиринаЛевойТаблицы);
			Область.ЦветФона = ЦветОбластиУдаленнойФон;
			
			НоваяСтрокаРазличий = РазличияЯчеекЛевый.Добавить();
			НоваяСтрокаРазличий.НомерСтроки = НомерСтроки;
			НоваяСтрокаРазличий.НомерСтолбца = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Столбцы которые были удалены из левого табличного документа.
	Для НомерСтолбца = 1 По СоответствиеСтолбцовЛевый.Количество()-1 Цикл
		
		Если СоответствиеСтолбцовЛевый[НомерСтолбца].Значение = Неопределено Тогда
			
			Область = ТабличныйДокументЛевый.Область(1, НомерСтолбца, ВысотаЛевойТаблицы, НомерСтолбца);
			Область.ЦветФона = ЦветОбластиУдаленнойФон;
			
			НоваяСтрокаРазличий = РазличияЯчеекЛевый.Добавить();
			НоваяСтрокаРазличий.НомерСтроки = 0;
			НоваяСтрокаРазличий.НомерСтолбца = НомерСтолбца;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Строки которые были добавлены в правый табличный документ.
	Для НомерСтроки = 1 По СоответствиеСтрокПравый.Количество()-1 Цикл
		
		Если СоответствиеСтрокПравый[НомерСтроки].Значение = Неопределено Тогда
			
			Область = ТабличныйДокументПравый.Область(НомерСтроки, 1, НомерСтроки, ШиринаПравойТаблицы);
			Область.ЦветФона = ЦветОбластиДобавленнойФон;
			
			НоваяСтрокаРазличий = РазличияЯчеекПравый.Добавить();
			НоваяСтрокаРазличий.НомерСтроки = НомерСтроки;
			НоваяСтрокаРазличий.НомерСтолбца = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Столбцы которые были добавлены в правый табличный документ.
	Для НомерСтолбца = 1 По СоответствиеСтолбцовПравый.Количество()-1 Цикл
		
		Если СоответствиеСтолбцовПравый[НомерСтолбца].Значение = Неопределено Тогда
			
			Область = ТабличныйДокументПравый.Область(1, НомерСтолбца, ВысотаПравойТаблицы, НомерСтолбца);
			Область.ЦветФона = ЦветОбластиДобавленнойФон;
			
			НоваяСтрокаРазличий = РазличияЯчеекПравый.Добавить();
			НоваяСтрокаРазличий.НомерСтроки = 0;
			НоваяСтрокаРазличий.НомерСтолбца = НомерСтолбца;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Ячейки которые были изменены.
	Для НомерСтроки1 = 1 По СоответствиеСтрокЛевый.Количество()-1 Цикл
		
		НомерСтроки2 = СоответствиеСтрокЛевый[НомерСтроки1].Значение;
		Если НомерСтроки2 = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для НомерСтолбца1 = 1 По СоответствиеСтолбцовЛевый.Количество()-1 Цикл
			
			НомерСтолбца2 = СоответствиеСтолбцовЛевый[НомерСтолбца1].Значение;
			Если НомерСтолбца2 = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Область1 = ТабличныйДокументЛевый.Область(НомерСтроки1, НомерСтолбца1, НомерСтроки1, НомерСтолбца1);
			Область2 = ТабличныйДокументПравый.Область(НомерСтроки2, НомерСтолбца2, НомерСтроки2, НомерСтолбца2);
			
			Если НЕ СравнитьОбласти(Область1, Область2) Тогда
				
				Область1 = ТабличныйДокументЛевый.Область(НомерСтроки1, НомерСтолбца1);
				Область2 = ТабличныйДокументПравый.Область(НомерСтроки2, НомерСтолбца2);
				
				Область1.ЦветТекста = ЦветОбластиИзмененнойТекст;
				Область2.ЦветТекста = ЦветОбластиИзмененнойТекст;
				
				Область1.ЦветФона = ЦветОбластиИзмененнойФон;
				Область2.ЦветФона = ЦветОбластиИзмененнойФон;
				
				
				НоваяСтрокаРазличий = РазличияЯчеекЛевый.Добавить();
				НоваяСтрокаРазличий.НомерСтроки = НомерСтроки1;
				НоваяСтрокаРазличий.НомерСтолбца = НомерСтолбца1;
				
				НоваяСтрокаРазличий = РазличияЯчеекПравый.Добавить();
				НоваяСтрокаРазличий.НомерСтроки = НомерСтроки2;
				НоваяСтрокаРазличий.НомерСтолбца = НомерСтолбца2;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	РазличияЯчеекЛевый.Сортировать("НомерСтроки, НомерСтолбца");
	РазличияЯчеекПравый.Сортировать("НомерСтроки, НомерСтолбца");
	
#КонецОбласти
	
КонецПроцедуры

&НаСервере
Функция СравнитьОбласти(Область1, Область2)
	
	Если Область1.Текст <> Область2.Текст Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Область1.Примечание.Текст <> Область2.Примечание.Текст Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПрочитатьТабличныйДокумент(ТабличныйДокументИсточник)
	
	КоличествоСтолбцов = ТабличныйДокументИсточник.ШиринаТаблицы;
	
	Если КоличествоСтолбцов = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Для НомерСтолбца = 1 По КоличествоСтолбцов Цикл
		ТабличныйДокумент.Область(1, НомерСтолбца, 1, НомерСтолбца).Текст = "Номер_" + Формат(НомерСтолбца,"ЧГ=0");
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ТабличныйДокументИсточник);
	
	Построитель = Новый ПостроительЗапроса;
	
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область());
	Построитель.Выполнить();
	ТаблицаЗначенийРезультат = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаЗначенийРезультат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьАктивизациюОбласти(ТабДокИсточник, ТабДокПриемник, СоответствияИсточник, СоответствияПриемник)
	
	БлокировкаОбработкиАктивизации = Истина;
	
	ТекОбласть = ТабДокИсточник.Элемент.ТекущаяОбласть;
	
	Если ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Таблица Тогда
		
		ВыбраннаяОбласть = ТабДокПриемник.Область();
		
	Иначе
	
		Если ТекОбласть.Низ < СоответствияИсточник.Строки.Количество() Тогда
			НомерСтроки = СоответствияИсточник.Строки[ТекОбласть.Низ].Значение;
		Иначе
			НомерСтроки = ТекОбласть.Низ 
							- СоответствияИсточник.Строки.Количество()
								+ СоответствияПриемник.Строки.Количество();
		КонецЕсли;
		
		Если ТекОбласть.Лево < СоответствияИсточник.Столбцы.Количество() Тогда
			НомерСтолбца = СоответствияИсточник.Столбцы[ТекОбласть.Лево].Значение;
		Иначе
			НомерСтолбца = ТекОбласть.Лево
							- СоответствияИсточник.Столбцы.Количество()
								+ СоответствияПриемник.Столбцы.Количество();
		КонецЕсли;
		
		
		ВыбраннаяОбласть = Неопределено;
		
		Если ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
					
			Если НомерСтроки <> Неопределено И НомерСтолбца <> Неопределено Тогда
				ВыбраннаяОбласть = ТабДокПриемник.Объект.Область(НомерСтроки, НомерСтолбца);
			КонецЕсли;
					
		ИначеЕсли ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			
			Если НомерСтроки <> Неопределено Тогда
				ВыбраннаяОбласть = ТабДокПриемник.Объект.Область(НомерСтроки, 0, НомерСтроки, 0);
			КонецЕсли;
			
		ИначеЕсли ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
			
			Если НомерСтолбца <> Неопределено Тогда
				ВыбраннаяОбласть = ТабДокПриемник.Объект.Область(0, НомерСтолбца, 0, НомерСтолбца);
			КонецЕсли;
			
		Иначе		
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТабДокПриемник.Элемент.ТекущаяОбласть = ВыбраннаяОбласть;
	
	БлокировкаОбработкиАктивизации = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущееИзменение(ЭлементФормы, РеквизитФормы, ТаблицаРазличий)
	
	Перем Индекс;
	
	ТекЯчейка = ЭлементФормы.ТекущаяОбласть;
	НомерСтроки = ТекЯчейка.Верх;
	НомерСтолбца = ТекЯчейка.Лево;
	Для Каждого ТекСтрока Из ТаблицаРазличий Цикл
		Если ТекСтрока.НомерСтроки < НомерСтроки 
			ИЛИ ТекСтрока.НомерСтроки = НомерСтроки И ТекСтрока.НомерСтолбца < НомерСтолбца Тогда
			Индекс = ТаблицаРазличий.Индекс(ТекСтрока);
		ИначеЕсли ТекСтрока.НомерСтроки >= НомерСтроки И ТекСтрока.НомерСтолбца > НомерСтолбца Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Индекс <> Неопределено Тогда
		СтрокаРазличий = ТаблицаРазличий[Индекс];
		НомерСтроки = СтрокаРазличий.НомерСтроки;
		НомерСтолбца = СтрокаРазличий.НомерСтолбца;
		ЭлементФормы.ТекущаяОбласть = РеквизитФормы.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СледующееИзменение(ЭлементФормы, РеквизитФормы, ТаблицаРазличий)
	
	Перем Индекс;
	
	ТекЯчейка = ЭлементФормы.ТекущаяОбласть;
	НомерСтроки = ТекЯчейка.Верх;
	НомерСтолбца = ТекЯчейка.Лево;
	Для Каждого ТекСтрока Из ТаблицаРазличий Цикл
		Если ТекСтрока.НомерСтроки = НомерСтроки И ТекСтрока.НомерСтолбца > НомерСтолбца 
			ИЛИ ТекСтрока.НомерСтроки > НомерСтроки Тогда
			Индекс = ТаблицаРазличий.Индекс(ТекСтрока);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Индекс <> Неопределено Тогда
		СтрокаРазличий = ТаблицаРазличий[Индекс];
		НомерСтроки = СтрокаРазличий.НомерСтроки;
		НомерСтолбца = СтрокаРазличий.НомерСтолбца;
		ЭлементФормы.ТекущаяОбласть = РеквизитФормы.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПодготовитьТабличныйДокумент(ТабличныйДокумент)
	
	Если ТипЗнч(ТабличныйДокумент) = Тип("ТабличныйДокумент") Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ТабличныйДокумент); // ДвоичныеДанные - 
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Результат = Новый ТабличныйДокумент;
	Результат.Прочитать(ИмяВременногоФайла);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат Результат;

КонецФункции

#КонецОбласти