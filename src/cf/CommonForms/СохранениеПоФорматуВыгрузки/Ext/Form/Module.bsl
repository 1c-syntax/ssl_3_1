///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	// Место сохранения по умолчанию.
	ВариантВыгрузки = "СохранитьВПапку";
	
	Если ТипЗнч(Параметры.ОписаниеКомандыВыполнения) = Тип("Структура") Тогда
		
		ОписаниеКомандыВыполнения = Параметры.ОписаниеКомандыВыполнения; // Структура
		ОбъектыПечати = ОписаниеКомандыВыполнения.ОбъектыПечати; // Массив Из ДокументСсылка
		
		НастроитьДоступностьВариантовДействий(ОбъектыПечати, Параметры);
		
		Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
			
			ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто;
			Элементы.ФормаВыполнитьВыбранныйВариант.Отображение = ОтображениеКнопки.Картинка;
			
		КонецЕсли;
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСтраницуМестаСохранения();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если ВариантВыгрузки = "СохранитьВПапку" Тогда
		Настройки["ВариантВыгрузки"] = "СохранитьВПапку";
	Иначе
		Настройки["ВариантВыгрузки"] = "Присоединить";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантВыгрузкиПриИзменении(Элемент)
	
	УстановитьСтраницуМестаСохранения();
	ОчиститьСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогДляСохраненияФайловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыбранныйКаталог = Элемент.ТекстРедактирования;
	Оповещение = Новый ОписаниеОповещения("КаталогДляСохраненияФайловЗавершениеВыбора", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение,, ВыбранныйКаталог);
	
КонецПроцедуры

// Обработчик завершения выбора каталога сохраненных файлов.
//  См. Синтакс-помощник: ДиалогВыбораФайла.Показать()
// 
// Параметры:
//  Каталог - Строка
//  ДополнительныеПараметры - Структура
//
&НаКлиенте
Процедура КаталогДляСохраненияФайловЗавершениеВыбора(Каталог, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(Каталог) Тогда
		
		ВыбранныйКаталог = Каталог;
		ОчиститьСообщения();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьВыбранныйВариант(Команда)
	
	Если ВариантВыгрузки = "СохранитьВПапку"
	   И ПустаяСтрока(ВыбранныйКаталог) Тогда
		
		ТекстСообщения = НСтр("ru = 'Укажите папку'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "ВыбранныйКаталог");
		Возврат;
		
	КонецЕсли;
	
	СтрокаОшибки = "";
	СчетчикОшибок = 0;
	СчетчикЕщеОшибок = 0;
	КоличествоВыводимыхОшибокПрисоединений = 10;
	
	Если ВариантВыгрузки = "Присоединить" Тогда
		
		РезультатВыбора = Новый Структура;
		
		ОбъектыДляПрикрепления = Новый Массив;
		Для Каждого ОбъектПрикрепления Из ОбъектыПрикрепления Цикл
			
			Если Не ОбъектПрикрепления.Пометка Тогда
				
				СчетчикОшибок = СчетчикОшибок + 1;
				
				Если СчетчикОшибок < КоличествоВыводимыхОшибокПрисоединений Тогда
					СтрокаОшибки = СтрокаОшибки + ?(СчетчикОшибок = 1, " ", ", ") + ОбъектПрикрепления.Значение;
				Иначе
					СчетчикЕщеОшибок = СчетчикЕщеОшибок + 1;
				КонецЕсли;
				
			Иначе
				ОбъектыДляПрикрепления.Добавить(ОбъектПрикрепления.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
		РезультатВыбора.Вставить("ОбъектыДляПрикрепления", ОбъектыДляПрикрепления);
		
	КонецЕсли;
	
	Если СтрокаОшибки <> "" Тогда
		
		ОписаниеОповещенияПродолжениеВыгрузки = Новый ОписаниеОповещения(
			"ПродолжениеВыгрузки",
			ЭтотОбъект, 
			РезультатВыбора);
		
		Если СчетчикЕщеОшибок > 0 Тогда
			
			ТекстВопросаШаблон = НСтр("ru = 'Прикрепление не будет выполнено для объектов:
										| %1 ... и еще %2'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопросаШаблон,
				СтрокаОшибки,
				СчетчикЕщеОшибок);
			
		Иначе
			
			ТекстВопросаШаблон = НСтр("ru = 'Прикрепление не будет выполнено для объектов:
										| %1'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопросаШаблон, СтрокаОшибки);
			
		КонецЕсли;
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("Отменить", НСтр("ru = 'Отменить'"));
		Кнопки.Добавить("Продолжить", НСтр("ru = 'Продолжить'"));
		
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Недостаточно прав для прикрепления'");
		ПараметрыВопроса.БлокироватьВесьИнтерфейс = Истина;
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
		
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
			ОписаниеОповещенияПродолжениеВыгрузки,
			ТекстВопроса,
			Кнопки,
			ПараметрыВопроса);
		
	Иначе
		
		ОписаниеКоманды = ОписаниеКомандыВыполнения.ОписаниеКоманды;
		ОписаниеКоманды.Вставить("ВариантВыгрузки", ВариантВыгрузки);
		
		ВыполнитьКомандуВыгрузитьВФайл(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКомандыВыполнения.ОбъектыПечати,
			ВладелецФормы,
			ОписаниеКоманды);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьДоступностьВариантовДействий(ОбъектыПечати, Параметры)
	
	// настройка видимости
	ЕстьВозможностьСохранения = (ОбъектыПечати.Количество() > 0);
	
	ОбъектыПрикрепления = ОбъектыДляПрикрепления(ОбъектыПечати);
	Если ОбъектыПечати.Количество() = 1 Тогда
		
		ЕстьВозможностьПрисоединения = ОбъектыПрикрепления[0].Пометка;
		
	ИначеЕсли ЕстьВозможностьСохранения Тогда
		
		ЕстьВозможностьПрисоединения = Ложь;
		Для Каждого ОбъектДляПрикрепления Из ОбъектыПрикрепления Цикл
			ЕстьВозможностьПрисоединения = ЕстьВозможностьПрисоединения Или ОбъектДляПрикрепления.Пометка;
		КонецЦикла;
		
	Иначе
		
		ЕстьВозможностьПрисоединения = Ложь;
		
	КонецЕсли;
	
	ЭлементПрисоединения = Элементы.ВариантВыгрузки.СписокВыбора.НайтиПоЗначению("Присоединить");
	
	Если Не ЕстьВозможностьПрисоединения Тогда
		
		Элементы.ВариантВыгрузки.СписокВыбора.Удалить(ЭлементПрисоединения);
		ЭлементПрисоединения = Неопределено;
		ВариантВыгрузки = "СохранитьВПапку";
		Элементы.ВариантВыгрузки.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	РасширениеДляРаботыСФайламиПодключено = Параметры.РасширениеДляРаботыСФайламиПодключено;
	Элементы.ВыборВариантаВыгрузки.Видимость = (РасширениеДляРаботыСФайламиПодключено
												Или ЕстьВозможностьСохранения);
	Элементы.ВариантВыгрузки.Видимость = ЕстьВозможностьСохранения;
	Если Не ЕстьВозможностьСохранения Тогда
		
		Элементы.КаталогДляСохраненияФайлов.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		
	ИначеЕсли НЕ РасширениеДляРаботыСФайламиПодключено Тогда
		
		ВариантВыгрузки = "Присоединить";
		Элементы.ВариантВыгрузки.Доступность = Ложь;
		
	КонецЕсли;
	Элементы.КаталогДляСохраненияФайлов.Видимость = РасширениеДляРаботыСФайламиПодключено;
	
	Если ОбъектыПечати.Количество() > 1
	   И ЭлементПрисоединения <> Неопределено Тогда
		
		Шаблон = НСтр("ru = 'Присоединить к документам (%1)'");
		КоличествоСтрокой = Формат(ОбъектыПечати.Количество(), "ЧДЦ=0;");
		ЭлементПрисоединения.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Шаблон,
			КоличествоСтрокой);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжениеВыгрузки(РезультатВопроса, РезультатВыбора) Экспорт
	
	Если РезультатВопроса.Значение = "Отменить" Тогда
		Закрыть();
	Иначе
		
		ОписаниеКоманды = ОписаниеКомандыВыполнения.ОписаниеКоманды;
		ОписаниеКоманды.Вставить("ВариантВыгрузки", ВариантВыгрузки);
		
		ВыполнитьКомандуВыгрузитьВФайл(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			РезультатВыбора.ОбъектыДляПрикрепления,
			ВладелецФормы,
			ОписаниеКоманды);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбъектыДляПрикрепления(ОбъектыПечати)
	
	Результат = Новый СписокЗначений;
	МодульУправлениеДоступом = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
	КонецЕсли;
	
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		
		ИзменениеРазрешено = Истина;
		Если МодульУправлениеДоступом <> Неопределено Тогда
			ИзменениеРазрешено = МодульУправлениеДоступом.ИзменениеРазрешено(ОбъектПечати);
		КонецЕсли;
		Результат.Добавить(ОбъектПечати,, ИзменениеРазрешено);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Параметры:
//  ИмяМенеджераПечати - Строка - менеджер печати для выгружаемых объектов;
//  ИменаМакетов       - Строка - идентификаторы печатных форм;
//  МассивОбъектов     - ЛюбаяСсылка
//                     - Массив из ЛюбаяСсылка - объекты печати;
//  ВладелецФормы      - ФормаКлиентскогоПриложения - форма, из которой выполняется выгрузка;
//  ОписаниеКоманды    - Структура - произвольные параметры для передачи в менеджер печати.
//
&НаКлиенте
Процедура ВыполнитьКомандуВыгрузитьВФайл(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ВладелецФормы, ОписаниеКоманды)
	
	Если НЕ ПроверитьКоличествоПереданныхОбъектов(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = УправлениеПечатьюСлужебныйКлиент.ПараметрыОткрытияФормыПечати();
	ПараметрыОткрытия.ИмяМенеджераПечати = ИмяМенеджераПечати;
	ПараметрыОткрытия.ИменаМакетов = ИменаМакетов;
	ПараметрыОткрытия.ПараметрКоманды = МассивОбъектов;
	ПараметрыОткрытия.ПараметрыПечати = ОписаниеКоманды;
	
	Если ВладелецФормы = Неопределено Тогда
		ПараметрыОткрытия.УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	Иначе
		ПараметрыОткрытия.УникальныйИдентификаторХранилища = ВладелецФормы.УникальныйИдентификатор;
	КонецЕсли;
	
	АдресРезультата = ВыполнитьКомандуВыгрузкиВФайл(ПараметрыОткрытия);
	ВыполнитьКомандуВыгрузкиВФайлЗавершение(АдресРезультата, ОписаниеКоманды);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьКомандуВыгрузкиВФайл(Знач ПараметрыОткрытия)
	
	ОбъектыПечати = ПараметрыОткрытия.ПараметрКоманды;
	КомандыВыгрузки = ПараметрыОткрытия.ПараметрыПечати;
	УникальныйИдентификаторХранилища = ПараметрыОткрытия.УникальныйИдентификаторХранилища;
	НастройкиСохранения = УправлениеПечатью.НастройкиСохранения();
	НастройкиСохранения.ПереводитьИменаФайловВТранслит = ПереводитьИменаФайловВТранслит;
	
	ТаблицаФайлов = ВыгрузкаОбъектовВФайлы.СохранитьПоФорматуВФайл(КомандыВыгрузки, ОбъектыПечати, НастройкиСохранения);
	АдресРезультата = ПоместитьВоВременноеХранилище(ТаблицаФайлов, УникальныйИдентификаторХранилища);
	Возврат АдресРезультата;
	
КонецФункции

&НаКлиенте
Функция ПроверитьКоличествоПереданныхОбъектов(ПараметрКоманды)
	
	ОбъектыПереданы = Истина;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив")
	   И ПараметрКоманды.Количество() = 0 Тогда
		ОбъектыПереданы =  Ложь;
	КонецЕсли;
	
	Возврат ОбъектыПереданы;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьКомандуВыгрузкиВФайлЗавершение(АдресРезультата, ПараметрыПечати)
	
	ФайлыВоВременномХранилище = ОбработатьСообщенияИПоместитьРезультатВоВременноеХранилище(
		АдресРезультата,
		ПараметрыПечати);
	
	Если ФайлыВоВременномХранилище.Количество() > 0 Тогда
		
		Если ВариантВыгрузки = "СохранитьВПапку" Тогда
			
			СохранитьПечатныеФормыВКаталог(ФайлыВоВременномХранилище, ВыбранныйКаталог);
			
		Иначе
			
			ЗаписанныеОбъекты = ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище);
			
			Если ЗаписанныеОбъекты.Количество() > 0 Тогда
				ОповеститьОбИзменении(ТипЗнч(ЗаписанныеОбъекты[0]));
			КонецЕсли;
			Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
				МодульРаботаСФайламиСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиСлужебныйКлиент");
				МодульРаботаСФайламиСлужебныйКлиент.ОповеститьОбИзмененииФайлов(ЗаписанныеОбъекты);
			КонецЕсли;
			
			ПоказатьОповещениеПользователя(,, НСтр("ru = 'Сохранение завершено'"), БиблиотекаКартинок.Информация32);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция ОбработатьСообщенияИПоместитьРезультатВоВременноеХранилище(Знач АдресРезультата, Знач ПараметрыПечати)
	
	Представление = ПараметрыПечати.Представление;
	
	ФайлыВоВременномХранилище = Новый Массив;
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ТаблицаРезультата = Результат.ТаблицаФайлов;
		МассивОшибок = Результат.МассивОшибок;
		
		Для Каждого ТекстСообщения Из МассивОшибок Цикл
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;
		
	Иначе
		
		ТаблицаРезультата = Результат;
		
	КонецЕсли;
		
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Для Каждого ТекущиеДанныеФайла Из ТаблицаРезультата Цикл
		
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(
			ТекущиеДанныеФайла.ДвоичныеДанные,
			Новый УникальныйИдентификатор());
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		ОписаниеФайла.Вставить("Представление", ТекущиеДанныеФайла.ИмяФайла);
		ОписаниеФайла.Вставить("ОбъектВыгрузки", ТекущиеДанныеФайла.ОбъектВыгрузки);
		ФайлыВоВременномХранилище.Добавить(ОписаниеФайла);
		
	КонецЦикла;
	
	Если УпаковатьВАрхив Тогда
		
		ФайлыВоВременномХранилище = ПоместитьФайлыВАрхив(ФайлыВоВременномХранилище, Представление);
		
	КонецЕсли;
	
	Возврат ФайлыВоВременномХранилище;
	
КонецФункции

&НаКлиенте
Процедура СохранитьПечатныеФормыВКаталог(СписокФайловВоВременномХранилище, Знач ИмяКаталога = "")
	
	Если РасширениеДляРаботыСФайламиПодключено И ЗначениеЗаполнено(ИмяКаталога) Тогда
		ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога);
	Иначе
		
		ПриПодготовкеИменФайлов(СписокФайловВоВременномХранилище, "");
		Возврат;
		
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриПодготовкеИменФайлов", ЭтотОбъект, ИмяКаталога);
	ПараметрыПодготовки = УправлениеПечатьюКлиент.ПараметрыПодготовкиИменФайлов(
		СписокФайловВоВременномХранилище,
		ИмяКаталога,
		ОписаниеОповещения);
	ПодготовитьИменаФайловДляСохраненияВКаталог(ПараметрыПодготовки);
	
КонецПроцедуры

// Сохраняет файл в переданном каталоге, показывает окно оповещения о результатах сохранения
// 
// Параметры:
//  СписокФайловВоВременномХранилище - Массив из Структура:
//   * Представление - Строка
//   * АдресВоВременномХранилище - Строка
//  ИмяКаталога - Строка
//
&НаКлиенте
Процедура ПриПодготовкеИменФайлов(СписокФайловВоВременномХранилище, ИмяКаталога) Экспорт
	
	СохраняемыеФайлы = Новый Массив;
	
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		
		ИмяФайла = ФайлДляЗаписи.Представление;
		СохраняемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла, ФайлДляЗаписи.АдресВоВременномХранилище));
		
	КонецЦикла;
	
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
	ПараметрыСохранения.Диалог.Каталог = ИмяКаталога;
	ПараметрыСохранения.Интерактивно = Не ЗначениеЗаполнено(ИмяКаталога);
	ФайловаяСистемаКлиент.СохранитьФайлы(Неопределено, СохраняемыеФайлы, ПараметрыСохранения);
	
#Если Не ВебКлиент Тогда
	
	Если ЗначениеЗаполнено(ИмяКаталога) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПапкуСохранения", ЭтотОбъект, ИмяКаталога);
		Шаблон = НСтр("ru = 'в папку %1'");
		ПутьСохранения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ИмяКаталога);
		Текст = НСтр("ru = 'Сохранение успешно завершено'");
		ПоказатьОповещениеПользователя(
			Текст,
			ОписаниеОповещения,
			ПутьСохранения,
			БиблиотекаКартинок.ДиалогИнформация);
		
	КонецЕсли;
	
#КонецЕсли

КонецПроцедуры

// Открывает проводник с указанным путем.
// 
// Параметры:
//  ИмяКаталога - Строка
//
&НаКлиенте
Процедура ОткрытьПапкуСохранения(ИмяКаталога) Экспорт
	
	ФайловаяСистемаКлиент.ОткрытьПроводник(ИмяКаталога);
	
КонецПроцедуры

// Параметры:
//  ПараметрыПодготовки - см. УправлениеПечатьюКлиент.ПараметрыПодготовкиИменФайлов
//
&НаКлиенте
Процедура ПодготовитьИменаФайловДляСохраненияВКаталог(ПараметрыПодготовки)
	
	УправлениеПечатьюКлиент.ПодготовитьИменаФайловДляСохраненияВКаталог(ПараметрыПодготовки);
	
КонецПроцедуры

// Помещает файл в архив.
// 
// Параметры:
//  ПечатныеФормыДокументов - Массив из Структура
//  ПредставлениеВАрхив - Строка
// 
// Возвращаемое значение:
//  Массив из Структура:
// * Представление - Строка
// * ОбъектПечати - Строка
// * АдресВоВременномХранилище - Строка
// 
&НаСервере
Функция ПоместитьФайлыВАрхив(ПечатныеФормыДокументов, ПредставлениеВАрхив)
	
	Перем ЗаписьZipФайла; // ЗаписьZipФайла
	ИмяАрхива = "";
	
	Результат = Новый Массив; // Массив из Структура
	
	УстанавливатьОбъектПечати = ВариантВыгрузки = "Присоединить";
	ИмяВременногоКаталога = ФайловаяСистема.СоздатьВременныйКаталог();
	СоответствиеДляАрхивов = Новый Соответствие;
	
	Для Каждого СтруктураФайла Из ПечатныеФормыДокументов Цикл
		
		ДанныеФайла = ПолучитьИзВременногоХранилища(СтруктураФайла.АдресВоВременномХранилище);
		УдалитьИзВременногоХранилища(СтруктураФайла.АдресВоВременномХранилище);
		ПолноеИмяФайла = ИмяВременногоКаталога + СтруктураФайла.Представление;
		ПолноеИмяФайла = ФайловаяСистема.УникальноеИмяФайла(ПолноеИмяФайла);
		ДанныеФайла.Записать(ПолноеИмяФайла);
		
		Если УстанавливатьОбъектПечати Тогда
			
			ОбъектВыгрузки = СтруктураФайла.ОбъектВыгрузки;
			
		Иначе
			
			ОбъектВыгрузки = Неопределено;
			
		КонецЕсли;
		
		Если СоответствиеДляАрхивов[ОбъектВыгрузки] = Неопределено Тогда
			
			ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
			ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
			ПараметрыЗаписи = Новый Структура("ЗаписьZipФайла, ИмяАрхива", ЗаписьZipФайла, ИмяАрхива);
			СоответствиеДляАрхивов.Вставить(ОбъектВыгрузки, ПараметрыЗаписи);
			
		КонецЕсли;
		
		СоответствиеДляАрхивов[ОбъектВыгрузки].ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
		
	КонецЦикла;
	
	Для Каждого АрхивОбъекта Из СоответствиеДляАрхивов Цикл
		
		ЗаписьZipФайла = АрхивОбъекта.Значение.ЗаписьZipФайла;
		ИмяАрхива = АрхивОбъекта.Значение.ИмяАрхива;
		ЗаписьZipФайла.Записать();
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
		ИмяФайлаВАрхив = ИмяФайлаДляАрхива(ПереводитьИменаФайловВТранслит, ПредставлениеВАрхив);
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление", ИмяФайлаВАрхив);
		ОписаниеФайла.Вставить("ОбъектВыгрузки", АрхивОбъекта.Ключ);
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		Результат.Добавить(ОписаниеФайла);
		ФайловаяСистема.УдалитьВременныйФайл(ИмяАрхива);
		
	КонецЦикла;
	
	ФайловаяСистема.УдалитьВременныйКаталог(ИмяВременногоКаталога);
	
	Возврат Результат;
	
КонецФункции

// Возвращает имя файла в архива.
// 
// Параметры:
//  ПереводитьИменаФайловВТранслит - Булево
//  ПредставлениеВАрхив - Строка
// 
// Возвращаемое значение:
//  Строка - имя файла для архива
// 
&НаСервере
Функция ИмяФайлаДляАрхива(ПереводитьИменаФайловВТранслит, ПредставлениеВАрхив)
	
	Результат = "";
	Если ПредставлениеВАрхив <> "" Тогда
		Результат = ПредставлениеВАрхив;
	Иначе
		Результат = НСтр("ru = 'Документы'");
	КонецЕсли;
	
	Если ПереводитьИменаФайловВТранслит Тогда
		Результат = СтроковыеФункции.СтрокаЛатиницей(Результат);
	КонецЕсли;
	
	Возврат Результат + ".zip";
	
КонецФункции

&НаСервере
Функция ПрисоединитьПечатныеФормыКОбъекту(Знач ФайлыВоВременномХранилище)
	
	Результат = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Каждого Файл Из ФайлыВоВременномХранилище Цикл
			
			Если МодульРаботаСФайлами.КОбъектуМожноПрисоединятьФайлы(Файл.ОбъектВыгрузки) Тогда
				
				ПараметрыФайла = МодульРаботаСФайлами.ПараметрыДобавленияФайла();
				ПараметрыФайла.ВладелецФайлов = Файл.ОбъектВыгрузки;
				ПараметрыФайла.ИмяБезРасширения = Файл.Представление;
				ПрисоединенныйФайл = МодульРаботаСФайлами.ДобавитьФайл(
					ПараметрыФайла, Файл.АдресВоВременномХранилище, , НСтр("ru = 'Выгрузка'"));
				Результат.Добавить(ПрисоединенныйФайл);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтраницуМестаСохранения()
	
	Если Элементы.КаталогДляСохраненияФайлов.Видимость Тогда
		Элементы.КаталогДляСохраненияФайлов.Доступность = (ВариантВыгрузки <> "Присоединить");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти