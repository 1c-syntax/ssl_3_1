///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если Не ОбменДаннымиВызовСервера.УзелВходитВПланыОбменаБСД(ПараметрКоманды) Тогда
		
		Текст = НСтр("ru = 'Команда не предназначена для данного типа узлов'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ПоказатьПредупреждение(, Текст);
		
		Возврат;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТранспортСообщенийОбменаВызовСервера.ТранспортПоУмолчанию(ПараметрКоманды)) Тогда
		
		Текст = НСтр("ru = 'Для узла не назначен тип транспорта по умолчанию'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ПоказатьПредупреждение(, Текст);
		
		Возврат;
		
	КонецЕсли;
	
	Отказ = Ложь;
	
	АдресНастроекПодключенияXML = "";
	АдресНастроекПодключенияJSON = "";
	
	ПолучитьНастройкиОбменаДаннымиДляВторойИнформационнойБазыНаСервере(Отказ, 
		ПараметрКоманды, АдресНастроекПодключенияXML, АдресНастроекПодключенияJSON);
	
	Если Отказ Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Возникли ошибки при получении настроек обмена данными.'"));
		Возврат;
		
	КонецЕсли;
	
	ПолучаемыеФайлы = Новый Массив;
	
	Если ЗначениеЗаполнено(АдресНастроекПодключенияXML) Тогда
		
		ИмяФайла = НСтр("ru = 'Настройки подключения'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()) + ".xml";
		ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресНастроекПодключенияXML));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресНастроекПодключенияJSON) Тогда
		
		ИмяФайла = НСтр("ru = 'Настройки подключения'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()) + ".json";
		ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресНастроекПодключенияJSON));
		
	КонецЕсли;
	
	Если ПолучаемыеФайлы.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("СохранитьФайлыНастроекПодключенияЗавершение", ЭтотОбъект);
		
		ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
		ПараметрыСохранения.Интерактивно = Истина;
			
		ФайловаяСистемаКлиент.СохранитьФайлы(Оповещение, ПолучаемыеФайлы, ПараметрыСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьНастройкиОбменаДаннымиДляВторойИнформационнойБазыНаСервере(Отказ,
	УзелИнформационнойБазы, АдресНастроекПодключенияXML, АдресНастроекПодключенияJSON)
	
	ПомощникСозданияОбменаДанными = ОбменДаннымиСервер.МодульПомощникСозданияОбменаДанными().Создать();
	ПомощникСозданияОбменаДанными.Инициализация(УзелИнформационнойБазы);
	
	СтрокаНастроекПодключенияXML = ТранспортСообщенийОбмена.НастройкиПодключенияВXML(ПомощникСозданияОбменаДанными);
	
	Если ЗначениеЗаполнено(СтрокаНастроекПодключенияXML) Тогда
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		Запись = Новый ЗаписьТекста;
		Запись.Открыть(ИмяВременногоФайла, "UTF-8");
		Запись.Записать(СтрокаНастроекПодключенияXML);
		Запись.Закрыть();
		
		АдресНастроекПодключенияXML = ПоместитьВоВременноеХранилище(
			Новый ДвоичныеДанные(ИмяВременногоФайла));
		
		УдалитьФайлы(ИмяВременногоФайла);
		
	КонецЕсли;
	
	СтрокаНастроекПодключенияJSON = ТранспортСообщенийОбмена.НастройкиПодключенияВJSON(ПомощникСозданияОбменаДанными);
	
	Если ЗначениеЗаполнено(СтрокаНастроекПодключенияJSON) Тогда
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		Запись = Новый ЗаписьТекста;
		Запись.Открыть(ИмяВременногоФайла, "UTF-8");
		Запись.Записать(СтрокаНастроекПодключенияJSON);
		Запись.Закрыть();
		
		АдресНастроекПодключенияJSON = ПоместитьВоВременноеХранилище(
			Новый ДвоичныеДанные(ИмяВременногоФайла));
		
		УдалитьФайлы(ИмяВременногоФайла);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлыНастроекПодключенияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстСообщения = НСтр("ru = 'Настройки подключения сохранены'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти
