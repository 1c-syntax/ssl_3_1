///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Корреспондент = ПараметрКоманды;
	ИдентификаторНастройки = "";
	
	Если ОбменДаннымиСВнешнейСистемой(Корреспондент, ИдентификаторНастройки) Тогда
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ОбменДаннымиСВнешнимиСистемами") Тогда
			
			Контекст = Новый Структура;
			Контекст.Вставить("ИдентификаторНастройки", ИдентификаторНастройки);
			Контекст.Вставить("Корреспондент", Корреспондент);
			Контекст.Вставить("Режим", "РедактированиеПараметровПодключения");
			
			Отказ = Ложь;
			ИмяФормыПомощника  = "";
			ПараметрыПомощника = Новый Структура;
			
			МодульОбменДаннымиСВнешнимиСистемамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбменДаннымиСВнешнимиСистемамиКлиент");
			МодульОбменДаннымиСВнешнимиСистемамиКлиент.ПередНастройкойПараметровПодключения(
				Контекст, Отказ, ИмяФормыПомощника, ПараметрыПомощника);
			
			Если Не Отказ Тогда
				ОткрытьФорму(ИмяФормыПомощника,
					ПараметрыПомощника, ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Отбор              = Новый Структура("Корреспондент", Корреспондент);
	ЗначенияЗаполнения = Новый Структура("Корреспондент", Корреспондент);
		
	РезультатПроверки = ЭтоОбменВРежимеСервисаЧерезWS(Корреспондент);
	Если РезультатПроверки.РазделениеВключено Тогда
		
		Если РезультатПроверки.ВидТранспортаПоУмолчанию = ПредопределенноеЗначение("Перечисление.ВидыТранспортаСообщенийОбмена.WS")
			Или РезультатПроверки.ВидТранспортаПоУмолчанию = ПредопределенноеЗначение("Перечисление.ВидыТранспортаСообщенийОбмена.WSПассивныйРежим") Тогда
		
			РазрешенныеНастройкиТранспорта = Новый Массив;
			РазрешенныеНастройкиТранспорта.Добавить(РезультатПроверки.ВидТранспортаПоУмолчанию);
			
			ПараметрыОткрытияФормы = Новый Структура;
			ПараметрыОткрытияФормы.Вставить("РазрешенныеНастройкиТранспорта", РазрешенныеНастройкиТранспорта);
						
		Иначе
			
			ТекстИсключения = НСтр("ru ='Настройка транспорта сообщений в режиме сервиса актуальна только для синхронизаций использующих ВЕБ-сервисы'");
			ВызватьИсключение ТекстИсключения;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбменДаннымиКлиент.ОткрытьФормуЗаписиРегистраСведенийПоОтбору(Отбор,
		ЗначенияЗаполнения, "НастройкиТранспортаОбменаДанными", ПараметрыВыполненияКоманды.Источник, , ПараметрыОткрытияФормы);
	
КонецПроцедуры

&НаСервере
Функция ОбменДаннымиСВнешнейСистемой(Корреспондент, ИдентификаторНастройки = "")
	
	ВидТранспорта = РегистрыСведений.НастройкиТранспортаОбменаДанными.ВидТранспортаСообщенийОбменаПоУмолчанию(Корреспондент);
	
	ИдентификаторНастройки = ОбменДаннымиСервер.СохраненныйВариантНастройкиУзлаПланаОбмена(Корреспондент);
	
	Возврат ВидТранспорта = Перечисления.ВидыТранспортаСообщенийОбмена.ВнешняяСистема;
	
КонецФункции

&НаСервере
Функция ЭтоОбменВРежимеСервисаЧерезWS(Корреспондент)
	
	РезультатПроверки = Новый Структура;
	РезультатПроверки.Вставить("РазделениеВключено", ОбщегоНазначения.РазделениеВключено());
	РезультатПроверки.Вставить("ВидТранспортаПоУмолчанию", РегистрыСведений.НастройкиТранспортаОбменаДанными.ВидТранспортаСообщенийОбменаПоУмолчанию(Корреспондент));
	
	Возврат РезультатПроверки;
	
КонецФункции
#КонецОбласти
