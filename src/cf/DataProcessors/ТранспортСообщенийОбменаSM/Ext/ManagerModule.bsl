///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// См. ОбработкаМенеджер.ТранспортСообщенийОбменаFILE.ПараметрыТранспорта
Функция ПараметрыТранспорта() Экспорт
	
	Описание = НСтр("ru = 'Обмен через управляющую программу в сервисе (Менеджер сервиса).'");
	
	Параметры = ТранспортСообщенийОбмена.СтруктураПараметровТранспорта();
	
	Параметры.Псевдоним = НСтр("ru = 'Обмен с приложением в сервисе'");
	Параметры.ИдентификаторТранспорта = "SM";
	Параметры.Описание = Описание;
	Параметры.ИмяФормыПервойНастройки = "ФормаПервойНастройки";
	Параметры.ЗапускОбменаИзКорреспондента = Истина;
	Параметры.ИспользоватьПрогресс = Ложь;
	Параметры.РежимРаботыПриложения = 1;
	Параметры.ПрямоеПодключение = Истина;
	Параметры.СохранитьПараметрыПодключенияВФайл = Ложь;
	Параметры.Картинка = БиблиотекаКартинок.ТранспортFresh;
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиПодключенияВXML(НастройкиПодключения) Экспорт
	
	РеквизитыУзла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		НастройкиПодключения.УзелИнформационнойБазы, "Код,НомерПринятого,НомерОтправленного");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("ПараметрыНастройки"); // @Non-NLS
	ЗаписьXML.ЗаписатьАтрибут("ВерсияФормата", ТранспортСообщенийОбмена.ВерсияФорматаНастроекОбменаДаннымиXML()); // @Non-NLS 
	
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsd", "http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("v8",  "http://v8.1c.ru/data");
	
	// Параметры подключения
	ЗаписьXML.ЗаписатьНачалоЭлемента("ОсновныеПараметрыОбмена"); // @Non-NLS

	ИмяПланаОбмена = ОбменДаннымиТрансляцияФорматаПовтИсп.ТранслироватьИмя(НастройкиПодключения.ИмяПланаОбмена, "ru");
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, ИмяПланаОбмена, "ИмяПланаОбмена"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.НаименованиеЭтойБазы,   "НаименованиеВторойБазы"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.НаименованиеВторойБазы, "НаименованиеЭтойБазы"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.КодУзла, "КодНовогоУзлаВторойБазы"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.ПрефиксИнформационнойБазыПриемника, "ПрефиксИнформационнойБазыИсточника"); // @Non-NLS
	
	// Настройки транспорта сообщений обмена
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Неопределено, "ВидТранспортаСообщенийОбмена"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, "", "ПарольАрхиваСообщенияОбмена"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Ложь, "ТранслитерацияИмениФайловСообщенийОбмена"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, "", "FILEКаталогОбменаИнформацией"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Ложь, "FILEСжиматьФайлИсходящегоСообщения"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Ложь, "ИспользоватьПараметрыТранспортаEMAIL"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Истина, "ИспользоватьПараметрыТранспортаFILE"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, Ложь, "ИспользоватьПараметрыТранспортаFTP"); // @Non-NLS
	
	// Поддержка файла настроек обмена формата версии 1.0.
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.НаименованиеЭтойБазы, "НаименованиеНастройкиВыполненияОбмена"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.КодУзла, "КодНовогоУзла"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, РеквизитыУзла.Код, "КодПредопределенногоУзла"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, РеквизитыУзла.НомерОтправленного, "НомерОтправленного"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, РеквизитыУзла.НомерПринятого, "НомерПринятого"); // @Non-NLS
	
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.WSКонечнаяТочкаКорреспондента, "WSКонечнаяТочкаКорреспондента"); // @Non-NLS
	ТранспортСообщенийОбмена.ДобавитьЗаписьXML(ЗаписьXML, НастройкиПодключения.WSОбластьДанныхКорреспондента, "WSОбластьДанныхКорреспондента"); // @Non-NLS
		
	ЗаписьXML.ЗаписатьКонецЭлемента(); // ОсновныеПараметрыОбмена
	
	Если ОбменДаннымиПовтИсп.ЭтоПланОбменаXDTO(НастройкиПодключения.ИмяПланаОбмена) Тогда
		ТранспортСообщенийОбмена.ЗаписатьПараметрыОбменаXDTO(ЗаписьXML, НастройкиПодключения.ИмяПланаОбмена);
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); // ПараметрыНастройки

	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

Функция НастройкиПодключенияИзXML(ТекстXML) Экспорт
			
	Настройки = Новый Структура;

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);

	Фабрика = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
		
	Если Фабрика.Свойства().Получить("ОсновныеПараметрыОбмена") <> Неопределено Тогда
		
		ОсновныеПараметры = Новый Структура;
		ОсновныеПараметрыXDTO = Фабрика["ОсновныеПараметрыОбмена"]; // @Non-NLS
		Для Каждого Свойство Из ОсновныеПараметрыXDTO.Свойства() Цикл
			ОсновныеПараметры.Вставить(Свойство.Имя, ОсновныеПараметрыXDTO[Свойство.Имя]); 
		КонецЦикла;
		
		Настройки.Вставить("ИмяПланаОбмена", ОсновныеПараметры["ИмяПланаОбмена"]); // @Non-NLS-2
		Настройки.Вставить("НаименованиеВторойБазы", ОсновныеПараметры["НаименованиеВторойБазы"]); // @Non-NLS-2
		Настройки.Вставить("НаименованиеЭтойБазы", ОсновныеПараметры["НаименованиеЭтойБазы"]); // @Non-NLS-2
		Настройки.Вставить("КодНовогоУзлаВторойБазы", ОсновныеПараметры["КодНовогоУзлаВторойБазы"]); // @Non-NLS-2
		Настройки.Вставить("ПрефиксИнформационнойБазыИсточника", ОсновныеПараметры["ПрефиксИнформационнойБазыИсточника"]); // @Non-NLS-2
		
		Настройки.Вставить("НаименованиеНастройкиВыполненияОбмена", ОсновныеПараметры["НаименованиеНастройкиВыполненияОбмена"]); // @Non-NLS-2
		Настройки.Вставить("КодНовогоУзла", ОсновныеПараметры["КодНовогоУзла"]); // @Non-NLS-2
		Настройки.Вставить("КодПредопределенногоУзла", ОсновныеПараметры["КодПредопределенногоУзла"]); // @Non-NLS-2
		Настройки.Вставить("ИдентификаторТранспорта", "SM");
		
		ТранспортСообщенийОбмена.СкопироватьЗначениеСтруктуры(ОсновныеПараметры, "НомерОтправленного", Настройки, "НомерОтправленного"); // @Non-NLS-1
		ТранспортСообщенийОбмена.СкопироватьЗначениеСтруктуры(ОсновныеПараметры, "НомерПринятого", Настройки, "НомерПринятого"); // @Non-NLS-1
		
	КонецЕсли;
	
	Если Фабрика.Свойства().Получить("ПараметрыОбменаXDTO") <> Неопределено Тогда
		
		ПараметрыОбмена = Новый Структура;
		ПараметрыОбменаXDTO = Фабрика["ПараметрыОбменаXDTO"];
		Для Каждого Свойство Из ПараметрыОбменаXDTO.Свойства() Цикл
			ПараметрыОбмена.Вставить(Свойство.Имя, ПараметрыОбменаXDTO[Свойство.Имя]); 
		КонецЦикла;
		
		Настройки.Вставить("ФорматОбмена", ПараметрыОбменаXDTO["ФорматОбмена"]); // @Non-NLS-2
		
	КонецЕсли;
		
	Возврат Настройки;
	
КонецФункции

Функция НастройкиТранспортаВJSON(НастройкиТранспорта) Экспорт
			
	Возврат Новый Структура;
	
КонецФункции

Функция НастройкиТранспортаИзJSON(НастройкиТранспортаJSON) Экспорт
	
	Возврат Новый Структура;
	
КонецФункции

Функция ИмяКаталогаСохраненияНастроек(НастройкиПодключения) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#КонецЕсли