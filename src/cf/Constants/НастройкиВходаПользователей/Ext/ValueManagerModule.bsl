///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем СтарыеНастройки; // Заполняется ПередЗаписью для использования ПриЗаписи.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	// АПК:75-выкл проверка ОбменДанными.Загрузка должна быть после записи изменений в журнал.
	ПодготовитьЗаписьИзмененийВЖурналРегистрации(СтарыеНастройки);
	// АПК:75-вкл
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// АПК:75-выкл проверка ОбменДанными.Загрузка должна быть после записи изменений в журнал.
	ЗаписатьИзмененияВЖурналРегистрации(СтарыеНастройки);
	// АПК:75-вкл
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  Структура:
//   * ОтдельныеНастройкиДляВнешнихПользователей - Булево
//   * ПросрочкаРаботыВПрограммеДоЗапрещенияВхода - Число
//   * ПросрочкаРаботыВПрограммеДоЗапрещенияВходаДляВнешнихПользователей - Число
//   * ПоказыватьВСпискеВыбора - Строка
//   * ПредупреждатьОбОкончанииСрокаРаботыВПрограмме - Число
//
Функция РегистрируемыеНастройки(НастройкиВхода)
	
	Результат = Новый Структура;
	Результат.Вставить("ВерсияСтруктурыДанных", 1);
	
	Результат.Вставить("ОтдельныеНастройкиДляВнешнихПользователей",
		НастройкиВхода.Общие.ОтдельныеНастройкиДляВнешнихПользователей);
	
	Результат.Вставить("ПросрочкаРаботыВПрограммеДоЗапрещенияВхода",
		НастройкиВхода.Пользователи.ПросрочкаРаботыВПрограммеДоЗапрещенияВхода);
	
	Результат.Вставить("ПросрочкаРаботыВПрограммеДоЗапрещенияВходаДляВнешнихПользователей",
		НастройкиВхода.ВнешниеПользователи.ПросрочкаРаботыВПрограммеДоЗапрещенияВхода);
	
	Результат.Вставить("ПоказыватьВСпискеВыбора",
		НастройкиВхода.Общие.ПоказыватьВСпискеВыбора);
	
	Результат.Вставить("ПредупреждатьОбОкончанииСрокаРаботыВПрограмме",
		НастройкиВхода.Общие.ПредупреждатьОбОкончанииСрокаРаботыВПрограмме);
	
	Возврат Результат;
	
КонецФункции

Процедура ПодготовитьЗаписьИзмененийВЖурналРегистрации(СтарыеНастройки)
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	СтарыеНастройки = РегистрируемыеНастройки(ПользователиСлужебный.НастройкиВхода());
	
	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
КонецПроцедуры

Процедура ЗаписатьИзмененияВЖурналРегистрации(СтарыеНастройки)
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	НовыеНастройки = РегистрируемыеНастройки(ПользователиСлужебный.НастройкиВхода());
	
	ЕстьИзменения = Ложь;
	Для Каждого КлючИЗначение Из НовыеНастройки Цикл
		Если СтарыеНастройки[КлючИЗначение.Ключ] <> КлючИЗначение.Значение Тогда
			ЕстьИзменения = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьИзменения Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		ПользователиСлужебный.ИмяСобытияИзменениеНастроекВходаДополнительноДляЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.СведенияОПользователях,
		ОбщегоНазначения.ЗначениеВСтрокуXML(НовыеНастройки),
		,
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
	
	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли